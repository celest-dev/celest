name: celest
on:
  pull_request:
    paths:
      - ".github/workflows/celest.yaml"
      - "packages/celest/**"

# Prevent duplicate runs due to Graphite
# https://graphite.dev/docs/troubleshooting#why-are-my-actions-running-twice
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}-${{ github.ref == 'refs/heads/main' && github.sha || ''}}
  cancel-in-progress: true

env:
  CELEST: ${{ github.workspace }}/apps/cli/bin/celest.dart
defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Git Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # 2.21.0
        with:
          cache: true
      - name: Install Turso CLI
        run: |
          curl -sSfL https://get.tur.so/install.sh | bash
          echo "PATH=$PATH:/home/runner/.turso" >> $GITHUB_ENV
        env:
          TURSO_INSTALL_SKIP_SIGNUP: 1
      - name: Get Packages
        working-directory: packages/celest
        run: |
          dart pub get
          flutter pub get -C example
          dart pub get -C example/celest
          dart pub get -C example/celest/client
          dart pub get -C tools/analyzer_plugin
      - name: Analyze
        working-directory: packages/celest
        run: dart analyze --fatal-infos --fatal-warnings
      - name: Format
        working-directory: packages/celest
        run: dart format --set-exit-if-changed .
      - name: Test
        working-directory: packages/celest
        run: dart test
        env:
          TURSO_API_TOKEN: ${{ secrets.TURSO_API_TOKEN }}
      - name: Test (dart2js)
        working-directory: packages/celest
        run: dart test -p chrome
      - name: Test (dart2wasm)
        working-directory: packages/celest
        run: dart test -p chrome -c dart2wasm
  test_darwin:
    needs: [test]
    runs-on: macos-latest-xlarge
    timeout-minutes: 20
    steps:
      - name: Git Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # 2.21.0
        with:
          cache: true
      - name: Get Packages
        working-directory: apps/cli
        run: dart pub get
      - name: Get Packages (Example)
        working-directory: packages/celest/example
        run: flutter pub get
      - name: Download iOS Platform
        run: xcodebuild -downloadPlatform iOS
      - name: Setup iOS Simulator
        run: |
          RUNTIME=$(xcrun simctl list runtimes | grep 'iOS 18' | tail -n 1 | cut -d' ' -f 7)
          echo "Using runtime: $RUNTIME"
          xcrun simctl create ios 'iPhone 16 Pro Max' $RUNTIME
          echo "Booting simulator"
          xcrun simctl boot ios
          echo "Booted simulator"
      - name: Integration Test (iOS)
        working-directory: packages/celest/example
        run: dart run $CELEST start --verbose -- flutter test -d ios integration_test
      - name: Integration Test (macOS)
        working-directory: packages/celest/example
        run: dart run $CELEST start --verbose -- flutter test -d macos integration_test
  test_android:
    needs: [test]
    runs-on: ubuntu-large
    timeout-minutes: 30
    steps:
      - name: Git Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # 2.21.0
        with:
          cache: true
      - name: Get Packages
        working-directory: apps/cli
        run: dart pub get
      - name: Get Packages (Example)
        working-directory: packages/celest/example
        run: flutter pub get
      - name: Build APK
        working-directory: packages/celest/example
        run: flutter build apk --debug
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Test (API 35)
        uses: ReactiveCircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # 2.34.0
        with:
          # Matches Flutter compileSdkVersion
          api-level: 35
          arch: x86_64
          working-directory: packages/celest/example
          script: dart run $CELEST start --verbose -- flutter test -d emulator integration_test
      # - name: Test (API 24)
      #   uses: ReactiveCircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # 2.34.0
      #   with:
      #     # Minimum supported API level
      #     api-level: 24
      #     arch: x86_64
      #     working-directory: packages/celest/example
      #     script: dart run $CELEST start --verbose -- flutter test -d emulator integration_test
  test_linux:
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Git Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # 2.21.0
        with:
          cache: true
      - name: Install Build Dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install -y clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
      - name: Setup Test Environment
        run: tool/setup-ci.sh
      - name: Get Packages
        working-directory: apps/cli
        run: dart pub get
      - name: Get Packages (Example)
        working-directory: packages/celest/example
        run: flutter pub get
      - name: Integration Test (Linux)
        working-directory: packages/celest/example
        run: |
          # Headless tests require virtual display for the linux tests to run.
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          dart run $CELEST start --verbose -- flutter test -d linux integration_test
  test_windows:
    needs: [test]
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
      - name: Git Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # 2.21.0
        with:
          cache: true
      - name: Get Packages
        working-directory: apps/cli
        run: dart pub get
      - name: Get Packages (Example)
        working-directory: packages/celest/example
        run: flutter pub get
      - name: Test (Windows)
        working-directory: packages/celest/example
        run: dart run "$CELEST" start --verbose -- flutter test -d windows integration_test
  test_web:
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Git Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # 2.21.0
        with:
          cache: true
      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@v2
      - name: Get Packages
        working-directory: apps/cli
        run: dart pub get
      - name: Get Packages (Example)
        working-directory: packages/celest/example
        run: flutter pub get
      - name: Start Chromedriver
        run: |
          # Headless tests require virtual display for the chromedriver tests to run.
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

          chromedriver --port=4444 &
      - name: Test (Web/JS)
        working-directory: packages/celest/example
        run: |
          dart run "$CELEST" start --verbose -- \
            flutter drive \
              --driver=test_driver/integration_test.dart \
              --target=integration_test/integration_test.dart \
              -d web-server \
              --debug \
              --browser-name=chrome \
              --no-headless
      - name: Test (Web/WASM)
        working-directory: packages/celest/example
        run: |
          dart run "$CELEST" start --verbose -- \
            flutter drive \
              --driver=test_driver/integration_test.dart \
              --target=integration_test/integration_test.dart \
              -d web-server \
              --debug \
              --browser-name=chrome \
              --no-headless \
              --wasm
