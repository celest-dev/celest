name: Distroless (Flutter)

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'apps/distroless/bin/list_sdks.dart'
      - 'apps/distroless/flutter/**'
      - '.github/workflows/distroless_flutter.yaml'
  schedule:
    # Every day at midnight UTC
    - cron: '0 0 * * *'

# Prevent duplicate runs due to Graphite
# https://graphite.dev/docs/troubleshooting#why-are-my-actions-running-twice
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}-${{ github.ref == 'refs/heads/main' && github.sha || ''}}
  cancel-in-progress: true

jobs:
  list_sdks:
    name: List SDKs
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
      - name: Setup Flutter
        uses: subosito/flutter-action@e938fdf56512cc96ef2f93601a5a40bde3801046 # 2.19.0
        with:
          channel: stable
          cache: true
      - name: Get Packages
        working-directory: apps/distroless
        run: dart pub get
      - name: List SDKs
        id: list_sdks
        working-directory: apps/distroless
        run: |
          SDKS=$(dart run bin/list_sdks.dart flutter)
          echo $SDKS
          echo "sdks=$SDKS" >> "$GITHUB_OUTPUT"
    outputs:
      sdks: ${{ steps.list_sdks.outputs.sdks }}

  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-large
    needs: list_sdks

    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        sdk: ${{ fromJSON(needs.list_sdks.outputs.sdks) }}

    steps:
      - name: Info
        run: |
          echo "Version: ${{ matrix.sdk.version }}"
          echo "Channel: ${{ matrix.sdk.channel }}"
          echo "Old Engine: ${{ matrix.sdk.oldEngine }}"

      - name: Git Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2

      # Set up Docker Buildx, the builder engine for multi-platform builds
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # 3.10.0
        # Optional: Specify a specific builder instance name
        # with:
        #   driver-opts: image=moby/buildkit:v0.12.4 # Pin buildkit version if needed

      # Login to Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # 3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check If Needed
        id: is_needed
        run: |
          # Check if the image already exists on Docker Hub
          BUILDER_IMAGE_NAME="celestdev/flutter-builder:${{ matrix.sdk.version }}"
          if docker manifest inspect "$BUILDER_IMAGE_NAME" > /dev/null 2>&1; then
            echo "Builder image already exists. Skipping build."
            echo "builder=false" >> "$GITHUB_OUTPUT"
          else
            echo "Builder image does not exist. Proceeding with build."
            echo "builder=true" >> "$GITHUB_OUTPUT"
          fi

          RUNTIME_IMAGE_NAME="celestdev/flutter-runtime:${{ matrix.sdk.version }}"
          if docker manifest inspect "$RUNTIME_IMAGE_NAME" > /dev/null 2>&1; then
            echo "Runtime image already exists. Skipping build."
            echo "runtime=false" >> "$GITHUB_OUTPUT"
          else
            echo "Runtime image does not exist. Proceeding with build."
            echo "runtime=true" >> "$GITHUB_OUTPUT"
          fi

          ENGINE_IMAGE_NAME="celestdev/flutter-engine:${{ matrix.sdk.version }}"
          if docker manifest inspect "$ENGINE_IMAGE_NAME" > /dev/null 2>&1; then
            echo "Engine image already exists. Skipping build."
            echo "engine=false" >> "$GITHUB_OUTPUT"
          else
            echo "Engine image does not exist. Proceeding with build."
            echo "engine=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and Push Image (engine)
        id: build-push-engine
        # Only run if the engine image is needed or if the workflow is triggered manually
        if: steps.is_needed.outputs.engine == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # 6.15.0
        with:
          context: apps/distroless/flutter/build
          file: ${{ matrix.sdk.oldEngine && 'apps/distroless/flutter/build/Dockerfile.old' || 'apps/distroless/flutter/build/Dockerfile' }}
          platforms: linux/amd64
          target: engine
          push: ${{ github.event_name != 'pull_request' }}
          tags: celestdev/flutter-engine:${{ matrix.sdk.version }}
          build-args: |
            FLUTTER_VERSION=${{ matrix.sdk.version }}
          cache-from: type=gha # Pull cache from GitHub Actions cache
          cache-to: type=gha,mode=max # Push cache to GitHub Actions cache (mode=max includes all layers)

      - name: Build and Push Image (builder)
        id: build-push-builder
        # Only run if the builder image is needed or if the workflow is triggered manually
        if: steps.is_needed.outputs.builder == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # 6.15.0
        with:
          context: apps/distroless/flutter/build
          file: ${{ matrix.sdk.oldEngine && 'apps/distroless/flutter/build/Dockerfile.old' || 'apps/distroless/flutter/build/Dockerfile' }}
          platforms: linux/amd64
          target: builder
          push: ${{ github.event_name != 'pull_request' }}
          tags: celestdev/flutter-builder:${{ matrix.sdk.version }}
          build-args: |
            FLUTTER_VERSION=${{ matrix.sdk.version }}
          cache-from: type=gha # Pull cache from GitHub Actions cache
          cache-to: type=gha,mode=max # Push cache to GitHub Actions cache (mode=max includes all layers)

      - name: Build and Push Image (runtime)
        id: build-push-runtime
        # Only run if the runtime image is needed or if the workflow is triggered manually
        if: steps.is_needed.outputs.runtime == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # 6.15.0
        with:
          context: apps/distroless/flutter/build
          file: ${{ matrix.sdk.oldEngine && 'apps/distroless/flutter/build/Dockerfile.old' || 'apps/distroless/flutter/build/Dockerfile' }}
          platforms: linux/amd64
          target: runtime
          push: ${{ github.event_name != 'pull_request' }}
          tags: celestdev/flutter-runtime:${{ matrix.sdk.version }}
          build-args: |
            FLUTTER_VERSION=${{ matrix.sdk.version }}
          cache-from: type=gha # Pull cache from GitHub Actions cache
          cache-to: type=gha,mode=max # Push cache to GitHub Actions cache (mode=max includes all layers)

      - name: Setup Flutter
        uses: subosito/flutter-action@e938fdf56512cc96ef2f93601a5a40bde3801046 # 2.19.0
        with:
          channel: ${{ matrix.sdk.channel }}
          flutter-version: ${{ matrix.sdk.version }}

      - name: Test Container
        working-directory: apps/distroless/flutter/test
        env:
          FLUTTER_VERSION: ${{ matrix.sdk.version }}
        run: |
          dart pub get
          ./test-docker.sh

    outputs:
      # Output the digest of the pushed images
      engine_image_digest: ${{ steps.build-push-engine.outputs.digest }}
      builder_image_digest: ${{ steps.build-push-builder.outputs.digest }}
      runtime_image_digest: ${{ steps.build-push-runtime.outputs.digest }}
