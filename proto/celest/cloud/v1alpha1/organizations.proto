// Since organizations represent root resources, some AIP rules do not apply.
// (-- api-linter: core::0132::method-signature=disabled --)
// (-- api-linter: core::0132::http-uri-parent=disabled --)
// (-- api-linter: core::0132::request-parent-behavior=disabled --)
// (-- api-linter: core::0133::request-parent-behavior=disabled --)

syntax = "proto3";

package celest.cloud.v1alpha1;

import "buf/validate/validate.proto";
import "celest/cloud/v1alpha1/common.proto";
import "celest/cloud/v1alpha1/operations.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/field_info.proto";
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "celest/cloud/v1alpha1;cloudv1alpha1";

// Allows users to manage organizations in Celest.
service Organizations {
  option (google.api.default_host) = "cloud.celest.dev";

  // Creates a new organization.
  rpc CreateOrganization(CreateOrganizationRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1alpha1/organizations"
      body: "organization"
    };
    option (google.api.method_signature) = "organization,organization_id";
    option (google.longrunning.operation_info) = {
      response_type: "Organization"
      metadata_type: "OperationMetadata"
    };
  }

  // Retrieves the organization identified by the specified name.
  rpc GetOrganization(GetOrganizationRequest) returns (Organization) {
    option (google.api.http) = { get: "/v1alpha1/{name=organizations/*}" };
    option (google.api.method_signature) = "name";
  }

  // Lists organizations.
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse) {
    option (google.api.http) = { get: "/v1alpha1/organizations" };
  }

  // Update the organization identified by the specified name.
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1alpha1/{organization.name=organizations/*}"
      body: "organization"
    };
    option (google.api.method_signature) = "organization,update_mask";
    option (google.longrunning.operation_info) = {
      response_type: "Organization"
      metadata_type: "OperationMetadata"
    };
  }

  // Marks an organization for deletion.
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = { delete: "/v1alpha1/{name=organizations/*}" };
    option (google.api.method_signature) = "name";
    option (google.longrunning.operation_info) = {
      response_type: "google.protobuf.Empty"
      metadata_type: "OperationMetadata"
    };
  }

  // Restores an organization that has been marked for deletion.
  rpc UndeleteOrganization(UndeleteOrganizationRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=organizations/*}:undelete"
      body: "*"
    };
    option (google.api.method_signature) = "name";
    option (google.longrunning.operation_info) = {
      response_type: "Organization"
      metadata_type: "OperationMetadata"
    };
  }

  // Renames the organization identified by the specified name.
  //
  // After renaming, the organization can no longer be identified by the previous name. All of its child resources are
  // also renamed and must be accessed using the new identifier.
  //
  // Renaming does not release the previous identifier from use. It is an error to attempt to create a new organization
  // with the same identifier as a previously renamed organization.
  //
  // (-- api-linter: core::0136::declarative-standard-methods-only=disabled
  //     aip.dev/not-precedent: Renaming is an inherently imperative method which should not be handled declaratively.
  //     https://google.aip.dev/136#declarative-friendly-resources --)
  rpc RenameOrganization(RenameOrganizationRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=organizations/*}:rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,organization_id";
    option (google.longrunning.operation_info) = {
      response_type: "Organization"
      metadata_type: "OperationMetadata"
    };
  }
}

// A root-level organization resource.
message Organization {
  option (google.api.resource) = {
    type: "cloud.celest.dev/Organization"
    pattern: "organizations/{organization}"
    plural: "organizations"
    singular: "organization"
    style: DECLARATIVE_FRIENDLY
  };

  // Identifier. The resource name of the organization.
  // Format: `organizations/{organization}`.
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // A system-generated unique identifier for the organization.
  string uid = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_info).format = UUID4
  ];

  // Optional. The parent of this organization.
  string parent = 3 [(google.api.field_behavior) = OPTIONAL];

  // Immutable. The unique, user-assigned id of the organization.
  // It must be 6 to 30 lowercase ASCII letters, digits, or hyphens.
  // It must start with a letter.
  // Trailing hyphens are prohibited.
  //
  // Example: `tokyo-rain-123`
  string organization_id = 4 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // Output only. The lifecycle state of the organization.
  LifecycleState state = 13 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Required. The display name of the organization.
  string display_name = 5 [(google.api.field_behavior) = REQUIRED];

  // Output only. The time the organization was created.
  google.protobuf.Timestamp create_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The time the organization was last updated.
  google.protobuf.Timestamp update_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The time the organization was soft-deleted.
  google.protobuf.Timestamp delete_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The time the organization is scheduled for permanent deletion.
  google.protobuf.Timestamp purge_time = 14 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. A checksum computed by the server based on the current value
  // of the Organization resource. This may be sent on update and delete requests to
  // ensure the client has an up-to-date value before proceeding.
  string etag = 9 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Optional. Client-provided key-value pairs that are not directly used by the system.
  map<string, string> annotations = 10 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).map = {
      max_pairs: 64,
      keys: {
        cel: {
          id: "valid_annotation_key",
          message: "keys must be 1-63 characters and have only lowercase letters, numerics, underscores, and dashes, and must start with a lowercase letter",
          expression: "this.matches('^[a-z][a-z0-9_-]{0,62}$')"
        }
      },
      values: {
        cel: {
          id: "valid_annotation_value",
          message: "values must be 0-63 characters and have only lowercase letters, numerics, underscores, and dashes",
          expression: "this.matches('^[a-z0-9_-]{0,63}$')"
        }
      },
    }
  ];

  // Output only. Indicates whether the organization is currently being reconciled.
  bool reconciling = 11 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Required. The primary region for the organization.
  //
  // Cannot be changed after creation.
  Region primary_region = 12 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the `CreateOrganization` method.
message CreateOrganizationRequest {
  // The parent organization, if this is a tenant organization.
  string parent = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference) = { child_type: "cloud.celest.dev/Organization" },
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED,
    (buf.validate.field).cel = {
      id: "valid_organization_parent",
      message: "parent must be empty or a valid organization name",
      expression: "this.matches('^organizations/[^/]+$')"
    }
  ];

  // The unique, user-assigned id of the organization.
  string organization_id = 2 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).cel = {
      id: "valid_organization_alias",
      message: "organization_id must be a valid organization alias",
      expression: "this.matches('^[a-z][a-z0-9-]{5,29}$')"
    }
  ];

  // The organization to create.
  Organization organization = 3 [(google.api.field_behavior) = REQUIRED];

  // If set to true, the request is validated but not actually executed.
  bool validate_only = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the `UpdateOrganization` method.
message UpdateOrganizationRequest {
  option (buf.validate.message).cel = {
    id: "valid_options",
    message: "cannot set both allow_missing and update_mask",
    expression: "this.allow_missing ? !has(this.update_mask) : true"
  };

  // Doesn't work at the field level for some reason.
  option (buf.validate.message).cel = {
    id: "valid_field_mask",
    message: "update_mask may only include: 'display_name', 'annotations'",
    // TODO: Allow changing phone number or email.
    // 'email', 'phone_number'
    //
    // Must include `name` since the update mask is set to `all` by default and `name` is a required field.
    expression: "this.update_mask.paths.all(path, path in ['name', 'display_name', 'annotations'])",
  };

  // The organization to update.
  Organization organization = 1 [(google.api.field_behavior) = REQUIRED];

  // The update mask applies to the organization.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];

  // If set to true, and the organization is not found, a new organization will be created.
  // In this situation, `update_mask` is ignored.
  bool allow_missing = 3 [(google.api.field_behavior) = OPTIONAL];

  // If set to true, the request is validated but not actually executed.
  bool validate_only = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the `GetOrganization` method.
message GetOrganizationRequest {
  // The name of the organization to retrieve.
  // Format: `organizations/{organization}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "cloud.celest.dev/Organization" },
    (buf.validate.field).cel = {
      id: "valid_organization",
      message: "name must be a valid organization name",
      expression: "this.matches('^organizations/[^/]+$')"
    }
  ];
}

// Request message for the `ListOrganizations` method.
message ListOrganizationsRequest {
  // The parent organization of the organizations to list.
  string parent = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference) = { child_type: "cloud.celest.dev/Organization" },
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED,
    (buf.validate.field).cel = {
      id: "valid_parent",
      message: "parent must be a valid parent",
      expression: "this.matches('^organizations/[^/]+$')"
    }
  ];

  // The maximum number of organizations to return.
  int32 page_size = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).int32.gte = 0
  ];

  // A page token, received from a previous `ListOrganizations` call.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // An optional filter to apply to the organizations.
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];

  // The order to sort the results by.
  string order_by = 5 [(google.api.field_behavior) = OPTIONAL];

  // Include soft-deleted organizations in the results.
  bool show_deleted = 6 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for the `ListOrganizations` method.
message ListOrganizationsResponse {
  // The organizations.
  repeated Organization organizations = 1;

  // A token to retrieve the next page of results.
  string next_page_token = 2;
}

// Request message for the `DeleteOrganization` method.
message DeleteOrganizationRequest {
  // Required. The name of the organization to delete.
  //
  // Format: `organizations/{organization}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "cloud.celest.dev/Organization" },
    (buf.validate.field).cel = {
      id: "valid_organization",
      message: "name must be a valid organization name",
      expression: "this.matches('^organizations/[^/]+$')"
    }
  ];

  // Optional. If set to true, any resources associated with the organization will also be marked for deletion.
  // (Otherwise, the request will only work if the organization has no resources.)
  bool force = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. The etag of the organization.
  // If this is provided, it must match the server's etag.
  string etag = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. If set to true, and the organization is not found, the request will succeed
  // but no action will be taken on the server.
  bool allow_missing = 4 [(google.api.field_behavior) = OPTIONAL];

  // Optional. If set to true, the request is validated but not actually executed.
  bool validate_only = 5 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the `UndeleteOrganization` method.
message UndeleteOrganizationRequest {
  // Required. The name of the organization to undelete.
  //
  // Format: `organizations/{organization}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "cloud.celest.dev/Organization" },
    (buf.validate.field).cel = {
      id: "valid_organization",
      message: "name must be a valid organization name",
      expression: "this.matches('^organizations/[^/]+$')"
    }
  ];

  // Optional. If set to true, the request is validated but not actually executed.
  bool validate_only = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. The etag of the organization.
  // If this is provided, it must match the server's etag.
  string etag = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the `RenameOrganization` operation.
message RenameOrganizationRequest {
  // The name of the organization to rename.
  // Format: `organizations/{organization}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "cloud.celest.dev/Organization" },
    (buf.validate.field).cel = {
      id: "valid_organization",
      message: "name must be a valid organization name",
      expression: "this.matches('^organizations/[^/]+$')"
    }
  ];

  // The new organization identifier.
  string organization_id = 2 [
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).cel = {
      id: "valid_organization_alias",
      message: "organization_id must be a valid organization alias",
      expression: "this.matches('^[a-z][a-z0-9-]{5,29}$')"
    }
  ];

  // Optional. The etag of the organization.
  // If this is provided, it must match the server's etag.
  string etag = 3 [(google.api.field_behavior) = OPTIONAL];

  // If set to true, the request is validated but not actually executed.
  bool validate_only = 4 [(google.api.field_behavior) = OPTIONAL];
}
