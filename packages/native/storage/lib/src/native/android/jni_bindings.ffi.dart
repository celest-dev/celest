// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: doc_directive_unknown
// ignore_for_file: file_names
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_cast
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name

import "dart:isolate" show ReceivePort;
import "dart:ffi" as ffi;
import "package:jni/internal_helpers_for_jnigen.dart";
import "package:jni/jni.dart" as jni;

/// from: dev.celest.native_storage.NativeStorage
class NativeStorage extends jni.JObject {
  @override
  late final jni.JObjType<NativeStorage> $type = type;

  NativeStorage.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class =
      jni.JClass.forName(r"dev/celest/native_storage/NativeStorage");

  /// The type which includes information such as the signature of this class.
  static const type = $NativeStorageType();
  static final _id_getContext = _class.instanceMethodId(
    r"getContext",
    r"()Landroid/content/Context;",
  );

  /// from: protected final android.content.Context getContext()
  /// The returned object must be released after use, by calling the [release] method.
  Context getContext() {
    return _id_getContext(this, const $ContextType(), []);
  }

  static final _id_getNamespace = _class.instanceMethodId(
    r"getNamespace",
    r"()Ljava/lang/String;",
  );

  /// from: protected final java.lang.String getNamespace()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getNamespace() {
    return _id_getNamespace(this, const jni.JStringType(), []);
  }

  static final _id_getSharedPreferences = _class.instanceMethodId(
    r"getSharedPreferences",
    r"()Landroid/content/SharedPreferences;",
  );

  /// from: protected abstract android.content.SharedPreferences getSharedPreferences()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSharedPreferences() {
    return _id_getSharedPreferences(this, const jni.JObjectType(), []);
  }

  static final _id_getAllKeys = _class.instanceMethodId(
    r"getAllKeys",
    r"()Ljava/util/List;",
  );

  /// from: public final java.util.List getAllKeys()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JList<jni.JString> getAllKeys() {
    return _id_getAllKeys(this, const jni.JListType(jni.JStringType()), []);
  }

  static final _id_write = _class.instanceMethodId(
    r"write",
    r"(Ljava/lang/String;Ljava/lang/String;)V",
  );

  /// from: public final void write(java.lang.String string, java.lang.String string1)
  void write(
    jni.JString string,
    jni.JString string1,
  ) {
    _id_write(this, const jni.jvoidType(),
        [string.reference.pointer, string1.reference.pointer]);
  }

  static final _id_read = _class.instanceMethodId(
    r"read",
    r"(Ljava/lang/String;)Ljava/lang/String;",
  );

  /// from: public final java.lang.String read(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString read(
    jni.JString string,
  ) {
    return _id_read(this, const jni.JStringType(), [string.reference.pointer]);
  }

  static final _id_delete = _class.instanceMethodId(
    r"delete",
    r"(Ljava/lang/String;)Ljava/lang/String;",
  );

  /// from: public final java.lang.String delete(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString delete(
    jni.JString string,
  ) {
    return _id_delete(
        this, const jni.JStringType(), [string.reference.pointer]);
  }

  static final _id_clear = _class.instanceMethodId(
    r"clear",
    r"()V",
  );

  /// from: public final void clear()
  void clear() {
    _id_clear(this, const jni.jvoidType(), []);
  }

  static final _id_new0 = _class.constructorId(
    r"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V",
  );

  /// from: public void <init>(android.content.Context context, java.lang.String string, java.lang.String string1, kotlin.jvm.internal.DefaultConstructorMarker defaultConstructorMarker)
  /// The returned object must be released after use, by calling the [release] method.
  factory NativeStorage(
    Context context,
    jni.JString string,
    jni.JString string1,
    jni.JObject defaultConstructorMarker,
  ) {
    return NativeStorage.fromReference(_id_new0(_class, referenceType, [
      context.reference.pointer,
      string.reference.pointer,
      string1.reference.pointer,
      defaultConstructorMarker.reference.pointer
    ]));
  }
}

final class $NativeStorageType extends jni.JObjType<NativeStorage> {
  const $NativeStorageType();

  @override
  String get signature => r"Ldev/celest/native_storage/NativeStorage;";

  @override
  NativeStorage fromReference(jni.JReference reference) =>
      NativeStorage.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($NativeStorageType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($NativeStorageType) &&
        other is $NativeStorageType;
  }
}

/// from: dev.celest.native_storage.NativeLocalStorage
class NativeLocalStorage extends NativeStorage {
  @override
  late final jni.JObjType<NativeLocalStorage> $type = type;

  NativeLocalStorage.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class =
      jni.JClass.forName(r"dev/celest/native_storage/NativeLocalStorage");

  /// The type which includes information such as the signature of this class.
  static const type = $NativeLocalStorageType();
  static final _id_new1 = _class.constructorId(
    r"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V",
  );

  /// from: public void <init>(android.content.Context context, java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  factory NativeLocalStorage.new1(
    Context context,
    jni.JString string,
    jni.JString string1,
  ) {
    return NativeLocalStorage.fromReference(_id_new1(_class, referenceType, [
      context.reference.pointer,
      string.reference.pointer,
      string1.reference.pointer
    ]));
  }

  static final _id_getSharedPreferences = _class.instanceMethodId(
    r"getSharedPreferences",
    r"()Landroid/content/SharedPreferences;",
  );

  /// from: protected android.content.SharedPreferences getSharedPreferences()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSharedPreferences() {
    return _id_getSharedPreferences(this, const jni.JObjectType(), []);
  }
}

final class $NativeLocalStorageType extends jni.JObjType<NativeLocalStorage> {
  const $NativeLocalStorageType();

  @override
  String get signature => r"Ldev/celest/native_storage/NativeLocalStorage;";

  @override
  NativeLocalStorage fromReference(jni.JReference reference) =>
      NativeLocalStorage.fromReference(reference);

  @override
  jni.JObjType get superType => const $NativeStorageType();

  @override
  final superCount = 2;

  @override
  int get hashCode => ($NativeLocalStorageType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($NativeLocalStorageType) &&
        other is $NativeLocalStorageType;
  }
}

/// from: dev.celest.native_storage.NativeSecureStorage
class NativeSecureStorage extends NativeStorage {
  @override
  late final jni.JObjType<NativeSecureStorage> $type = type;

  NativeSecureStorage.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class =
      jni.JClass.forName(r"dev/celest/native_storage/NativeSecureStorage");

  /// The type which includes information such as the signature of this class.
  static const type = $NativeSecureStorageType();
  static final _id_new1 = _class.constructorId(
    r"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V",
  );

  /// from: public void <init>(android.content.Context context, java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  factory NativeSecureStorage.new1(
    Context context,
    jni.JString string,
    jni.JString string1,
  ) {
    return NativeSecureStorage.fromReference(_id_new1(_class, referenceType, [
      context.reference.pointer,
      string.reference.pointer,
      string1.reference.pointer
    ]));
  }

  static final _id_getSharedPreferences = _class.instanceMethodId(
    r"getSharedPreferences",
    r"()Landroid/content/SharedPreferences;",
  );

  /// from: protected android.content.SharedPreferences getSharedPreferences()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSharedPreferences() {
    return _id_getSharedPreferences(this, const jni.JObjectType(), []);
  }
}

final class $NativeSecureStorageType extends jni.JObjType<NativeSecureStorage> {
  const $NativeSecureStorageType();

  @override
  String get signature => r"Ldev/celest/native_storage/NativeSecureStorage;";

  @override
  NativeSecureStorage fromReference(jni.JReference reference) =>
      NativeSecureStorage.fromReference(reference);

  @override
  jni.JObjType get superType => const $NativeStorageType();

  @override
  final superCount = 2;

  @override
  int get hashCode => ($NativeSecureStorageType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($NativeSecureStorageType) &&
        other is $NativeSecureStorageType;
  }
}

/// from: android.app.Activity$ScreenCaptureCallback
class Activity_ScreenCaptureCallback extends jni.JObject {
  @override
  late final jni.JObjType<Activity_ScreenCaptureCallback> $type = type;

  Activity_ScreenCaptureCallback.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class =
      jni.JClass.forName(r"android/app/Activity$ScreenCaptureCallback");

  /// The type which includes information such as the signature of this class.
  static const type = $Activity_ScreenCaptureCallbackType();
  static final _id_onScreenCaptured = _class.instanceMethodId(
    r"onScreenCaptured",
    r"()V",
  );

  /// from: public abstract void onScreenCaptured()
  void onScreenCaptured() {
    _id_onScreenCaptured(this, const jni.jvoidType(), []);
  }
}

final class $Activity_ScreenCaptureCallbackType
    extends jni.JObjType<Activity_ScreenCaptureCallback> {
  const $Activity_ScreenCaptureCallbackType();

  @override
  String get signature => r"Landroid/app/Activity$ScreenCaptureCallback;";

  @override
  Activity_ScreenCaptureCallback fromReference(jni.JReference reference) =>
      Activity_ScreenCaptureCallback.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($Activity_ScreenCaptureCallbackType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($Activity_ScreenCaptureCallbackType) &&
        other is $Activity_ScreenCaptureCallbackType;
  }
}

/// from: android.app.Activity
class Activity extends jni.JObject {
  @override
  late final jni.JObjType<Activity> $type = type;

  Activity.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class = jni.JClass.forName(r"android/app/Activity");

  /// The type which includes information such as the signature of this class.
  static const type = $ActivityType();

  /// from: static public final int DEFAULT_KEYS_DIALER
  static const DEFAULT_KEYS_DIALER = 1;

  /// from: static public final int DEFAULT_KEYS_DISABLE
  static const DEFAULT_KEYS_DISABLE = 0;

  /// from: static public final int DEFAULT_KEYS_SEARCH_GLOBAL
  static const DEFAULT_KEYS_SEARCH_GLOBAL = 4;

  /// from: static public final int DEFAULT_KEYS_SEARCH_LOCAL
  static const DEFAULT_KEYS_SEARCH_LOCAL = 3;

  /// from: static public final int DEFAULT_KEYS_SHORTCUT
  static const DEFAULT_KEYS_SHORTCUT = 2;
  static final _id_FOCUSED_STATE_SET = _class.staticFieldId(
    r"FOCUSED_STATE_SET",
    r"[I",
  );

  /// from: static protected final int[] FOCUSED_STATE_SET
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JArray<jni.jint> get FOCUSED_STATE_SET =>
      _id_FOCUSED_STATE_SET.get(_class, const jni.JArrayType(jni.jintType()));

  /// from: static public final int FULLSCREEN_MODE_REQUEST_ENTER
  static const FULLSCREEN_MODE_REQUEST_ENTER = 1;

  /// from: static public final int FULLSCREEN_MODE_REQUEST_EXIT
  static const FULLSCREEN_MODE_REQUEST_EXIT = 0;

  /// from: static public final int OVERRIDE_TRANSITION_CLOSE
  static const OVERRIDE_TRANSITION_CLOSE = 1;

  /// from: static public final int OVERRIDE_TRANSITION_OPEN
  static const OVERRIDE_TRANSITION_OPEN = 0;

  /// from: static public final int RESULT_CANCELED
  static const RESULT_CANCELED = 0;

  /// from: static public final int RESULT_FIRST_USER
  static const RESULT_FIRST_USER = 1;

  /// from: static public final int RESULT_OK
  static const RESULT_OK = -1;
  static final _id_new0 = _class.constructorId(
    r"()V",
  );

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory Activity() {
    return Activity.fromReference(_id_new0(_class, referenceType, []));
  }

  static final _id_getIntent = _class.instanceMethodId(
    r"getIntent",
    r"()Landroid/content/Intent;",
  );

  /// from: public android.content.Intent getIntent()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getIntent() {
    return _id_getIntent(this, const jni.JObjectType(), []);
  }

  static final _id_setIntent = _class.instanceMethodId(
    r"setIntent",
    r"(Landroid/content/Intent;)V",
  );

  /// from: public void setIntent(android.content.Intent intent)
  void setIntent(
    jni.JObject intent,
  ) {
    _id_setIntent(this, const jni.jvoidType(), [intent.reference.pointer]);
  }

  static final _id_setLocusContext = _class.instanceMethodId(
    r"setLocusContext",
    r"(Landroid/content/LocusId;Landroid/os/Bundle;)V",
  );

  /// from: public void setLocusContext(android.content.LocusId locusId, android.os.Bundle bundle)
  void setLocusContext(
    jni.JObject locusId,
    jni.JObject bundle,
  ) {
    _id_setLocusContext(this, const jni.jvoidType(),
        [locusId.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_getApplication = _class.instanceMethodId(
    r"getApplication",
    r"()Landroid/app/Application;",
  );

  /// from: public final android.app.Application getApplication()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getApplication() {
    return _id_getApplication(this, const jni.JObjectType(), []);
  }

  static final _id_isChild = _class.instanceMethodId(
    r"isChild",
    r"()Z",
  );

  /// from: public final boolean isChild()
  bool isChild() {
    return _id_isChild(this, const jni.jbooleanType(), []);
  }

  static final _id_getParent = _class.instanceMethodId(
    r"getParent",
    r"()Landroid/app/Activity;",
  );

  /// from: public final android.app.Activity getParent()
  /// The returned object must be released after use, by calling the [release] method.
  Activity getParent() {
    return _id_getParent(this, const $ActivityType(), []);
  }

  static final _id_getWindowManager = _class.instanceMethodId(
    r"getWindowManager",
    r"()Landroid/view/WindowManager;",
  );

  /// from: public android.view.WindowManager getWindowManager()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getWindowManager() {
    return _id_getWindowManager(this, const jni.JObjectType(), []);
  }

  static final _id_getWindow = _class.instanceMethodId(
    r"getWindow",
    r"()Landroid/view/Window;",
  );

  /// from: public android.view.Window getWindow()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getWindow() {
    return _id_getWindow(this, const jni.JObjectType(), []);
  }

  static final _id_getLoaderManager = _class.instanceMethodId(
    r"getLoaderManager",
    r"()Landroid/app/LoaderManager;",
  );

  /// from: public android.app.LoaderManager getLoaderManager()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getLoaderManager() {
    return _id_getLoaderManager(this, const jni.JObjectType(), []);
  }

  static final _id_getCurrentFocus = _class.instanceMethodId(
    r"getCurrentFocus",
    r"()Landroid/view/View;",
  );

  /// from: public android.view.View getCurrentFocus()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCurrentFocus() {
    return _id_getCurrentFocus(this, const jni.JObjectType(), []);
  }

  static final _id_attachBaseContext = _class.instanceMethodId(
    r"attachBaseContext",
    r"(Landroid/content/Context;)V",
  );

  /// from: protected void attachBaseContext(android.content.Context context)
  void attachBaseContext(
    Context context,
  ) {
    _id_attachBaseContext(
        this, const jni.jvoidType(), [context.reference.pointer]);
  }

  static final _id_registerActivityLifecycleCallbacks = _class.instanceMethodId(
    r"registerActivityLifecycleCallbacks",
    r"(Landroid/app/Application$ActivityLifecycleCallbacks;)V",
  );

  /// from: public void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks activityLifecycleCallbacks)
  void registerActivityLifecycleCallbacks(
    jni.JObject activityLifecycleCallbacks,
  ) {
    _id_registerActivityLifecycleCallbacks(this, const jni.jvoidType(),
        [activityLifecycleCallbacks.reference.pointer]);
  }

  static final _id_unregisterActivityLifecycleCallbacks =
      _class.instanceMethodId(
    r"unregisterActivityLifecycleCallbacks",
    r"(Landroid/app/Application$ActivityLifecycleCallbacks;)V",
  );

  /// from: public void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks activityLifecycleCallbacks)
  void unregisterActivityLifecycleCallbacks(
    jni.JObject activityLifecycleCallbacks,
  ) {
    _id_unregisterActivityLifecycleCallbacks(this, const jni.jvoidType(),
        [activityLifecycleCallbacks.reference.pointer]);
  }

  static final _id_registerComponentCallbacks = _class.instanceMethodId(
    r"registerComponentCallbacks",
    r"(Landroid/content/ComponentCallbacks;)V",
  );

  /// from: public void registerComponentCallbacks(android.content.ComponentCallbacks componentCallbacks)
  void registerComponentCallbacks(
    jni.JObject componentCallbacks,
  ) {
    _id_registerComponentCallbacks(
        this, const jni.jvoidType(), [componentCallbacks.reference.pointer]);
  }

  static final _id_unregisterComponentCallbacks = _class.instanceMethodId(
    r"unregisterComponentCallbacks",
    r"(Landroid/content/ComponentCallbacks;)V",
  );

  /// from: public void unregisterComponentCallbacks(android.content.ComponentCallbacks componentCallbacks)
  void unregisterComponentCallbacks(
    jni.JObject componentCallbacks,
  ) {
    _id_unregisterComponentCallbacks(
        this, const jni.jvoidType(), [componentCallbacks.reference.pointer]);
  }

  static final _id_onCreate = _class.instanceMethodId(
    r"onCreate",
    r"(Landroid/os/Bundle;)V",
  );

  /// from: protected void onCreate(android.os.Bundle bundle)
  void onCreate(
    jni.JObject bundle,
  ) {
    _id_onCreate(this, const jni.jvoidType(), [bundle.reference.pointer]);
  }

  static final _id_getSplashScreen = _class.instanceMethodId(
    r"getSplashScreen",
    r"()Landroid/window/SplashScreen;",
  );

  /// from: public final android.window.SplashScreen getSplashScreen()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSplashScreen() {
    return _id_getSplashScreen(this, const jni.JObjectType(), []);
  }

  static final _id_onCreate1 = _class.instanceMethodId(
    r"onCreate",
    r"(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V",
  );

  /// from: public void onCreate(android.os.Bundle bundle, android.os.PersistableBundle persistableBundle)
  void onCreate1(
    jni.JObject bundle,
    jni.JObject persistableBundle,
  ) {
    _id_onCreate1(this, const jni.jvoidType(),
        [bundle.reference.pointer, persistableBundle.reference.pointer]);
  }

  static final _id_onRestoreInstanceState = _class.instanceMethodId(
    r"onRestoreInstanceState",
    r"(Landroid/os/Bundle;)V",
  );

  /// from: protected void onRestoreInstanceState(android.os.Bundle bundle)
  void onRestoreInstanceState(
    jni.JObject bundle,
  ) {
    _id_onRestoreInstanceState(
        this, const jni.jvoidType(), [bundle.reference.pointer]);
  }

  static final _id_onRestoreInstanceState1 = _class.instanceMethodId(
    r"onRestoreInstanceState",
    r"(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V",
  );

  /// from: public void onRestoreInstanceState(android.os.Bundle bundle, android.os.PersistableBundle persistableBundle)
  void onRestoreInstanceState1(
    jni.JObject bundle,
    jni.JObject persistableBundle,
  ) {
    _id_onRestoreInstanceState1(this, const jni.jvoidType(),
        [bundle.reference.pointer, persistableBundle.reference.pointer]);
  }

  static final _id_onPostCreate = _class.instanceMethodId(
    r"onPostCreate",
    r"(Landroid/os/Bundle;)V",
  );

  /// from: protected void onPostCreate(android.os.Bundle bundle)
  void onPostCreate(
    jni.JObject bundle,
  ) {
    _id_onPostCreate(this, const jni.jvoidType(), [bundle.reference.pointer]);
  }

  static final _id_onPostCreate1 = _class.instanceMethodId(
    r"onPostCreate",
    r"(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V",
  );

  /// from: public void onPostCreate(android.os.Bundle bundle, android.os.PersistableBundle persistableBundle)
  void onPostCreate1(
    jni.JObject bundle,
    jni.JObject persistableBundle,
  ) {
    _id_onPostCreate1(this, const jni.jvoidType(),
        [bundle.reference.pointer, persistableBundle.reference.pointer]);
  }

  static final _id_onStart = _class.instanceMethodId(
    r"onStart",
    r"()V",
  );

  /// from: protected void onStart()
  void onStart() {
    _id_onStart(this, const jni.jvoidType(), []);
  }

  static final _id_onRestart = _class.instanceMethodId(
    r"onRestart",
    r"()V",
  );

  /// from: protected void onRestart()
  void onRestart() {
    _id_onRestart(this, const jni.jvoidType(), []);
  }

  static final _id_onStateNotSaved = _class.instanceMethodId(
    r"onStateNotSaved",
    r"()V",
  );

  /// from: public void onStateNotSaved()
  void onStateNotSaved() {
    _id_onStateNotSaved(this, const jni.jvoidType(), []);
  }

  static final _id_onResume = _class.instanceMethodId(
    r"onResume",
    r"()V",
  );

  /// from: protected void onResume()
  void onResume() {
    _id_onResume(this, const jni.jvoidType(), []);
  }

  static final _id_onPostResume = _class.instanceMethodId(
    r"onPostResume",
    r"()V",
  );

  /// from: protected void onPostResume()
  void onPostResume() {
    _id_onPostResume(this, const jni.jvoidType(), []);
  }

  static final _id_onTopResumedActivityChanged = _class.instanceMethodId(
    r"onTopResumedActivityChanged",
    r"(Z)V",
  );

  /// from: public void onTopResumedActivityChanged(boolean z)
  void onTopResumedActivityChanged(
    bool z,
  ) {
    _id_onTopResumedActivityChanged(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_isVoiceInteraction = _class.instanceMethodId(
    r"isVoiceInteraction",
    r"()Z",
  );

  /// from: public boolean isVoiceInteraction()
  bool isVoiceInteraction() {
    return _id_isVoiceInteraction(this, const jni.jbooleanType(), []);
  }

  static final _id_isVoiceInteractionRoot = _class.instanceMethodId(
    r"isVoiceInteractionRoot",
    r"()Z",
  );

  /// from: public boolean isVoiceInteractionRoot()
  bool isVoiceInteractionRoot() {
    return _id_isVoiceInteractionRoot(this, const jni.jbooleanType(), []);
  }

  static final _id_getVoiceInteractor = _class.instanceMethodId(
    r"getVoiceInteractor",
    r"()Landroid/app/VoiceInteractor;",
  );

  /// from: public android.app.VoiceInteractor getVoiceInteractor()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getVoiceInteractor() {
    return _id_getVoiceInteractor(this, const jni.JObjectType(), []);
  }

  static final _id_isLocalVoiceInteractionSupported = _class.instanceMethodId(
    r"isLocalVoiceInteractionSupported",
    r"()Z",
  );

  /// from: public boolean isLocalVoiceInteractionSupported()
  bool isLocalVoiceInteractionSupported() {
    return _id_isLocalVoiceInteractionSupported(
        this, const jni.jbooleanType(), []);
  }

  static final _id_startLocalVoiceInteraction = _class.instanceMethodId(
    r"startLocalVoiceInteraction",
    r"(Landroid/os/Bundle;)V",
  );

  /// from: public void startLocalVoiceInteraction(android.os.Bundle bundle)
  void startLocalVoiceInteraction(
    jni.JObject bundle,
  ) {
    _id_startLocalVoiceInteraction(
        this, const jni.jvoidType(), [bundle.reference.pointer]);
  }

  static final _id_onLocalVoiceInteractionStarted = _class.instanceMethodId(
    r"onLocalVoiceInteractionStarted",
    r"()V",
  );

  /// from: public void onLocalVoiceInteractionStarted()
  void onLocalVoiceInteractionStarted() {
    _id_onLocalVoiceInteractionStarted(this, const jni.jvoidType(), []);
  }

  static final _id_onLocalVoiceInteractionStopped = _class.instanceMethodId(
    r"onLocalVoiceInteractionStopped",
    r"()V",
  );

  /// from: public void onLocalVoiceInteractionStopped()
  void onLocalVoiceInteractionStopped() {
    _id_onLocalVoiceInteractionStopped(this, const jni.jvoidType(), []);
  }

  static final _id_stopLocalVoiceInteraction = _class.instanceMethodId(
    r"stopLocalVoiceInteraction",
    r"()V",
  );

  /// from: public void stopLocalVoiceInteraction()
  void stopLocalVoiceInteraction() {
    _id_stopLocalVoiceInteraction(this, const jni.jvoidType(), []);
  }

  static final _id_onNewIntent = _class.instanceMethodId(
    r"onNewIntent",
    r"(Landroid/content/Intent;)V",
  );

  /// from: protected void onNewIntent(android.content.Intent intent)
  void onNewIntent(
    jni.JObject intent,
  ) {
    _id_onNewIntent(this, const jni.jvoidType(), [intent.reference.pointer]);
  }

  static final _id_onSaveInstanceState = _class.instanceMethodId(
    r"onSaveInstanceState",
    r"(Landroid/os/Bundle;)V",
  );

  /// from: protected void onSaveInstanceState(android.os.Bundle bundle)
  void onSaveInstanceState(
    jni.JObject bundle,
  ) {
    _id_onSaveInstanceState(
        this, const jni.jvoidType(), [bundle.reference.pointer]);
  }

  static final _id_onSaveInstanceState1 = _class.instanceMethodId(
    r"onSaveInstanceState",
    r"(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V",
  );

  /// from: public void onSaveInstanceState(android.os.Bundle bundle, android.os.PersistableBundle persistableBundle)
  void onSaveInstanceState1(
    jni.JObject bundle,
    jni.JObject persistableBundle,
  ) {
    _id_onSaveInstanceState1(this, const jni.jvoidType(),
        [bundle.reference.pointer, persistableBundle.reference.pointer]);
  }

  static final _id_onPause = _class.instanceMethodId(
    r"onPause",
    r"()V",
  );

  /// from: protected void onPause()
  void onPause() {
    _id_onPause(this, const jni.jvoidType(), []);
  }

  static final _id_onUserLeaveHint = _class.instanceMethodId(
    r"onUserLeaveHint",
    r"()V",
  );

  /// from: protected void onUserLeaveHint()
  void onUserLeaveHint() {
    _id_onUserLeaveHint(this, const jni.jvoidType(), []);
  }

  static final _id_onCreateThumbnail = _class.instanceMethodId(
    r"onCreateThumbnail",
    r"(Landroid/graphics/Bitmap;Landroid/graphics/Canvas;)Z",
  );

  /// from: public boolean onCreateThumbnail(android.graphics.Bitmap bitmap, android.graphics.Canvas canvas)
  bool onCreateThumbnail(
    jni.JObject bitmap,
    jni.JObject canvas,
  ) {
    return _id_onCreateThumbnail(this, const jni.jbooleanType(),
        [bitmap.reference.pointer, canvas.reference.pointer]);
  }

  static final _id_onCreateDescription = _class.instanceMethodId(
    r"onCreateDescription",
    r"()Ljava/lang/CharSequence;",
  );

  /// from: public java.lang.CharSequence onCreateDescription()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onCreateDescription() {
    return _id_onCreateDescription(this, const jni.JObjectType(), []);
  }

  static final _id_onProvideAssistData = _class.instanceMethodId(
    r"onProvideAssistData",
    r"(Landroid/os/Bundle;)V",
  );

  /// from: public void onProvideAssistData(android.os.Bundle bundle)
  void onProvideAssistData(
    jni.JObject bundle,
  ) {
    _id_onProvideAssistData(
        this, const jni.jvoidType(), [bundle.reference.pointer]);
  }

  static final _id_onProvideAssistContent = _class.instanceMethodId(
    r"onProvideAssistContent",
    r"(Landroid/app/assist/AssistContent;)V",
  );

  /// from: public void onProvideAssistContent(android.app.assist.AssistContent assistContent)
  void onProvideAssistContent(
    jni.JObject assistContent,
  ) {
    _id_onProvideAssistContent(
        this, const jni.jvoidType(), [assistContent.reference.pointer]);
  }

  static final _id_onGetDirectActions = _class.instanceMethodId(
    r"onGetDirectActions",
    r"(Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V",
  );

  /// from: public void onGetDirectActions(android.os.CancellationSignal cancellationSignal, java.util.function.Consumer consumer)
  void onGetDirectActions(
    jni.JObject cancellationSignal,
    jni.JObject consumer,
  ) {
    _id_onGetDirectActions(this, const jni.jvoidType(),
        [cancellationSignal.reference.pointer, consumer.reference.pointer]);
  }

  static final _id_onPerformDirectAction = _class.instanceMethodId(
    r"onPerformDirectAction",
    r"(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V",
  );

  /// from: public void onPerformDirectAction(java.lang.String string, android.os.Bundle bundle, android.os.CancellationSignal cancellationSignal, java.util.function.Consumer consumer)
  void onPerformDirectAction(
    jni.JString string,
    jni.JObject bundle,
    jni.JObject cancellationSignal,
    jni.JObject consumer,
  ) {
    _id_onPerformDirectAction(this, const jni.jvoidType(), [
      string.reference.pointer,
      bundle.reference.pointer,
      cancellationSignal.reference.pointer,
      consumer.reference.pointer
    ]);
  }

  static final _id_requestShowKeyboardShortcuts = _class.instanceMethodId(
    r"requestShowKeyboardShortcuts",
    r"()V",
  );

  /// from: public final void requestShowKeyboardShortcuts()
  void requestShowKeyboardShortcuts() {
    _id_requestShowKeyboardShortcuts(this, const jni.jvoidType(), []);
  }

  static final _id_dismissKeyboardShortcutsHelper = _class.instanceMethodId(
    r"dismissKeyboardShortcutsHelper",
    r"()V",
  );

  /// from: public final void dismissKeyboardShortcutsHelper()
  void dismissKeyboardShortcutsHelper() {
    _id_dismissKeyboardShortcutsHelper(this, const jni.jvoidType(), []);
  }

  static final _id_onProvideKeyboardShortcuts = _class.instanceMethodId(
    r"onProvideKeyboardShortcuts",
    r"(Ljava/util/List;Landroid/view/Menu;I)V",
  );

  /// from: public void onProvideKeyboardShortcuts(java.util.List list, android.view.Menu menu, int i)
  void onProvideKeyboardShortcuts(
    jni.JList<jni.JObject> list,
    jni.JObject menu,
    int i,
  ) {
    _id_onProvideKeyboardShortcuts(this, const jni.jvoidType(),
        [list.reference.pointer, menu.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_showAssist = _class.instanceMethodId(
    r"showAssist",
    r"(Landroid/os/Bundle;)Z",
  );

  /// from: public boolean showAssist(android.os.Bundle bundle)
  bool showAssist(
    jni.JObject bundle,
  ) {
    return _id_showAssist(
        this, const jni.jbooleanType(), [bundle.reference.pointer]);
  }

  static final _id_onStop = _class.instanceMethodId(
    r"onStop",
    r"()V",
  );

  /// from: protected void onStop()
  void onStop() {
    _id_onStop(this, const jni.jvoidType(), []);
  }

  static final _id_onDestroy = _class.instanceMethodId(
    r"onDestroy",
    r"()V",
  );

  /// from: protected void onDestroy()
  void onDestroy() {
    _id_onDestroy(this, const jni.jvoidType(), []);
  }

  static final _id_reportFullyDrawn = _class.instanceMethodId(
    r"reportFullyDrawn",
    r"()V",
  );

  /// from: public void reportFullyDrawn()
  void reportFullyDrawn() {
    _id_reportFullyDrawn(this, const jni.jvoidType(), []);
  }

  static final _id_onMultiWindowModeChanged = _class.instanceMethodId(
    r"onMultiWindowModeChanged",
    r"(ZLandroid/content/res/Configuration;)V",
  );

  /// from: public void onMultiWindowModeChanged(boolean z, android.content.res.Configuration configuration)
  void onMultiWindowModeChanged(
    bool z,
    jni.JObject configuration,
  ) {
    _id_onMultiWindowModeChanged(this, const jni.jvoidType(),
        [z ? 1 : 0, configuration.reference.pointer]);
  }

  static final _id_onMultiWindowModeChanged1 = _class.instanceMethodId(
    r"onMultiWindowModeChanged",
    r"(Z)V",
  );

  /// from: public void onMultiWindowModeChanged(boolean z)
  void onMultiWindowModeChanged1(
    bool z,
  ) {
    _id_onMultiWindowModeChanged1(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_isInMultiWindowMode = _class.instanceMethodId(
    r"isInMultiWindowMode",
    r"()Z",
  );

  /// from: public boolean isInMultiWindowMode()
  bool isInMultiWindowMode() {
    return _id_isInMultiWindowMode(this, const jni.jbooleanType(), []);
  }

  static final _id_onPictureInPictureModeChanged = _class.instanceMethodId(
    r"onPictureInPictureModeChanged",
    r"(ZLandroid/content/res/Configuration;)V",
  );

  /// from: public void onPictureInPictureModeChanged(boolean z, android.content.res.Configuration configuration)
  void onPictureInPictureModeChanged(
    bool z,
    jni.JObject configuration,
  ) {
    _id_onPictureInPictureModeChanged(this, const jni.jvoidType(),
        [z ? 1 : 0, configuration.reference.pointer]);
  }

  static final _id_onPictureInPictureUiStateChanged = _class.instanceMethodId(
    r"onPictureInPictureUiStateChanged",
    r"(Landroid/app/PictureInPictureUiState;)V",
  );

  /// from: public void onPictureInPictureUiStateChanged(android.app.PictureInPictureUiState pictureInPictureUiState)
  void onPictureInPictureUiStateChanged(
    jni.JObject pictureInPictureUiState,
  ) {
    _id_onPictureInPictureUiStateChanged(this, const jni.jvoidType(),
        [pictureInPictureUiState.reference.pointer]);
  }

  static final _id_onPictureInPictureModeChanged1 = _class.instanceMethodId(
    r"onPictureInPictureModeChanged",
    r"(Z)V",
  );

  /// from: public void onPictureInPictureModeChanged(boolean z)
  void onPictureInPictureModeChanged1(
    bool z,
  ) {
    _id_onPictureInPictureModeChanged1(
        this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_isInPictureInPictureMode = _class.instanceMethodId(
    r"isInPictureInPictureMode",
    r"()Z",
  );

  /// from: public boolean isInPictureInPictureMode()
  bool isInPictureInPictureMode() {
    return _id_isInPictureInPictureMode(this, const jni.jbooleanType(), []);
  }

  static final _id_enterPictureInPictureMode = _class.instanceMethodId(
    r"enterPictureInPictureMode",
    r"()V",
  );

  /// from: public void enterPictureInPictureMode()
  void enterPictureInPictureMode() {
    _id_enterPictureInPictureMode(this, const jni.jvoidType(), []);
  }

  static final _id_enterPictureInPictureMode1 = _class.instanceMethodId(
    r"enterPictureInPictureMode",
    r"(Landroid/app/PictureInPictureParams;)Z",
  );

  /// from: public boolean enterPictureInPictureMode(android.app.PictureInPictureParams pictureInPictureParams)
  bool enterPictureInPictureMode1(
    jni.JObject pictureInPictureParams,
  ) {
    return _id_enterPictureInPictureMode1(this, const jni.jbooleanType(),
        [pictureInPictureParams.reference.pointer]);
  }

  static final _id_setPictureInPictureParams = _class.instanceMethodId(
    r"setPictureInPictureParams",
    r"(Landroid/app/PictureInPictureParams;)V",
  );

  /// from: public void setPictureInPictureParams(android.app.PictureInPictureParams pictureInPictureParams)
  void setPictureInPictureParams(
    jni.JObject pictureInPictureParams,
  ) {
    _id_setPictureInPictureParams(this, const jni.jvoidType(),
        [pictureInPictureParams.reference.pointer]);
  }

  static final _id_getMaxNumPictureInPictureActions = _class.instanceMethodId(
    r"getMaxNumPictureInPictureActions",
    r"()I",
  );

  /// from: public int getMaxNumPictureInPictureActions()
  int getMaxNumPictureInPictureActions() {
    return _id_getMaxNumPictureInPictureActions(this, const jni.jintType(), []);
  }

  static final _id_onPictureInPictureRequested = _class.instanceMethodId(
    r"onPictureInPictureRequested",
    r"()Z",
  );

  /// from: public boolean onPictureInPictureRequested()
  bool onPictureInPictureRequested() {
    return _id_onPictureInPictureRequested(this, const jni.jbooleanType(), []);
  }

  static final _id_requestFullscreenMode = _class.instanceMethodId(
    r"requestFullscreenMode",
    r"(ILandroid/os/OutcomeReceiver;)V",
  );

  /// from: public void requestFullscreenMode(int i, android.os.OutcomeReceiver outcomeReceiver)
  void requestFullscreenMode(
    int i,
    jni.JObject outcomeReceiver,
  ) {
    _id_requestFullscreenMode(this, const jni.jvoidType(),
        [jni.JValueInt(i), outcomeReceiver.reference.pointer]);
  }

  static final _id_setShouldDockBigOverlays = _class.instanceMethodId(
    r"setShouldDockBigOverlays",
    r"(Z)V",
  );

  /// from: public void setShouldDockBigOverlays(boolean z)
  void setShouldDockBigOverlays(
    bool z,
  ) {
    _id_setShouldDockBigOverlays(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_shouldDockBigOverlays = _class.instanceMethodId(
    r"shouldDockBigOverlays",
    r"()Z",
  );

  /// from: public boolean shouldDockBigOverlays()
  bool shouldDockBigOverlays() {
    return _id_shouldDockBigOverlays(this, const jni.jbooleanType(), []);
  }

  static final _id_onConfigurationChanged = _class.instanceMethodId(
    r"onConfigurationChanged",
    r"(Landroid/content/res/Configuration;)V",
  );

  /// from: public void onConfigurationChanged(android.content.res.Configuration configuration)
  void onConfigurationChanged(
    jni.JObject configuration,
  ) {
    _id_onConfigurationChanged(
        this, const jni.jvoidType(), [configuration.reference.pointer]);
  }

  static final _id_getChangingConfigurations = _class.instanceMethodId(
    r"getChangingConfigurations",
    r"()I",
  );

  /// from: public int getChangingConfigurations()
  int getChangingConfigurations() {
    return _id_getChangingConfigurations(this, const jni.jintType(), []);
  }

  static final _id_getLastNonConfigurationInstance = _class.instanceMethodId(
    r"getLastNonConfigurationInstance",
    r"()Ljava/lang/Object;",
  );

  /// from: public java.lang.Object getLastNonConfigurationInstance()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getLastNonConfigurationInstance() {
    return _id_getLastNonConfigurationInstance(
        this, const jni.JObjectType(), []);
  }

  static final _id_onRetainNonConfigurationInstance = _class.instanceMethodId(
    r"onRetainNonConfigurationInstance",
    r"()Ljava/lang/Object;",
  );

  /// from: public java.lang.Object onRetainNonConfigurationInstance()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onRetainNonConfigurationInstance() {
    return _id_onRetainNonConfigurationInstance(
        this, const jni.JObjectType(), []);
  }

  static final _id_onLowMemory = _class.instanceMethodId(
    r"onLowMemory",
    r"()V",
  );

  /// from: public void onLowMemory()
  void onLowMemory() {
    _id_onLowMemory(this, const jni.jvoidType(), []);
  }

  static final _id_onTrimMemory = _class.instanceMethodId(
    r"onTrimMemory",
    r"(I)V",
  );

  /// from: public void onTrimMemory(int i)
  void onTrimMemory(
    int i,
  ) {
    _id_onTrimMemory(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_getFragmentManager = _class.instanceMethodId(
    r"getFragmentManager",
    r"()Landroid/app/FragmentManager;",
  );

  /// from: public android.app.FragmentManager getFragmentManager()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getFragmentManager() {
    return _id_getFragmentManager(this, const jni.JObjectType(), []);
  }

  static final _id_onAttachFragment = _class.instanceMethodId(
    r"onAttachFragment",
    r"(Landroid/app/Fragment;)V",
  );

  /// from: public void onAttachFragment(android.app.Fragment fragment)
  void onAttachFragment(
    jni.JObject fragment,
  ) {
    _id_onAttachFragment(
        this, const jni.jvoidType(), [fragment.reference.pointer]);
  }

  static final _id_managedQuery = _class.instanceMethodId(
    r"managedQuery",
    r"(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;",
  );

  /// from: public final android.database.Cursor managedQuery(android.net.Uri uri, java.lang.String[] strings, java.lang.String string, java.lang.String[] strings1, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject managedQuery(
    jni.JObject uri,
    jni.JArray<jni.JString> strings,
    jni.JString string,
    jni.JArray<jni.JString> strings1,
    jni.JString string1,
  ) {
    return _id_managedQuery(this, const jni.JObjectType(), [
      uri.reference.pointer,
      strings.reference.pointer,
      string.reference.pointer,
      strings1.reference.pointer,
      string1.reference.pointer
    ]);
  }

  static final _id_startManagingCursor = _class.instanceMethodId(
    r"startManagingCursor",
    r"(Landroid/database/Cursor;)V",
  );

  /// from: public void startManagingCursor(android.database.Cursor cursor)
  void startManagingCursor(
    jni.JObject cursor,
  ) {
    _id_startManagingCursor(
        this, const jni.jvoidType(), [cursor.reference.pointer]);
  }

  static final _id_stopManagingCursor = _class.instanceMethodId(
    r"stopManagingCursor",
    r"(Landroid/database/Cursor;)V",
  );

  /// from: public void stopManagingCursor(android.database.Cursor cursor)
  void stopManagingCursor(
    jni.JObject cursor,
  ) {
    _id_stopManagingCursor(
        this, const jni.jvoidType(), [cursor.reference.pointer]);
  }

  static final _id_findViewById = _class.instanceMethodId(
    r"findViewById",
    r"(I)Landroid/view/View;",
  );

  /// from: public T findViewById(int i)
  /// The returned object must be released after use, by calling the [release] method.
  $T findViewById<$T extends jni.JObject>(
    int i, {
    required jni.JObjType<$T> T,
  }) {
    return _id_findViewById(this, T, [jni.JValueInt(i)]);
  }

  static final _id_requireViewById = _class.instanceMethodId(
    r"requireViewById",
    r"(I)Landroid/view/View;",
  );

  /// from: public final T requireViewById(int i)
  /// The returned object must be released after use, by calling the [release] method.
  $T requireViewById<$T extends jni.JObject>(
    int i, {
    required jni.JObjType<$T> T,
  }) {
    return _id_requireViewById(this, T, [jni.JValueInt(i)]);
  }

  static final _id_getActionBar = _class.instanceMethodId(
    r"getActionBar",
    r"()Landroid/app/ActionBar;",
  );

  /// from: public android.app.ActionBar getActionBar()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getActionBar() {
    return _id_getActionBar(this, const jni.JObjectType(), []);
  }

  static final _id_setActionBar = _class.instanceMethodId(
    r"setActionBar",
    r"(Landroid/widget/Toolbar;)V",
  );

  /// from: public void setActionBar(android.widget.Toolbar toolbar)
  void setActionBar(
    jni.JObject toolbar,
  ) {
    _id_setActionBar(this, const jni.jvoidType(), [toolbar.reference.pointer]);
  }

  static final _id_setContentView = _class.instanceMethodId(
    r"setContentView",
    r"(I)V",
  );

  /// from: public void setContentView(int i)
  void setContentView(
    int i,
  ) {
    _id_setContentView(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_setContentView1 = _class.instanceMethodId(
    r"setContentView",
    r"(Landroid/view/View;)V",
  );

  /// from: public void setContentView(android.view.View view)
  void setContentView1(
    jni.JObject view,
  ) {
    _id_setContentView1(this, const jni.jvoidType(), [view.reference.pointer]);
  }

  static final _id_setContentView2 = _class.instanceMethodId(
    r"setContentView",
    r"(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V",
  );

  /// from: public void setContentView(android.view.View view, android.view.ViewGroup$LayoutParams layoutParams)
  void setContentView2(
    jni.JObject view,
    jni.JObject layoutParams,
  ) {
    _id_setContentView2(this, const jni.jvoidType(),
        [view.reference.pointer, layoutParams.reference.pointer]);
  }

  static final _id_addContentView = _class.instanceMethodId(
    r"addContentView",
    r"(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V",
  );

  /// from: public void addContentView(android.view.View view, android.view.ViewGroup$LayoutParams layoutParams)
  void addContentView(
    jni.JObject view,
    jni.JObject layoutParams,
  ) {
    _id_addContentView(this, const jni.jvoidType(),
        [view.reference.pointer, layoutParams.reference.pointer]);
  }

  static final _id_getContentTransitionManager = _class.instanceMethodId(
    r"getContentTransitionManager",
    r"()Landroid/transition/TransitionManager;",
  );

  /// from: public android.transition.TransitionManager getContentTransitionManager()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getContentTransitionManager() {
    return _id_getContentTransitionManager(this, const jni.JObjectType(), []);
  }

  static final _id_setContentTransitionManager = _class.instanceMethodId(
    r"setContentTransitionManager",
    r"(Landroid/transition/TransitionManager;)V",
  );

  /// from: public void setContentTransitionManager(android.transition.TransitionManager transitionManager)
  void setContentTransitionManager(
    jni.JObject transitionManager,
  ) {
    _id_setContentTransitionManager(
        this, const jni.jvoidType(), [transitionManager.reference.pointer]);
  }

  static final _id_getContentScene = _class.instanceMethodId(
    r"getContentScene",
    r"()Landroid/transition/Scene;",
  );

  /// from: public android.transition.Scene getContentScene()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getContentScene() {
    return _id_getContentScene(this, const jni.JObjectType(), []);
  }

  static final _id_setFinishOnTouchOutside = _class.instanceMethodId(
    r"setFinishOnTouchOutside",
    r"(Z)V",
  );

  /// from: public void setFinishOnTouchOutside(boolean z)
  void setFinishOnTouchOutside(
    bool z,
  ) {
    _id_setFinishOnTouchOutside(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setDefaultKeyMode = _class.instanceMethodId(
    r"setDefaultKeyMode",
    r"(I)V",
  );

  /// from: public final void setDefaultKeyMode(int i)
  void setDefaultKeyMode(
    int i,
  ) {
    _id_setDefaultKeyMode(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_onKeyDown = _class.instanceMethodId(
    r"onKeyDown",
    r"(ILandroid/view/KeyEvent;)Z",
  );

  /// from: public boolean onKeyDown(int i, android.view.KeyEvent keyEvent)
  bool onKeyDown(
    int i,
    jni.JObject keyEvent,
  ) {
    return _id_onKeyDown(this, const jni.jbooleanType(),
        [jni.JValueInt(i), keyEvent.reference.pointer]);
  }

  static final _id_onKeyLongPress = _class.instanceMethodId(
    r"onKeyLongPress",
    r"(ILandroid/view/KeyEvent;)Z",
  );

  /// from: public boolean onKeyLongPress(int i, android.view.KeyEvent keyEvent)
  bool onKeyLongPress(
    int i,
    jni.JObject keyEvent,
  ) {
    return _id_onKeyLongPress(this, const jni.jbooleanType(),
        [jni.JValueInt(i), keyEvent.reference.pointer]);
  }

  static final _id_onKeyUp = _class.instanceMethodId(
    r"onKeyUp",
    r"(ILandroid/view/KeyEvent;)Z",
  );

  /// from: public boolean onKeyUp(int i, android.view.KeyEvent keyEvent)
  bool onKeyUp(
    int i,
    jni.JObject keyEvent,
  ) {
    return _id_onKeyUp(this, const jni.jbooleanType(),
        [jni.JValueInt(i), keyEvent.reference.pointer]);
  }

  static final _id_onKeyMultiple = _class.instanceMethodId(
    r"onKeyMultiple",
    r"(IILandroid/view/KeyEvent;)Z",
  );

  /// from: public boolean onKeyMultiple(int i, int i1, android.view.KeyEvent keyEvent)
  bool onKeyMultiple(
    int i,
    int i1,
    jni.JObject keyEvent,
  ) {
    return _id_onKeyMultiple(this, const jni.jbooleanType(),
        [jni.JValueInt(i), jni.JValueInt(i1), keyEvent.reference.pointer]);
  }

  static final _id_onBackPressed = _class.instanceMethodId(
    r"onBackPressed",
    r"()V",
  );

  /// from: public void onBackPressed()
  void onBackPressed() {
    _id_onBackPressed(this, const jni.jvoidType(), []);
  }

  static final _id_onKeyShortcut = _class.instanceMethodId(
    r"onKeyShortcut",
    r"(ILandroid/view/KeyEvent;)Z",
  );

  /// from: public boolean onKeyShortcut(int i, android.view.KeyEvent keyEvent)
  bool onKeyShortcut(
    int i,
    jni.JObject keyEvent,
  ) {
    return _id_onKeyShortcut(this, const jni.jbooleanType(),
        [jni.JValueInt(i), keyEvent.reference.pointer]);
  }

  static final _id_onTouchEvent = _class.instanceMethodId(
    r"onTouchEvent",
    r"(Landroid/view/MotionEvent;)Z",
  );

  /// from: public boolean onTouchEvent(android.view.MotionEvent motionEvent)
  bool onTouchEvent(
    jni.JObject motionEvent,
  ) {
    return _id_onTouchEvent(
        this, const jni.jbooleanType(), [motionEvent.reference.pointer]);
  }

  static final _id_onTrackballEvent = _class.instanceMethodId(
    r"onTrackballEvent",
    r"(Landroid/view/MotionEvent;)Z",
  );

  /// from: public boolean onTrackballEvent(android.view.MotionEvent motionEvent)
  bool onTrackballEvent(
    jni.JObject motionEvent,
  ) {
    return _id_onTrackballEvent(
        this, const jni.jbooleanType(), [motionEvent.reference.pointer]);
  }

  static final _id_onGenericMotionEvent = _class.instanceMethodId(
    r"onGenericMotionEvent",
    r"(Landroid/view/MotionEvent;)Z",
  );

  /// from: public boolean onGenericMotionEvent(android.view.MotionEvent motionEvent)
  bool onGenericMotionEvent(
    jni.JObject motionEvent,
  ) {
    return _id_onGenericMotionEvent(
        this, const jni.jbooleanType(), [motionEvent.reference.pointer]);
  }

  static final _id_onUserInteraction = _class.instanceMethodId(
    r"onUserInteraction",
    r"()V",
  );

  /// from: public void onUserInteraction()
  void onUserInteraction() {
    _id_onUserInteraction(this, const jni.jvoidType(), []);
  }

  static final _id_onWindowAttributesChanged = _class.instanceMethodId(
    r"onWindowAttributesChanged",
    r"(Landroid/view/WindowManager$LayoutParams;)V",
  );

  /// from: public void onWindowAttributesChanged(android.view.WindowManager$LayoutParams layoutParams)
  void onWindowAttributesChanged(
    jni.JObject layoutParams,
  ) {
    _id_onWindowAttributesChanged(
        this, const jni.jvoidType(), [layoutParams.reference.pointer]);
  }

  static final _id_onContentChanged = _class.instanceMethodId(
    r"onContentChanged",
    r"()V",
  );

  /// from: public void onContentChanged()
  void onContentChanged() {
    _id_onContentChanged(this, const jni.jvoidType(), []);
  }

  static final _id_onWindowFocusChanged = _class.instanceMethodId(
    r"onWindowFocusChanged",
    r"(Z)V",
  );

  /// from: public void onWindowFocusChanged(boolean z)
  void onWindowFocusChanged(
    bool z,
  ) {
    _id_onWindowFocusChanged(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_onAttachedToWindow = _class.instanceMethodId(
    r"onAttachedToWindow",
    r"()V",
  );

  /// from: public void onAttachedToWindow()
  void onAttachedToWindow() {
    _id_onAttachedToWindow(this, const jni.jvoidType(), []);
  }

  static final _id_onDetachedFromWindow = _class.instanceMethodId(
    r"onDetachedFromWindow",
    r"()V",
  );

  /// from: public void onDetachedFromWindow()
  void onDetachedFromWindow() {
    _id_onDetachedFromWindow(this, const jni.jvoidType(), []);
  }

  static final _id_hasWindowFocus = _class.instanceMethodId(
    r"hasWindowFocus",
    r"()Z",
  );

  /// from: public boolean hasWindowFocus()
  bool hasWindowFocus() {
    return _id_hasWindowFocus(this, const jni.jbooleanType(), []);
  }

  static final _id_dispatchKeyEvent = _class.instanceMethodId(
    r"dispatchKeyEvent",
    r"(Landroid/view/KeyEvent;)Z",
  );

  /// from: public boolean dispatchKeyEvent(android.view.KeyEvent keyEvent)
  bool dispatchKeyEvent(
    jni.JObject keyEvent,
  ) {
    return _id_dispatchKeyEvent(
        this, const jni.jbooleanType(), [keyEvent.reference.pointer]);
  }

  static final _id_dispatchKeyShortcutEvent = _class.instanceMethodId(
    r"dispatchKeyShortcutEvent",
    r"(Landroid/view/KeyEvent;)Z",
  );

  /// from: public boolean dispatchKeyShortcutEvent(android.view.KeyEvent keyEvent)
  bool dispatchKeyShortcutEvent(
    jni.JObject keyEvent,
  ) {
    return _id_dispatchKeyShortcutEvent(
        this, const jni.jbooleanType(), [keyEvent.reference.pointer]);
  }

  static final _id_dispatchTouchEvent = _class.instanceMethodId(
    r"dispatchTouchEvent",
    r"(Landroid/view/MotionEvent;)Z",
  );

  /// from: public boolean dispatchTouchEvent(android.view.MotionEvent motionEvent)
  bool dispatchTouchEvent(
    jni.JObject motionEvent,
  ) {
    return _id_dispatchTouchEvent(
        this, const jni.jbooleanType(), [motionEvent.reference.pointer]);
  }

  static final _id_dispatchTrackballEvent = _class.instanceMethodId(
    r"dispatchTrackballEvent",
    r"(Landroid/view/MotionEvent;)Z",
  );

  /// from: public boolean dispatchTrackballEvent(android.view.MotionEvent motionEvent)
  bool dispatchTrackballEvent(
    jni.JObject motionEvent,
  ) {
    return _id_dispatchTrackballEvent(
        this, const jni.jbooleanType(), [motionEvent.reference.pointer]);
  }

  static final _id_dispatchGenericMotionEvent = _class.instanceMethodId(
    r"dispatchGenericMotionEvent",
    r"(Landroid/view/MotionEvent;)Z",
  );

  /// from: public boolean dispatchGenericMotionEvent(android.view.MotionEvent motionEvent)
  bool dispatchGenericMotionEvent(
    jni.JObject motionEvent,
  ) {
    return _id_dispatchGenericMotionEvent(
        this, const jni.jbooleanType(), [motionEvent.reference.pointer]);
  }

  static final _id_dispatchPopulateAccessibilityEvent = _class.instanceMethodId(
    r"dispatchPopulateAccessibilityEvent",
    r"(Landroid/view/accessibility/AccessibilityEvent;)Z",
  );

  /// from: public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent accessibilityEvent)
  bool dispatchPopulateAccessibilityEvent(
    jni.JObject accessibilityEvent,
  ) {
    return _id_dispatchPopulateAccessibilityEvent(
        this, const jni.jbooleanType(), [accessibilityEvent.reference.pointer]);
  }

  static final _id_onCreatePanelView = _class.instanceMethodId(
    r"onCreatePanelView",
    r"(I)Landroid/view/View;",
  );

  /// from: public android.view.View onCreatePanelView(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onCreatePanelView(
    int i,
  ) {
    return _id_onCreatePanelView(
        this, const jni.JObjectType(), [jni.JValueInt(i)]);
  }

  static final _id_onCreatePanelMenu = _class.instanceMethodId(
    r"onCreatePanelMenu",
    r"(ILandroid/view/Menu;)Z",
  );

  /// from: public boolean onCreatePanelMenu(int i, android.view.Menu menu)
  bool onCreatePanelMenu(
    int i,
    jni.JObject menu,
  ) {
    return _id_onCreatePanelMenu(this, const jni.jbooleanType(),
        [jni.JValueInt(i), menu.reference.pointer]);
  }

  static final _id_onPreparePanel = _class.instanceMethodId(
    r"onPreparePanel",
    r"(ILandroid/view/View;Landroid/view/Menu;)Z",
  );

  /// from: public boolean onPreparePanel(int i, android.view.View view, android.view.Menu menu)
  bool onPreparePanel(
    int i,
    jni.JObject view,
    jni.JObject menu,
  ) {
    return _id_onPreparePanel(this, const jni.jbooleanType(),
        [jni.JValueInt(i), view.reference.pointer, menu.reference.pointer]);
  }

  static final _id_onMenuOpened = _class.instanceMethodId(
    r"onMenuOpened",
    r"(ILandroid/view/Menu;)Z",
  );

  /// from: public boolean onMenuOpened(int i, android.view.Menu menu)
  bool onMenuOpened(
    int i,
    jni.JObject menu,
  ) {
    return _id_onMenuOpened(this, const jni.jbooleanType(),
        [jni.JValueInt(i), menu.reference.pointer]);
  }

  static final _id_onMenuItemSelected = _class.instanceMethodId(
    r"onMenuItemSelected",
    r"(ILandroid/view/MenuItem;)Z",
  );

  /// from: public boolean onMenuItemSelected(int i, android.view.MenuItem menuItem)
  bool onMenuItemSelected(
    int i,
    jni.JObject menuItem,
  ) {
    return _id_onMenuItemSelected(this, const jni.jbooleanType(),
        [jni.JValueInt(i), menuItem.reference.pointer]);
  }

  static final _id_onPanelClosed = _class.instanceMethodId(
    r"onPanelClosed",
    r"(ILandroid/view/Menu;)V",
  );

  /// from: public void onPanelClosed(int i, android.view.Menu menu)
  void onPanelClosed(
    int i,
    jni.JObject menu,
  ) {
    _id_onPanelClosed(this, const jni.jvoidType(),
        [jni.JValueInt(i), menu.reference.pointer]);
  }

  static final _id_invalidateOptionsMenu = _class.instanceMethodId(
    r"invalidateOptionsMenu",
    r"()V",
  );

  /// from: public void invalidateOptionsMenu()
  void invalidateOptionsMenu() {
    _id_invalidateOptionsMenu(this, const jni.jvoidType(), []);
  }

  static final _id_onCreateOptionsMenu = _class.instanceMethodId(
    r"onCreateOptionsMenu",
    r"(Landroid/view/Menu;)Z",
  );

  /// from: public boolean onCreateOptionsMenu(android.view.Menu menu)
  bool onCreateOptionsMenu(
    jni.JObject menu,
  ) {
    return _id_onCreateOptionsMenu(
        this, const jni.jbooleanType(), [menu.reference.pointer]);
  }

  static final _id_onPrepareOptionsMenu = _class.instanceMethodId(
    r"onPrepareOptionsMenu",
    r"(Landroid/view/Menu;)Z",
  );

  /// from: public boolean onPrepareOptionsMenu(android.view.Menu menu)
  bool onPrepareOptionsMenu(
    jni.JObject menu,
  ) {
    return _id_onPrepareOptionsMenu(
        this, const jni.jbooleanType(), [menu.reference.pointer]);
  }

  static final _id_onOptionsItemSelected = _class.instanceMethodId(
    r"onOptionsItemSelected",
    r"(Landroid/view/MenuItem;)Z",
  );

  /// from: public boolean onOptionsItemSelected(android.view.MenuItem menuItem)
  bool onOptionsItemSelected(
    jni.JObject menuItem,
  ) {
    return _id_onOptionsItemSelected(
        this, const jni.jbooleanType(), [menuItem.reference.pointer]);
  }

  static final _id_onNavigateUp = _class.instanceMethodId(
    r"onNavigateUp",
    r"()Z",
  );

  /// from: public boolean onNavigateUp()
  bool onNavigateUp() {
    return _id_onNavigateUp(this, const jni.jbooleanType(), []);
  }

  static final _id_onNavigateUpFromChild = _class.instanceMethodId(
    r"onNavigateUpFromChild",
    r"(Landroid/app/Activity;)Z",
  );

  /// from: public boolean onNavigateUpFromChild(android.app.Activity activity)
  bool onNavigateUpFromChild(
    Activity activity,
  ) {
    return _id_onNavigateUpFromChild(
        this, const jni.jbooleanType(), [activity.reference.pointer]);
  }

  static final _id_onCreateNavigateUpTaskStack = _class.instanceMethodId(
    r"onCreateNavigateUpTaskStack",
    r"(Landroid/app/TaskStackBuilder;)V",
  );

  /// from: public void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder taskStackBuilder)
  void onCreateNavigateUpTaskStack(
    jni.JObject taskStackBuilder,
  ) {
    _id_onCreateNavigateUpTaskStack(
        this, const jni.jvoidType(), [taskStackBuilder.reference.pointer]);
  }

  static final _id_onPrepareNavigateUpTaskStack = _class.instanceMethodId(
    r"onPrepareNavigateUpTaskStack",
    r"(Landroid/app/TaskStackBuilder;)V",
  );

  /// from: public void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder taskStackBuilder)
  void onPrepareNavigateUpTaskStack(
    jni.JObject taskStackBuilder,
  ) {
    _id_onPrepareNavigateUpTaskStack(
        this, const jni.jvoidType(), [taskStackBuilder.reference.pointer]);
  }

  static final _id_onOptionsMenuClosed = _class.instanceMethodId(
    r"onOptionsMenuClosed",
    r"(Landroid/view/Menu;)V",
  );

  /// from: public void onOptionsMenuClosed(android.view.Menu menu)
  void onOptionsMenuClosed(
    jni.JObject menu,
  ) {
    _id_onOptionsMenuClosed(
        this, const jni.jvoidType(), [menu.reference.pointer]);
  }

  static final _id_openOptionsMenu = _class.instanceMethodId(
    r"openOptionsMenu",
    r"()V",
  );

  /// from: public void openOptionsMenu()
  void openOptionsMenu() {
    _id_openOptionsMenu(this, const jni.jvoidType(), []);
  }

  static final _id_closeOptionsMenu = _class.instanceMethodId(
    r"closeOptionsMenu",
    r"()V",
  );

  /// from: public void closeOptionsMenu()
  void closeOptionsMenu() {
    _id_closeOptionsMenu(this, const jni.jvoidType(), []);
  }

  static final _id_onCreateContextMenu = _class.instanceMethodId(
    r"onCreateContextMenu",
    r"(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V",
  );

  /// from: public void onCreateContextMenu(android.view.ContextMenu contextMenu, android.view.View view, android.view.ContextMenu$ContextMenuInfo contextMenuInfo)
  void onCreateContextMenu(
    jni.JObject contextMenu,
    jni.JObject view,
    jni.JObject contextMenuInfo,
  ) {
    _id_onCreateContextMenu(this, const jni.jvoidType(), [
      contextMenu.reference.pointer,
      view.reference.pointer,
      contextMenuInfo.reference.pointer
    ]);
  }

  static final _id_registerForContextMenu = _class.instanceMethodId(
    r"registerForContextMenu",
    r"(Landroid/view/View;)V",
  );

  /// from: public void registerForContextMenu(android.view.View view)
  void registerForContextMenu(
    jni.JObject view,
  ) {
    _id_registerForContextMenu(
        this, const jni.jvoidType(), [view.reference.pointer]);
  }

  static final _id_unregisterForContextMenu = _class.instanceMethodId(
    r"unregisterForContextMenu",
    r"(Landroid/view/View;)V",
  );

  /// from: public void unregisterForContextMenu(android.view.View view)
  void unregisterForContextMenu(
    jni.JObject view,
  ) {
    _id_unregisterForContextMenu(
        this, const jni.jvoidType(), [view.reference.pointer]);
  }

  static final _id_openContextMenu = _class.instanceMethodId(
    r"openContextMenu",
    r"(Landroid/view/View;)V",
  );

  /// from: public void openContextMenu(android.view.View view)
  void openContextMenu(
    jni.JObject view,
  ) {
    _id_openContextMenu(this, const jni.jvoidType(), [view.reference.pointer]);
  }

  static final _id_closeContextMenu = _class.instanceMethodId(
    r"closeContextMenu",
    r"()V",
  );

  /// from: public void closeContextMenu()
  void closeContextMenu() {
    _id_closeContextMenu(this, const jni.jvoidType(), []);
  }

  static final _id_onContextItemSelected = _class.instanceMethodId(
    r"onContextItemSelected",
    r"(Landroid/view/MenuItem;)Z",
  );

  /// from: public boolean onContextItemSelected(android.view.MenuItem menuItem)
  bool onContextItemSelected(
    jni.JObject menuItem,
  ) {
    return _id_onContextItemSelected(
        this, const jni.jbooleanType(), [menuItem.reference.pointer]);
  }

  static final _id_onContextMenuClosed = _class.instanceMethodId(
    r"onContextMenuClosed",
    r"(Landroid/view/Menu;)V",
  );

  /// from: public void onContextMenuClosed(android.view.Menu menu)
  void onContextMenuClosed(
    jni.JObject menu,
  ) {
    _id_onContextMenuClosed(
        this, const jni.jvoidType(), [menu.reference.pointer]);
  }

  static final _id_onCreateDialog = _class.instanceMethodId(
    r"onCreateDialog",
    r"(I)Landroid/app/Dialog;",
  );

  /// from: protected android.app.Dialog onCreateDialog(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onCreateDialog(
    int i,
  ) {
    return _id_onCreateDialog(
        this, const jni.JObjectType(), [jni.JValueInt(i)]);
  }

  static final _id_onCreateDialog1 = _class.instanceMethodId(
    r"onCreateDialog",
    r"(ILandroid/os/Bundle;)Landroid/app/Dialog;",
  );

  /// from: protected android.app.Dialog onCreateDialog(int i, android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onCreateDialog1(
    int i,
    jni.JObject bundle,
  ) {
    return _id_onCreateDialog1(this, const jni.JObjectType(),
        [jni.JValueInt(i), bundle.reference.pointer]);
  }

  static final _id_onPrepareDialog = _class.instanceMethodId(
    r"onPrepareDialog",
    r"(ILandroid/app/Dialog;)V",
  );

  /// from: protected void onPrepareDialog(int i, android.app.Dialog dialog)
  void onPrepareDialog(
    int i,
    jni.JObject dialog,
  ) {
    _id_onPrepareDialog(this, const jni.jvoidType(),
        [jni.JValueInt(i), dialog.reference.pointer]);
  }

  static final _id_onPrepareDialog1 = _class.instanceMethodId(
    r"onPrepareDialog",
    r"(ILandroid/app/Dialog;Landroid/os/Bundle;)V",
  );

  /// from: protected void onPrepareDialog(int i, android.app.Dialog dialog, android.os.Bundle bundle)
  void onPrepareDialog1(
    int i,
    jni.JObject dialog,
    jni.JObject bundle,
  ) {
    _id_onPrepareDialog1(this, const jni.jvoidType(),
        [jni.JValueInt(i), dialog.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_showDialog = _class.instanceMethodId(
    r"showDialog",
    r"(I)V",
  );

  /// from: public final void showDialog(int i)
  void showDialog(
    int i,
  ) {
    _id_showDialog(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_showDialog1 = _class.instanceMethodId(
    r"showDialog",
    r"(ILandroid/os/Bundle;)Z",
  );

  /// from: public final boolean showDialog(int i, android.os.Bundle bundle)
  bool showDialog1(
    int i,
    jni.JObject bundle,
  ) {
    return _id_showDialog1(this, const jni.jbooleanType(),
        [jni.JValueInt(i), bundle.reference.pointer]);
  }

  static final _id_dismissDialog = _class.instanceMethodId(
    r"dismissDialog",
    r"(I)V",
  );

  /// from: public final void dismissDialog(int i)
  void dismissDialog(
    int i,
  ) {
    _id_dismissDialog(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_removeDialog = _class.instanceMethodId(
    r"removeDialog",
    r"(I)V",
  );

  /// from: public final void removeDialog(int i)
  void removeDialog(
    int i,
  ) {
    _id_removeDialog(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_onSearchRequested = _class.instanceMethodId(
    r"onSearchRequested",
    r"(Landroid/view/SearchEvent;)Z",
  );

  /// from: public boolean onSearchRequested(android.view.SearchEvent searchEvent)
  bool onSearchRequested(
    jni.JObject searchEvent,
  ) {
    return _id_onSearchRequested(
        this, const jni.jbooleanType(), [searchEvent.reference.pointer]);
  }

  static final _id_onSearchRequested1 = _class.instanceMethodId(
    r"onSearchRequested",
    r"()Z",
  );

  /// from: public boolean onSearchRequested()
  bool onSearchRequested1() {
    return _id_onSearchRequested1(this, const jni.jbooleanType(), []);
  }

  static final _id_getSearchEvent = _class.instanceMethodId(
    r"getSearchEvent",
    r"()Landroid/view/SearchEvent;",
  );

  /// from: public final android.view.SearchEvent getSearchEvent()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSearchEvent() {
    return _id_getSearchEvent(this, const jni.JObjectType(), []);
  }

  static final _id_startSearch = _class.instanceMethodId(
    r"startSearch",
    r"(Ljava/lang/String;ZLandroid/os/Bundle;Z)V",
  );

  /// from: public void startSearch(java.lang.String string, boolean z, android.os.Bundle bundle, boolean z1)
  void startSearch(
    jni.JString string,
    bool z,
    jni.JObject bundle,
    bool z1,
  ) {
    _id_startSearch(this, const jni.jvoidType(), [
      string.reference.pointer,
      z ? 1 : 0,
      bundle.reference.pointer,
      z1 ? 1 : 0
    ]);
  }

  static final _id_triggerSearch = _class.instanceMethodId(
    r"triggerSearch",
    r"(Ljava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public void triggerSearch(java.lang.String string, android.os.Bundle bundle)
  void triggerSearch(
    jni.JString string,
    jni.JObject bundle,
  ) {
    _id_triggerSearch(this, const jni.jvoidType(),
        [string.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_takeKeyEvents = _class.instanceMethodId(
    r"takeKeyEvents",
    r"(Z)V",
  );

  /// from: public void takeKeyEvents(boolean z)
  void takeKeyEvents(
    bool z,
  ) {
    _id_takeKeyEvents(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_requestWindowFeature = _class.instanceMethodId(
    r"requestWindowFeature",
    r"(I)Z",
  );

  /// from: public final boolean requestWindowFeature(int i)
  bool requestWindowFeature(
    int i,
  ) {
    return _id_requestWindowFeature(
        this, const jni.jbooleanType(), [jni.JValueInt(i)]);
  }

  static final _id_setFeatureDrawableResource = _class.instanceMethodId(
    r"setFeatureDrawableResource",
    r"(II)V",
  );

  /// from: public final void setFeatureDrawableResource(int i, int i1)
  void setFeatureDrawableResource(
    int i,
    int i1,
  ) {
    _id_setFeatureDrawableResource(
        this, const jni.jvoidType(), [jni.JValueInt(i), jni.JValueInt(i1)]);
  }

  static final _id_setFeatureDrawableUri = _class.instanceMethodId(
    r"setFeatureDrawableUri",
    r"(ILandroid/net/Uri;)V",
  );

  /// from: public final void setFeatureDrawableUri(int i, android.net.Uri uri)
  void setFeatureDrawableUri(
    int i,
    jni.JObject uri,
  ) {
    _id_setFeatureDrawableUri(
        this, const jni.jvoidType(), [jni.JValueInt(i), uri.reference.pointer]);
  }

  static final _id_setFeatureDrawable = _class.instanceMethodId(
    r"setFeatureDrawable",
    r"(ILandroid/graphics/drawable/Drawable;)V",
  );

  /// from: public final void setFeatureDrawable(int i, android.graphics.drawable.Drawable drawable)
  void setFeatureDrawable(
    int i,
    jni.JObject drawable,
  ) {
    _id_setFeatureDrawable(this, const jni.jvoidType(),
        [jni.JValueInt(i), drawable.reference.pointer]);
  }

  static final _id_setFeatureDrawableAlpha = _class.instanceMethodId(
    r"setFeatureDrawableAlpha",
    r"(II)V",
  );

  /// from: public final void setFeatureDrawableAlpha(int i, int i1)
  void setFeatureDrawableAlpha(
    int i,
    int i1,
  ) {
    _id_setFeatureDrawableAlpha(
        this, const jni.jvoidType(), [jni.JValueInt(i), jni.JValueInt(i1)]);
  }

  static final _id_getLayoutInflater = _class.instanceMethodId(
    r"getLayoutInflater",
    r"()Landroid/view/LayoutInflater;",
  );

  /// from: public android.view.LayoutInflater getLayoutInflater()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getLayoutInflater() {
    return _id_getLayoutInflater(this, const jni.JObjectType(), []);
  }

  static final _id_getMenuInflater = _class.instanceMethodId(
    r"getMenuInflater",
    r"()Landroid/view/MenuInflater;",
  );

  /// from: public android.view.MenuInflater getMenuInflater()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getMenuInflater() {
    return _id_getMenuInflater(this, const jni.JObjectType(), []);
  }

  static final _id_setTheme = _class.instanceMethodId(
    r"setTheme",
    r"(I)V",
  );

  /// from: public void setTheme(int i)
  void setTheme(
    int i,
  ) {
    _id_setTheme(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_onApplyThemeResource = _class.instanceMethodId(
    r"onApplyThemeResource",
    r"(Landroid/content/res/Resources$Theme;IZ)V",
  );

  /// from: protected void onApplyThemeResource(android.content.res.Resources$Theme theme, int i, boolean z)
  void onApplyThemeResource(
    jni.JObject theme,
    int i,
    bool z,
  ) {
    _id_onApplyThemeResource(this, const jni.jvoidType(),
        [theme.reference.pointer, jni.JValueInt(i), z ? 1 : 0]);
  }

  static final _id_requestPermissions = _class.instanceMethodId(
    r"requestPermissions",
    r"([Ljava/lang/String;I)V",
  );

  /// from: public final void requestPermissions(java.lang.String[] strings, int i)
  void requestPermissions(
    jni.JArray<jni.JString> strings,
    int i,
  ) {
    _id_requestPermissions(this, const jni.jvoidType(),
        [strings.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_onRequestPermissionsResult = _class.instanceMethodId(
    r"onRequestPermissionsResult",
    r"(I[Ljava/lang/String;[I)V",
  );

  /// from: public void onRequestPermissionsResult(int i, java.lang.String[] strings, int[] is)
  void onRequestPermissionsResult(
    int i,
    jni.JArray<jni.JString> strings,
    jni.JArray<jni.jint> is0,
  ) {
    _id_onRequestPermissionsResult(this, const jni.jvoidType(),
        [jni.JValueInt(i), strings.reference.pointer, is0.reference.pointer]);
  }

  static final _id_shouldShowRequestPermissionRationale =
      _class.instanceMethodId(
    r"shouldShowRequestPermissionRationale",
    r"(Ljava/lang/String;)Z",
  );

  /// from: public boolean shouldShowRequestPermissionRationale(java.lang.String string)
  bool shouldShowRequestPermissionRationale(
    jni.JString string,
  ) {
    return _id_shouldShowRequestPermissionRationale(
        this, const jni.jbooleanType(), [string.reference.pointer]);
  }

  static final _id_startActivityForResult = _class.instanceMethodId(
    r"startActivityForResult",
    r"(Landroid/content/Intent;I)V",
  );

  /// from: public void startActivityForResult(android.content.Intent intent, int i)
  void startActivityForResult(
    jni.JObject intent,
    int i,
  ) {
    _id_startActivityForResult(this, const jni.jvoidType(),
        [intent.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_startActivityForResult1 = _class.instanceMethodId(
    r"startActivityForResult",
    r"(Landroid/content/Intent;ILandroid/os/Bundle;)V",
  );

  /// from: public void startActivityForResult(android.content.Intent intent, int i, android.os.Bundle bundle)
  void startActivityForResult1(
    jni.JObject intent,
    int i,
    jni.JObject bundle,
  ) {
    _id_startActivityForResult1(this, const jni.jvoidType(),
        [intent.reference.pointer, jni.JValueInt(i), bundle.reference.pointer]);
  }

  static final _id_isActivityTransitionRunning = _class.instanceMethodId(
    r"isActivityTransitionRunning",
    r"()Z",
  );

  /// from: public boolean isActivityTransitionRunning()
  bool isActivityTransitionRunning() {
    return _id_isActivityTransitionRunning(this, const jni.jbooleanType(), []);
  }

  static final _id_startIntentSenderForResult = _class.instanceMethodId(
    r"startIntentSenderForResult",
    r"(Landroid/content/IntentSender;ILandroid/content/Intent;III)V",
  );

  /// from: public void startIntentSenderForResult(android.content.IntentSender intentSender, int i, android.content.Intent intent, int i1, int i2, int i3)
  void startIntentSenderForResult(
    jni.JObject intentSender,
    int i,
    jni.JObject intent,
    int i1,
    int i2,
    int i3,
  ) {
    _id_startIntentSenderForResult(this, const jni.jvoidType(), [
      intentSender.reference.pointer,
      jni.JValueInt(i),
      intent.reference.pointer,
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      jni.JValueInt(i3)
    ]);
  }

  static final _id_startIntentSenderForResult1 = _class.instanceMethodId(
    r"startIntentSenderForResult",
    r"(Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V",
  );

  /// from: public void startIntentSenderForResult(android.content.IntentSender intentSender, int i, android.content.Intent intent, int i1, int i2, int i3, android.os.Bundle bundle)
  void startIntentSenderForResult1(
    jni.JObject intentSender,
    int i,
    jni.JObject intent,
    int i1,
    int i2,
    int i3,
    jni.JObject bundle,
  ) {
    _id_startIntentSenderForResult1(this, const jni.jvoidType(), [
      intentSender.reference.pointer,
      jni.JValueInt(i),
      intent.reference.pointer,
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      jni.JValueInt(i3),
      bundle.reference.pointer
    ]);
  }

  static final _id_startActivity = _class.instanceMethodId(
    r"startActivity",
    r"(Landroid/content/Intent;)V",
  );

  /// from: public void startActivity(android.content.Intent intent)
  void startActivity(
    jni.JObject intent,
  ) {
    _id_startActivity(this, const jni.jvoidType(), [intent.reference.pointer]);
  }

  static final _id_startActivity1 = _class.instanceMethodId(
    r"startActivity",
    r"(Landroid/content/Intent;Landroid/os/Bundle;)V",
  );

  /// from: public void startActivity(android.content.Intent intent, android.os.Bundle bundle)
  void startActivity1(
    jni.JObject intent,
    jni.JObject bundle,
  ) {
    _id_startActivity1(this, const jni.jvoidType(),
        [intent.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_startActivities = _class.instanceMethodId(
    r"startActivities",
    r"([Landroid/content/Intent;)V",
  );

  /// from: public void startActivities(android.content.Intent[] intents)
  void startActivities(
    jni.JArray<jni.JObject> intents,
  ) {
    _id_startActivities(
        this, const jni.jvoidType(), [intents.reference.pointer]);
  }

  static final _id_startActivities1 = _class.instanceMethodId(
    r"startActivities",
    r"([Landroid/content/Intent;Landroid/os/Bundle;)V",
  );

  /// from: public void startActivities(android.content.Intent[] intents, android.os.Bundle bundle)
  void startActivities1(
    jni.JArray<jni.JObject> intents,
    jni.JObject bundle,
  ) {
    _id_startActivities1(this, const jni.jvoidType(),
        [intents.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_startIntentSender = _class.instanceMethodId(
    r"startIntentSender",
    r"(Landroid/content/IntentSender;Landroid/content/Intent;III)V",
  );

  /// from: public void startIntentSender(android.content.IntentSender intentSender, android.content.Intent intent, int i, int i1, int i2)
  void startIntentSender(
    jni.JObject intentSender,
    jni.JObject intent,
    int i,
    int i1,
    int i2,
  ) {
    _id_startIntentSender(this, const jni.jvoidType(), [
      intentSender.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2)
    ]);
  }

  static final _id_startIntentSender1 = _class.instanceMethodId(
    r"startIntentSender",
    r"(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V",
  );

  /// from: public void startIntentSender(android.content.IntentSender intentSender, android.content.Intent intent, int i, int i1, int i2, android.os.Bundle bundle)
  void startIntentSender1(
    jni.JObject intentSender,
    jni.JObject intent,
    int i,
    int i1,
    int i2,
    jni.JObject bundle,
  ) {
    _id_startIntentSender1(this, const jni.jvoidType(), [
      intentSender.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      bundle.reference.pointer
    ]);
  }

  static final _id_startActivityIfNeeded = _class.instanceMethodId(
    r"startActivityIfNeeded",
    r"(Landroid/content/Intent;I)Z",
  );

  /// from: public boolean startActivityIfNeeded(android.content.Intent intent, int i)
  bool startActivityIfNeeded(
    jni.JObject intent,
    int i,
  ) {
    return _id_startActivityIfNeeded(this, const jni.jbooleanType(),
        [intent.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_startActivityIfNeeded1 = _class.instanceMethodId(
    r"startActivityIfNeeded",
    r"(Landroid/content/Intent;ILandroid/os/Bundle;)Z",
  );

  /// from: public boolean startActivityIfNeeded(android.content.Intent intent, int i, android.os.Bundle bundle)
  bool startActivityIfNeeded1(
    jni.JObject intent,
    int i,
    jni.JObject bundle,
  ) {
    return _id_startActivityIfNeeded1(this, const jni.jbooleanType(),
        [intent.reference.pointer, jni.JValueInt(i), bundle.reference.pointer]);
  }

  static final _id_startNextMatchingActivity = _class.instanceMethodId(
    r"startNextMatchingActivity",
    r"(Landroid/content/Intent;)Z",
  );

  /// from: public boolean startNextMatchingActivity(android.content.Intent intent)
  bool startNextMatchingActivity(
    jni.JObject intent,
  ) {
    return _id_startNextMatchingActivity(
        this, const jni.jbooleanType(), [intent.reference.pointer]);
  }

  static final _id_startNextMatchingActivity1 = _class.instanceMethodId(
    r"startNextMatchingActivity",
    r"(Landroid/content/Intent;Landroid/os/Bundle;)Z",
  );

  /// from: public boolean startNextMatchingActivity(android.content.Intent intent, android.os.Bundle bundle)
  bool startNextMatchingActivity1(
    jni.JObject intent,
    jni.JObject bundle,
  ) {
    return _id_startNextMatchingActivity1(this, const jni.jbooleanType(),
        [intent.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_startActivityFromChild = _class.instanceMethodId(
    r"startActivityFromChild",
    r"(Landroid/app/Activity;Landroid/content/Intent;I)V",
  );

  /// from: public void startActivityFromChild(android.app.Activity activity, android.content.Intent intent, int i)
  void startActivityFromChild(
    Activity activity,
    jni.JObject intent,
    int i,
  ) {
    _id_startActivityFromChild(this, const jni.jvoidType(), [
      activity.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i)
    ]);
  }

  static final _id_startActivityFromChild1 = _class.instanceMethodId(
    r"startActivityFromChild",
    r"(Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)V",
  );

  /// from: public void startActivityFromChild(android.app.Activity activity, android.content.Intent intent, int i, android.os.Bundle bundle)
  void startActivityFromChild1(
    Activity activity,
    jni.JObject intent,
    int i,
    jni.JObject bundle,
  ) {
    _id_startActivityFromChild1(this, const jni.jvoidType(), [
      activity.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i),
      bundle.reference.pointer
    ]);
  }

  static final _id_startActivityFromFragment = _class.instanceMethodId(
    r"startActivityFromFragment",
    r"(Landroid/app/Fragment;Landroid/content/Intent;I)V",
  );

  /// from: public void startActivityFromFragment(android.app.Fragment fragment, android.content.Intent intent, int i)
  void startActivityFromFragment(
    jni.JObject fragment,
    jni.JObject intent,
    int i,
  ) {
    _id_startActivityFromFragment(this, const jni.jvoidType(), [
      fragment.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i)
    ]);
  }

  static final _id_startActivityFromFragment1 = _class.instanceMethodId(
    r"startActivityFromFragment",
    r"(Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)V",
  );

  /// from: public void startActivityFromFragment(android.app.Fragment fragment, android.content.Intent intent, int i, android.os.Bundle bundle)
  void startActivityFromFragment1(
    jni.JObject fragment,
    jni.JObject intent,
    int i,
    jni.JObject bundle,
  ) {
    _id_startActivityFromFragment1(this, const jni.jvoidType(), [
      fragment.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i),
      bundle.reference.pointer
    ]);
  }

  static final _id_startIntentSenderFromChild = _class.instanceMethodId(
    r"startIntentSenderFromChild",
    r"(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;III)V",
  );

  /// from: public void startIntentSenderFromChild(android.app.Activity activity, android.content.IntentSender intentSender, int i, android.content.Intent intent, int i1, int i2, int i3)
  void startIntentSenderFromChild(
    Activity activity,
    jni.JObject intentSender,
    int i,
    jni.JObject intent,
    int i1,
    int i2,
    int i3,
  ) {
    _id_startIntentSenderFromChild(this, const jni.jvoidType(), [
      activity.reference.pointer,
      intentSender.reference.pointer,
      jni.JValueInt(i),
      intent.reference.pointer,
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      jni.JValueInt(i3)
    ]);
  }

  static final _id_startIntentSenderFromChild1 = _class.instanceMethodId(
    r"startIntentSenderFromChild",
    r"(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V",
  );

  /// from: public void startIntentSenderFromChild(android.app.Activity activity, android.content.IntentSender intentSender, int i, android.content.Intent intent, int i1, int i2, int i3, android.os.Bundle bundle)
  void startIntentSenderFromChild1(
    Activity activity,
    jni.JObject intentSender,
    int i,
    jni.JObject intent,
    int i1,
    int i2,
    int i3,
    jni.JObject bundle,
  ) {
    _id_startIntentSenderFromChild1(this, const jni.jvoidType(), [
      activity.reference.pointer,
      intentSender.reference.pointer,
      jni.JValueInt(i),
      intent.reference.pointer,
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      jni.JValueInt(i3),
      bundle.reference.pointer
    ]);
  }

  static final _id_overrideActivityTransition = _class.instanceMethodId(
    r"overrideActivityTransition",
    r"(III)V",
  );

  /// from: public void overrideActivityTransition(int i, int i1, int i2)
  void overrideActivityTransition(
    int i,
    int i1,
    int i2,
  ) {
    _id_overrideActivityTransition(this, const jni.jvoidType(),
        [jni.JValueInt(i), jni.JValueInt(i1), jni.JValueInt(i2)]);
  }

  static final _id_overrideActivityTransition1 = _class.instanceMethodId(
    r"overrideActivityTransition",
    r"(IIII)V",
  );

  /// from: public void overrideActivityTransition(int i, int i1, int i2, int i3)
  void overrideActivityTransition1(
    int i,
    int i1,
    int i2,
    int i3,
  ) {
    _id_overrideActivityTransition1(this, const jni.jvoidType(), [
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      jni.JValueInt(i3)
    ]);
  }

  static final _id_clearOverrideActivityTransition = _class.instanceMethodId(
    r"clearOverrideActivityTransition",
    r"(I)V",
  );

  /// from: public void clearOverrideActivityTransition(int i)
  void clearOverrideActivityTransition(
    int i,
  ) {
    _id_clearOverrideActivityTransition(
        this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_overridePendingTransition = _class.instanceMethodId(
    r"overridePendingTransition",
    r"(II)V",
  );

  /// from: public void overridePendingTransition(int i, int i1)
  void overridePendingTransition(
    int i,
    int i1,
  ) {
    _id_overridePendingTransition(
        this, const jni.jvoidType(), [jni.JValueInt(i), jni.JValueInt(i1)]);
  }

  static final _id_overridePendingTransition1 = _class.instanceMethodId(
    r"overridePendingTransition",
    r"(III)V",
  );

  /// from: public void overridePendingTransition(int i, int i1, int i2)
  void overridePendingTransition1(
    int i,
    int i1,
    int i2,
  ) {
    _id_overridePendingTransition1(this, const jni.jvoidType(),
        [jni.JValueInt(i), jni.JValueInt(i1), jni.JValueInt(i2)]);
  }

  static final _id_setResult = _class.instanceMethodId(
    r"setResult",
    r"(I)V",
  );

  /// from: public final void setResult(int i)
  void setResult(
    int i,
  ) {
    _id_setResult(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_setResult1 = _class.instanceMethodId(
    r"setResult",
    r"(ILandroid/content/Intent;)V",
  );

  /// from: public final void setResult(int i, android.content.Intent intent)
  void setResult1(
    int i,
    jni.JObject intent,
  ) {
    _id_setResult1(this, const jni.jvoidType(),
        [jni.JValueInt(i), intent.reference.pointer]);
  }

  static final _id_getReferrer = _class.instanceMethodId(
    r"getReferrer",
    r"()Landroid/net/Uri;",
  );

  /// from: public android.net.Uri getReferrer()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getReferrer() {
    return _id_getReferrer(this, const jni.JObjectType(), []);
  }

  static final _id_onProvideReferrer = _class.instanceMethodId(
    r"onProvideReferrer",
    r"()Landroid/net/Uri;",
  );

  /// from: public android.net.Uri onProvideReferrer()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onProvideReferrer() {
    return _id_onProvideReferrer(this, const jni.JObjectType(), []);
  }

  static final _id_getCallingPackage = _class.instanceMethodId(
    r"getCallingPackage",
    r"()Ljava/lang/String;",
  );

  /// from: public java.lang.String getCallingPackage()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getCallingPackage() {
    return _id_getCallingPackage(this, const jni.JStringType(), []);
  }

  static final _id_getCallingActivity = _class.instanceMethodId(
    r"getCallingActivity",
    r"()Landroid/content/ComponentName;",
  );

  /// from: public android.content.ComponentName getCallingActivity()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCallingActivity() {
    return _id_getCallingActivity(this, const jni.JObjectType(), []);
  }

  static final _id_getLaunchedFromUid = _class.instanceMethodId(
    r"getLaunchedFromUid",
    r"()I",
  );

  /// from: public int getLaunchedFromUid()
  int getLaunchedFromUid() {
    return _id_getLaunchedFromUid(this, const jni.jintType(), []);
  }

  static final _id_getLaunchedFromPackage = _class.instanceMethodId(
    r"getLaunchedFromPackage",
    r"()Ljava/lang/String;",
  );

  /// from: public java.lang.String getLaunchedFromPackage()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getLaunchedFromPackage() {
    return _id_getLaunchedFromPackage(this, const jni.JStringType(), []);
  }

  static final _id_setVisible = _class.instanceMethodId(
    r"setVisible",
    r"(Z)V",
  );

  /// from: public void setVisible(boolean z)
  void setVisible(
    bool z,
  ) {
    _id_setVisible(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_isFinishing = _class.instanceMethodId(
    r"isFinishing",
    r"()Z",
  );

  /// from: public boolean isFinishing()
  bool isFinishing() {
    return _id_isFinishing(this, const jni.jbooleanType(), []);
  }

  static final _id_isDestroyed = _class.instanceMethodId(
    r"isDestroyed",
    r"()Z",
  );

  /// from: public boolean isDestroyed()
  bool isDestroyed() {
    return _id_isDestroyed(this, const jni.jbooleanType(), []);
  }

  static final _id_isChangingConfigurations = _class.instanceMethodId(
    r"isChangingConfigurations",
    r"()Z",
  );

  /// from: public boolean isChangingConfigurations()
  bool isChangingConfigurations() {
    return _id_isChangingConfigurations(this, const jni.jbooleanType(), []);
  }

  static final _id_recreate = _class.instanceMethodId(
    r"recreate",
    r"()V",
  );

  /// from: public void recreate()
  void recreate() {
    _id_recreate(this, const jni.jvoidType(), []);
  }

  static final _id_finish = _class.instanceMethodId(
    r"finish",
    r"()V",
  );

  /// from: public void finish()
  void finish() {
    _id_finish(this, const jni.jvoidType(), []);
  }

  static final _id_finishAffinity = _class.instanceMethodId(
    r"finishAffinity",
    r"()V",
  );

  /// from: public void finishAffinity()
  void finishAffinity() {
    _id_finishAffinity(this, const jni.jvoidType(), []);
  }

  static final _id_finishFromChild = _class.instanceMethodId(
    r"finishFromChild",
    r"(Landroid/app/Activity;)V",
  );

  /// from: public void finishFromChild(android.app.Activity activity)
  void finishFromChild(
    Activity activity,
  ) {
    _id_finishFromChild(
        this, const jni.jvoidType(), [activity.reference.pointer]);
  }

  static final _id_finishAfterTransition = _class.instanceMethodId(
    r"finishAfterTransition",
    r"()V",
  );

  /// from: public void finishAfterTransition()
  void finishAfterTransition() {
    _id_finishAfterTransition(this, const jni.jvoidType(), []);
  }

  static final _id_finishActivity = _class.instanceMethodId(
    r"finishActivity",
    r"(I)V",
  );

  /// from: public void finishActivity(int i)
  void finishActivity(
    int i,
  ) {
    _id_finishActivity(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_finishActivityFromChild = _class.instanceMethodId(
    r"finishActivityFromChild",
    r"(Landroid/app/Activity;I)V",
  );

  /// from: public void finishActivityFromChild(android.app.Activity activity, int i)
  void finishActivityFromChild(
    Activity activity,
    int i,
  ) {
    _id_finishActivityFromChild(this, const jni.jvoidType(),
        [activity.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_finishAndRemoveTask = _class.instanceMethodId(
    r"finishAndRemoveTask",
    r"()V",
  );

  /// from: public void finishAndRemoveTask()
  void finishAndRemoveTask() {
    _id_finishAndRemoveTask(this, const jni.jvoidType(), []);
  }

  static final _id_releaseInstance = _class.instanceMethodId(
    r"releaseInstance",
    r"()Z",
  );

  /// from: public boolean releaseInstance()
  bool releaseInstance() {
    return _id_releaseInstance(this, const jni.jbooleanType(), []);
  }

  static final _id_onActivityResult = _class.instanceMethodId(
    r"onActivityResult",
    r"(IILandroid/content/Intent;)V",
  );

  /// from: protected void onActivityResult(int i, int i1, android.content.Intent intent)
  void onActivityResult(
    int i,
    int i1,
    jni.JObject intent,
  ) {
    _id_onActivityResult(this, const jni.jvoidType(),
        [jni.JValueInt(i), jni.JValueInt(i1), intent.reference.pointer]);
  }

  static final _id_onActivityReenter = _class.instanceMethodId(
    r"onActivityReenter",
    r"(ILandroid/content/Intent;)V",
  );

  /// from: public void onActivityReenter(int i, android.content.Intent intent)
  void onActivityReenter(
    int i,
    jni.JObject intent,
  ) {
    _id_onActivityReenter(this, const jni.jvoidType(),
        [jni.JValueInt(i), intent.reference.pointer]);
  }

  static final _id_createPendingResult = _class.instanceMethodId(
    r"createPendingResult",
    r"(ILandroid/content/Intent;I)Landroid/app/PendingIntent;",
  );

  /// from: public android.app.PendingIntent createPendingResult(int i, android.content.Intent intent, int i1)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject createPendingResult(
    int i,
    jni.JObject intent,
    int i1,
  ) {
    return _id_createPendingResult(this, const jni.JObjectType(),
        [jni.JValueInt(i), intent.reference.pointer, jni.JValueInt(i1)]);
  }

  static final _id_setRequestedOrientation = _class.instanceMethodId(
    r"setRequestedOrientation",
    r"(I)V",
  );

  /// from: public void setRequestedOrientation(int i)
  void setRequestedOrientation(
    int i,
  ) {
    _id_setRequestedOrientation(
        this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_getRequestedOrientation = _class.instanceMethodId(
    r"getRequestedOrientation",
    r"()I",
  );

  /// from: public int getRequestedOrientation()
  int getRequestedOrientation() {
    return _id_getRequestedOrientation(this, const jni.jintType(), []);
  }

  static final _id_getTaskId = _class.instanceMethodId(
    r"getTaskId",
    r"()I",
  );

  /// from: public int getTaskId()
  int getTaskId() {
    return _id_getTaskId(this, const jni.jintType(), []);
  }

  static final _id_isTaskRoot = _class.instanceMethodId(
    r"isTaskRoot",
    r"()Z",
  );

  /// from: public boolean isTaskRoot()
  bool isTaskRoot() {
    return _id_isTaskRoot(this, const jni.jbooleanType(), []);
  }

  static final _id_moveTaskToBack = _class.instanceMethodId(
    r"moveTaskToBack",
    r"(Z)Z",
  );

  /// from: public boolean moveTaskToBack(boolean z)
  bool moveTaskToBack(
    bool z,
  ) {
    return _id_moveTaskToBack(this, const jni.jbooleanType(), [z ? 1 : 0]);
  }

  static final _id_getLocalClassName = _class.instanceMethodId(
    r"getLocalClassName",
    r"()Ljava/lang/String;",
  );

  /// from: public java.lang.String getLocalClassName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getLocalClassName() {
    return _id_getLocalClassName(this, const jni.JStringType(), []);
  }

  static final _id_getComponentName = _class.instanceMethodId(
    r"getComponentName",
    r"()Landroid/content/ComponentName;",
  );

  /// from: public android.content.ComponentName getComponentName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getComponentName() {
    return _id_getComponentName(this, const jni.JObjectType(), []);
  }

  static final _id_getPreferences = _class.instanceMethodId(
    r"getPreferences",
    r"(I)Landroid/content/SharedPreferences;",
  );

  /// from: public android.content.SharedPreferences getPreferences(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getPreferences(
    int i,
  ) {
    return _id_getPreferences(
        this, const jni.JObjectType(), [jni.JValueInt(i)]);
  }

  static final _id_isLaunchedFromBubble = _class.instanceMethodId(
    r"isLaunchedFromBubble",
    r"()Z",
  );

  /// from: public boolean isLaunchedFromBubble()
  bool isLaunchedFromBubble() {
    return _id_isLaunchedFromBubble(this, const jni.jbooleanType(), []);
  }

  static final _id_getSystemService = _class.instanceMethodId(
    r"getSystemService",
    r"(Ljava/lang/String;)Ljava/lang/Object;",
  );

  /// from: public java.lang.Object getSystemService(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSystemService(
    jni.JString string,
  ) {
    return _id_getSystemService(
        this, const jni.JObjectType(), [string.reference.pointer]);
  }

  static final _id_setTitle = _class.instanceMethodId(
    r"setTitle",
    r"(Ljava/lang/CharSequence;)V",
  );

  /// from: public void setTitle(java.lang.CharSequence charSequence)
  void setTitle(
    jni.JObject charSequence,
  ) {
    _id_setTitle(this, const jni.jvoidType(), [charSequence.reference.pointer]);
  }

  static final _id_setTitle1 = _class.instanceMethodId(
    r"setTitle",
    r"(I)V",
  );

  /// from: public void setTitle(int i)
  void setTitle1(
    int i,
  ) {
    _id_setTitle1(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_setTitleColor = _class.instanceMethodId(
    r"setTitleColor",
    r"(I)V",
  );

  /// from: public void setTitleColor(int i)
  void setTitleColor(
    int i,
  ) {
    _id_setTitleColor(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_getTitle = _class.instanceMethodId(
    r"getTitle",
    r"()Ljava/lang/CharSequence;",
  );

  /// from: public final java.lang.CharSequence getTitle()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getTitle() {
    return _id_getTitle(this, const jni.JObjectType(), []);
  }

  static final _id_getTitleColor = _class.instanceMethodId(
    r"getTitleColor",
    r"()I",
  );

  /// from: public final int getTitleColor()
  int getTitleColor() {
    return _id_getTitleColor(this, const jni.jintType(), []);
  }

  static final _id_onTitleChanged = _class.instanceMethodId(
    r"onTitleChanged",
    r"(Ljava/lang/CharSequence;I)V",
  );

  /// from: protected void onTitleChanged(java.lang.CharSequence charSequence, int i)
  void onTitleChanged(
    jni.JObject charSequence,
    int i,
  ) {
    _id_onTitleChanged(this, const jni.jvoidType(),
        [charSequence.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_onChildTitleChanged = _class.instanceMethodId(
    r"onChildTitleChanged",
    r"(Landroid/app/Activity;Ljava/lang/CharSequence;)V",
  );

  /// from: protected void onChildTitleChanged(android.app.Activity activity, java.lang.CharSequence charSequence)
  void onChildTitleChanged(
    Activity activity,
    jni.JObject charSequence,
  ) {
    _id_onChildTitleChanged(this, const jni.jvoidType(),
        [activity.reference.pointer, charSequence.reference.pointer]);
  }

  static final _id_setTaskDescription = _class.instanceMethodId(
    r"setTaskDescription",
    r"(Landroid/app/ActivityManager$TaskDescription;)V",
  );

  /// from: public void setTaskDescription(android.app.ActivityManager$TaskDescription taskDescription)
  void setTaskDescription(
    jni.JObject taskDescription,
  ) {
    _id_setTaskDescription(
        this, const jni.jvoidType(), [taskDescription.reference.pointer]);
  }

  static final _id_setProgressBarVisibility = _class.instanceMethodId(
    r"setProgressBarVisibility",
    r"(Z)V",
  );

  /// from: public final void setProgressBarVisibility(boolean z)
  void setProgressBarVisibility(
    bool z,
  ) {
    _id_setProgressBarVisibility(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setProgressBarIndeterminateVisibility =
      _class.instanceMethodId(
    r"setProgressBarIndeterminateVisibility",
    r"(Z)V",
  );

  /// from: public final void setProgressBarIndeterminateVisibility(boolean z)
  void setProgressBarIndeterminateVisibility(
    bool z,
  ) {
    _id_setProgressBarIndeterminateVisibility(
        this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setProgressBarIndeterminate = _class.instanceMethodId(
    r"setProgressBarIndeterminate",
    r"(Z)V",
  );

  /// from: public final void setProgressBarIndeterminate(boolean z)
  void setProgressBarIndeterminate(
    bool z,
  ) {
    _id_setProgressBarIndeterminate(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setProgress = _class.instanceMethodId(
    r"setProgress",
    r"(I)V",
  );

  /// from: public final void setProgress(int i)
  void setProgress(
    int i,
  ) {
    _id_setProgress(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_setSecondaryProgress = _class.instanceMethodId(
    r"setSecondaryProgress",
    r"(I)V",
  );

  /// from: public final void setSecondaryProgress(int i)
  void setSecondaryProgress(
    int i,
  ) {
    _id_setSecondaryProgress(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_setVolumeControlStream = _class.instanceMethodId(
    r"setVolumeControlStream",
    r"(I)V",
  );

  /// from: public final void setVolumeControlStream(int i)
  void setVolumeControlStream(
    int i,
  ) {
    _id_setVolumeControlStream(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_getVolumeControlStream = _class.instanceMethodId(
    r"getVolumeControlStream",
    r"()I",
  );

  /// from: public final int getVolumeControlStream()
  int getVolumeControlStream() {
    return _id_getVolumeControlStream(this, const jni.jintType(), []);
  }

  static final _id_setMediaController = _class.instanceMethodId(
    r"setMediaController",
    r"(Landroid/media/session/MediaController;)V",
  );

  /// from: public final void setMediaController(android.media.session.MediaController mediaController)
  void setMediaController(
    jni.JObject mediaController,
  ) {
    _id_setMediaController(
        this, const jni.jvoidType(), [mediaController.reference.pointer]);
  }

  static final _id_getMediaController = _class.instanceMethodId(
    r"getMediaController",
    r"()Landroid/media/session/MediaController;",
  );

  /// from: public final android.media.session.MediaController getMediaController()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getMediaController() {
    return _id_getMediaController(this, const jni.JObjectType(), []);
  }

  static final _id_runOnUiThread = _class.instanceMethodId(
    r"runOnUiThread",
    r"(Ljava/lang/Runnable;)V",
  );

  /// from: public final void runOnUiThread(java.lang.Runnable runnable)
  void runOnUiThread(
    jni.JObject runnable,
  ) {
    _id_runOnUiThread(
        this, const jni.jvoidType(), [runnable.reference.pointer]);
  }

  static final _id_onCreateView = _class.instanceMethodId(
    r"onCreateView",
    r"(Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;",
  );

  /// from: public android.view.View onCreateView(java.lang.String string, android.content.Context context, android.util.AttributeSet attributeSet)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onCreateView(
    jni.JString string,
    Context context,
    jni.JObject attributeSet,
  ) {
    return _id_onCreateView(this, const jni.JObjectType(), [
      string.reference.pointer,
      context.reference.pointer,
      attributeSet.reference.pointer
    ]);
  }

  static final _id_onCreateView1 = _class.instanceMethodId(
    r"onCreateView",
    r"(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;",
  );

  /// from: public android.view.View onCreateView(android.view.View view, java.lang.String string, android.content.Context context, android.util.AttributeSet attributeSet)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onCreateView1(
    jni.JObject view,
    jni.JString string,
    Context context,
    jni.JObject attributeSet,
  ) {
    return _id_onCreateView1(this, const jni.JObjectType(), [
      view.reference.pointer,
      string.reference.pointer,
      context.reference.pointer,
      attributeSet.reference.pointer
    ]);
  }

  static final _id_dump = _class.instanceMethodId(
    r"dump",
    r"(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V",
  );

  /// from: public void dump(java.lang.String string, java.io.FileDescriptor fileDescriptor, java.io.PrintWriter printWriter, java.lang.String[] strings)
  void dump(
    jni.JString string,
    jni.JObject fileDescriptor,
    jni.JObject printWriter,
    jni.JArray<jni.JString> strings,
  ) {
    _id_dump(this, const jni.jvoidType(), [
      string.reference.pointer,
      fileDescriptor.reference.pointer,
      printWriter.reference.pointer,
      strings.reference.pointer
    ]);
  }

  static final _id_isImmersive = _class.instanceMethodId(
    r"isImmersive",
    r"()Z",
  );

  /// from: public boolean isImmersive()
  bool isImmersive() {
    return _id_isImmersive(this, const jni.jbooleanType(), []);
  }

  static final _id_setTranslucent = _class.instanceMethodId(
    r"setTranslucent",
    r"(Z)Z",
  );

  /// from: public boolean setTranslucent(boolean z)
  bool setTranslucent(
    bool z,
  ) {
    return _id_setTranslucent(this, const jni.jbooleanType(), [z ? 1 : 0]);
  }

  static final _id_requestVisibleBehind = _class.instanceMethodId(
    r"requestVisibleBehind",
    r"(Z)Z",
  );

  /// from: public boolean requestVisibleBehind(boolean z)
  bool requestVisibleBehind(
    bool z,
  ) {
    return _id_requestVisibleBehind(
        this, const jni.jbooleanType(), [z ? 1 : 0]);
  }

  static final _id_onVisibleBehindCanceled = _class.instanceMethodId(
    r"onVisibleBehindCanceled",
    r"()V",
  );

  /// from: public void onVisibleBehindCanceled()
  void onVisibleBehindCanceled() {
    _id_onVisibleBehindCanceled(this, const jni.jvoidType(), []);
  }

  static final _id_onEnterAnimationComplete = _class.instanceMethodId(
    r"onEnterAnimationComplete",
    r"()V",
  );

  /// from: public void onEnterAnimationComplete()
  void onEnterAnimationComplete() {
    _id_onEnterAnimationComplete(this, const jni.jvoidType(), []);
  }

  static final _id_setImmersive = _class.instanceMethodId(
    r"setImmersive",
    r"(Z)V",
  );

  /// from: public void setImmersive(boolean z)
  void setImmersive(
    bool z,
  ) {
    _id_setImmersive(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setVrModeEnabled = _class.instanceMethodId(
    r"setVrModeEnabled",
    r"(ZLandroid/content/ComponentName;)V",
  );

  /// from: public void setVrModeEnabled(boolean z, android.content.ComponentName componentName)
  void setVrModeEnabled(
    bool z,
    jni.JObject componentName,
  ) {
    _id_setVrModeEnabled(this, const jni.jvoidType(),
        [z ? 1 : 0, componentName.reference.pointer]);
  }

  static final _id_startActionMode = _class.instanceMethodId(
    r"startActionMode",
    r"(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;",
  );

  /// from: public android.view.ActionMode startActionMode(android.view.ActionMode$Callback callback)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject startActionMode(
    jni.JObject callback,
  ) {
    return _id_startActionMode(
        this, const jni.JObjectType(), [callback.reference.pointer]);
  }

  static final _id_startActionMode1 = _class.instanceMethodId(
    r"startActionMode",
    r"(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;",
  );

  /// from: public android.view.ActionMode startActionMode(android.view.ActionMode$Callback callback, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject startActionMode1(
    jni.JObject callback,
    int i,
  ) {
    return _id_startActionMode1(this, const jni.JObjectType(),
        [callback.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_onWindowStartingActionMode = _class.instanceMethodId(
    r"onWindowStartingActionMode",
    r"(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;",
  );

  /// from: public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback callback)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onWindowStartingActionMode(
    jni.JObject callback,
  ) {
    return _id_onWindowStartingActionMode(
        this, const jni.JObjectType(), [callback.reference.pointer]);
  }

  static final _id_onWindowStartingActionMode1 = _class.instanceMethodId(
    r"onWindowStartingActionMode",
    r"(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;",
  );

  /// from: public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback callback, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject onWindowStartingActionMode1(
    jni.JObject callback,
    int i,
  ) {
    return _id_onWindowStartingActionMode1(this, const jni.JObjectType(),
        [callback.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_onActionModeStarted = _class.instanceMethodId(
    r"onActionModeStarted",
    r"(Landroid/view/ActionMode;)V",
  );

  /// from: public void onActionModeStarted(android.view.ActionMode actionMode)
  void onActionModeStarted(
    jni.JObject actionMode,
  ) {
    _id_onActionModeStarted(
        this, const jni.jvoidType(), [actionMode.reference.pointer]);
  }

  static final _id_onActionModeFinished = _class.instanceMethodId(
    r"onActionModeFinished",
    r"(Landroid/view/ActionMode;)V",
  );

  /// from: public void onActionModeFinished(android.view.ActionMode actionMode)
  void onActionModeFinished(
    jni.JObject actionMode,
  ) {
    _id_onActionModeFinished(
        this, const jni.jvoidType(), [actionMode.reference.pointer]);
  }

  static final _id_shouldUpRecreateTask = _class.instanceMethodId(
    r"shouldUpRecreateTask",
    r"(Landroid/content/Intent;)Z",
  );

  /// from: public boolean shouldUpRecreateTask(android.content.Intent intent)
  bool shouldUpRecreateTask(
    jni.JObject intent,
  ) {
    return _id_shouldUpRecreateTask(
        this, const jni.jbooleanType(), [intent.reference.pointer]);
  }

  static final _id_navigateUpTo = _class.instanceMethodId(
    r"navigateUpTo",
    r"(Landroid/content/Intent;)Z",
  );

  /// from: public boolean navigateUpTo(android.content.Intent intent)
  bool navigateUpTo(
    jni.JObject intent,
  ) {
    return _id_navigateUpTo(
        this, const jni.jbooleanType(), [intent.reference.pointer]);
  }

  static final _id_navigateUpToFromChild = _class.instanceMethodId(
    r"navigateUpToFromChild",
    r"(Landroid/app/Activity;Landroid/content/Intent;)Z",
  );

  /// from: public boolean navigateUpToFromChild(android.app.Activity activity, android.content.Intent intent)
  bool navigateUpToFromChild(
    Activity activity,
    jni.JObject intent,
  ) {
    return _id_navigateUpToFromChild(this, const jni.jbooleanType(),
        [activity.reference.pointer, intent.reference.pointer]);
  }

  static final _id_getParentActivityIntent = _class.instanceMethodId(
    r"getParentActivityIntent",
    r"()Landroid/content/Intent;",
  );

  /// from: public android.content.Intent getParentActivityIntent()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getParentActivityIntent() {
    return _id_getParentActivityIntent(this, const jni.JObjectType(), []);
  }

  static final _id_setEnterSharedElementCallback = _class.instanceMethodId(
    r"setEnterSharedElementCallback",
    r"(Landroid/app/SharedElementCallback;)V",
  );

  /// from: public void setEnterSharedElementCallback(android.app.SharedElementCallback sharedElementCallback)
  void setEnterSharedElementCallback(
    jni.JObject sharedElementCallback,
  ) {
    _id_setEnterSharedElementCallback(
        this, const jni.jvoidType(), [sharedElementCallback.reference.pointer]);
  }

  static final _id_setExitSharedElementCallback = _class.instanceMethodId(
    r"setExitSharedElementCallback",
    r"(Landroid/app/SharedElementCallback;)V",
  );

  /// from: public void setExitSharedElementCallback(android.app.SharedElementCallback sharedElementCallback)
  void setExitSharedElementCallback(
    jni.JObject sharedElementCallback,
  ) {
    _id_setExitSharedElementCallback(
        this, const jni.jvoidType(), [sharedElementCallback.reference.pointer]);
  }

  static final _id_postponeEnterTransition = _class.instanceMethodId(
    r"postponeEnterTransition",
    r"()V",
  );

  /// from: public void postponeEnterTransition()
  void postponeEnterTransition() {
    _id_postponeEnterTransition(this, const jni.jvoidType(), []);
  }

  static final _id_startPostponedEnterTransition = _class.instanceMethodId(
    r"startPostponedEnterTransition",
    r"()V",
  );

  /// from: public void startPostponedEnterTransition()
  void startPostponedEnterTransition() {
    _id_startPostponedEnterTransition(this, const jni.jvoidType(), []);
  }

  static final _id_requestDragAndDropPermissions = _class.instanceMethodId(
    r"requestDragAndDropPermissions",
    r"(Landroid/view/DragEvent;)Landroid/view/DragAndDropPermissions;",
  );

  /// from: public android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent dragEvent)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject requestDragAndDropPermissions(
    jni.JObject dragEvent,
  ) {
    return _id_requestDragAndDropPermissions(
        this, const jni.JObjectType(), [dragEvent.reference.pointer]);
  }

  static final _id_startLockTask = _class.instanceMethodId(
    r"startLockTask",
    r"()V",
  );

  /// from: public void startLockTask()
  void startLockTask() {
    _id_startLockTask(this, const jni.jvoidType(), []);
  }

  static final _id_stopLockTask = _class.instanceMethodId(
    r"stopLockTask",
    r"()V",
  );

  /// from: public void stopLockTask()
  void stopLockTask() {
    _id_stopLockTask(this, const jni.jvoidType(), []);
  }

  static final _id_showLockTaskEscapeMessage = _class.instanceMethodId(
    r"showLockTaskEscapeMessage",
    r"()V",
  );

  /// from: public void showLockTaskEscapeMessage()
  void showLockTaskEscapeMessage() {
    _id_showLockTaskEscapeMessage(this, const jni.jvoidType(), []);
  }

  static final _id_setRecentsScreenshotEnabled = _class.instanceMethodId(
    r"setRecentsScreenshotEnabled",
    r"(Z)V",
  );

  /// from: public void setRecentsScreenshotEnabled(boolean z)
  void setRecentsScreenshotEnabled(
    bool z,
  ) {
    _id_setRecentsScreenshotEnabled(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setShowWhenLocked = _class.instanceMethodId(
    r"setShowWhenLocked",
    r"(Z)V",
  );

  /// from: public void setShowWhenLocked(boolean z)
  void setShowWhenLocked(
    bool z,
  ) {
    _id_setShowWhenLocked(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setInheritShowWhenLocked = _class.instanceMethodId(
    r"setInheritShowWhenLocked",
    r"(Z)V",
  );

  /// from: public void setInheritShowWhenLocked(boolean z)
  void setInheritShowWhenLocked(
    bool z,
  ) {
    _id_setInheritShowWhenLocked(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_setTurnScreenOn = _class.instanceMethodId(
    r"setTurnScreenOn",
    r"(Z)V",
  );

  /// from: public void setTurnScreenOn(boolean z)
  void setTurnScreenOn(
    bool z,
  ) {
    _id_setTurnScreenOn(this, const jni.jvoidType(), [z ? 1 : 0]);
  }

  static final _id_getOnBackInvokedDispatcher = _class.instanceMethodId(
    r"getOnBackInvokedDispatcher",
    r"()Landroid/window/OnBackInvokedDispatcher;",
  );

  /// from: public android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getOnBackInvokedDispatcher() {
    return _id_getOnBackInvokedDispatcher(this, const jni.JObjectType(), []);
  }

  static final _id_registerScreenCaptureCallback = _class.instanceMethodId(
    r"registerScreenCaptureCallback",
    r"(Ljava/util/concurrent/Executor;Landroid/app/Activity$ScreenCaptureCallback;)V",
  );

  /// from: public void registerScreenCaptureCallback(java.util.concurrent.Executor executor, android.app.Activity$ScreenCaptureCallback screenCaptureCallback)
  void registerScreenCaptureCallback(
    jni.JObject executor,
    Activity_ScreenCaptureCallback screenCaptureCallback,
  ) {
    _id_registerScreenCaptureCallback(this, const jni.jvoidType(),
        [executor.reference.pointer, screenCaptureCallback.reference.pointer]);
  }

  static final _id_unregisterScreenCaptureCallback = _class.instanceMethodId(
    r"unregisterScreenCaptureCallback",
    r"(Landroid/app/Activity$ScreenCaptureCallback;)V",
  );

  /// from: public void unregisterScreenCaptureCallback(android.app.Activity$ScreenCaptureCallback screenCaptureCallback)
  void unregisterScreenCaptureCallback(
    Activity_ScreenCaptureCallback screenCaptureCallback,
  ) {
    _id_unregisterScreenCaptureCallback(
        this, const jni.jvoidType(), [screenCaptureCallback.reference.pointer]);
  }
}

final class $ActivityType extends jni.JObjType<Activity> {
  const $ActivityType();

  @override
  String get signature => r"Landroid/app/Activity;";

  @override
  Activity fromReference(jni.JReference reference) =>
      Activity.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($ActivityType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($ActivityType) && other is $ActivityType;
  }
}

/// from: android.content.Context$BindServiceFlags
class Context_BindServiceFlags extends jni.JObject {
  @override
  late final jni.JObjType<Context_BindServiceFlags> $type = type;

  Context_BindServiceFlags.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class =
      jni.JClass.forName(r"android/content/Context$BindServiceFlags");

  /// The type which includes information such as the signature of this class.
  static const type = $Context_BindServiceFlagsType();
  static final _id_of = _class.staticMethodId(
    r"of",
    r"(J)Landroid/content/Context$BindServiceFlags;",
  );

  /// from: static public android.content.Context$BindServiceFlags of(long j)
  /// The returned object must be released after use, by calling the [release] method.
  static Context_BindServiceFlags of(
    int j,
  ) {
    return _id_of(_class, const $Context_BindServiceFlagsType(), [j]);
  }
}

final class $Context_BindServiceFlagsType
    extends jni.JObjType<Context_BindServiceFlags> {
  const $Context_BindServiceFlagsType();

  @override
  String get signature => r"Landroid/content/Context$BindServiceFlags;";

  @override
  Context_BindServiceFlags fromReference(jni.JReference reference) =>
      Context_BindServiceFlags.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($Context_BindServiceFlagsType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($Context_BindServiceFlagsType) &&
        other is $Context_BindServiceFlagsType;
  }
}

/// from: android.content.Context
class Context extends jni.JObject {
  @override
  late final jni.JObjType<Context> $type = type;

  Context.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class = jni.JClass.forName(r"android/content/Context");

  /// The type which includes information such as the signature of this class.
  static const type = $ContextType();
  static final _id_ACCESSIBILITY_SERVICE = _class.staticFieldId(
    r"ACCESSIBILITY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String ACCESSIBILITY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACCESSIBILITY_SERVICE =>
      _id_ACCESSIBILITY_SERVICE.get(_class, const jni.JStringType());

  static final _id_ACCOUNT_SERVICE = _class.staticFieldId(
    r"ACCOUNT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String ACCOUNT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACCOUNT_SERVICE =>
      _id_ACCOUNT_SERVICE.get(_class, const jni.JStringType());

  static final _id_ACTIVITY_SERVICE = _class.staticFieldId(
    r"ACTIVITY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String ACTIVITY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTIVITY_SERVICE =>
      _id_ACTIVITY_SERVICE.get(_class, const jni.JStringType());

  static final _id_ALARM_SERVICE = _class.staticFieldId(
    r"ALARM_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String ALARM_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ALARM_SERVICE =>
      _id_ALARM_SERVICE.get(_class, const jni.JStringType());

  static final _id_APPWIDGET_SERVICE = _class.staticFieldId(
    r"APPWIDGET_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String APPWIDGET_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get APPWIDGET_SERVICE =>
      _id_APPWIDGET_SERVICE.get(_class, const jni.JStringType());

  static final _id_APP_OPS_SERVICE = _class.staticFieldId(
    r"APP_OPS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String APP_OPS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get APP_OPS_SERVICE =>
      _id_APP_OPS_SERVICE.get(_class, const jni.JStringType());

  static final _id_APP_SEARCH_SERVICE = _class.staticFieldId(
    r"APP_SEARCH_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String APP_SEARCH_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get APP_SEARCH_SERVICE =>
      _id_APP_SEARCH_SERVICE.get(_class, const jni.JStringType());

  static final _id_AUDIO_SERVICE = _class.staticFieldId(
    r"AUDIO_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String AUDIO_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get AUDIO_SERVICE =>
      _id_AUDIO_SERVICE.get(_class, const jni.JStringType());

  static final _id_BATTERY_SERVICE = _class.staticFieldId(
    r"BATTERY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String BATTERY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get BATTERY_SERVICE =>
      _id_BATTERY_SERVICE.get(_class, const jni.JStringType());

  /// from: static public final int BIND_ABOVE_CLIENT
  static const BIND_ABOVE_CLIENT = 8;

  /// from: static public final int BIND_ADJUST_WITH_ACTIVITY
  static const BIND_ADJUST_WITH_ACTIVITY = 128;

  /// from: static public final int BIND_ALLOW_ACTIVITY_STARTS
  static const BIND_ALLOW_ACTIVITY_STARTS = 512;

  /// from: static public final int BIND_ALLOW_OOM_MANAGEMENT
  static const BIND_ALLOW_OOM_MANAGEMENT = 16;

  /// from: static public final int BIND_AUTO_CREATE
  static const BIND_AUTO_CREATE = 1;

  /// from: static public final int BIND_DEBUG_UNBIND
  static const BIND_DEBUG_UNBIND = 2;

  /// from: static public final int BIND_EXTERNAL_SERVICE
  static const BIND_EXTERNAL_SERVICE = -2147483648;

  /// from: static public final long BIND_EXTERNAL_SERVICE_LONG
  static const BIND_EXTERNAL_SERVICE_LONG = 4611686018427387904;

  /// from: static public final int BIND_IMPORTANT
  static const BIND_IMPORTANT = 64;

  /// from: static public final int BIND_INCLUDE_CAPABILITIES
  static const BIND_INCLUDE_CAPABILITIES = 4096;

  /// from: static public final int BIND_NOT_FOREGROUND
  static const BIND_NOT_FOREGROUND = 4;

  /// from: static public final int BIND_NOT_PERCEPTIBLE
  static const BIND_NOT_PERCEPTIBLE = 256;

  /// from: static public final int BIND_SHARED_ISOLATED_PROCESS
  static const BIND_SHARED_ISOLATED_PROCESS = 8192;

  /// from: static public final int BIND_WAIVE_PRIORITY
  static const BIND_WAIVE_PRIORITY = 32;
  static final _id_BIOMETRIC_SERVICE = _class.staticFieldId(
    r"BIOMETRIC_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String BIOMETRIC_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get BIOMETRIC_SERVICE =>
      _id_BIOMETRIC_SERVICE.get(_class, const jni.JStringType());

  static final _id_BLOB_STORE_SERVICE = _class.staticFieldId(
    r"BLOB_STORE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String BLOB_STORE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get BLOB_STORE_SERVICE =>
      _id_BLOB_STORE_SERVICE.get(_class, const jni.JStringType());

  static final _id_BLUETOOTH_SERVICE = _class.staticFieldId(
    r"BLUETOOTH_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String BLUETOOTH_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get BLUETOOTH_SERVICE =>
      _id_BLUETOOTH_SERVICE.get(_class, const jni.JStringType());

  static final _id_BUGREPORT_SERVICE = _class.staticFieldId(
    r"BUGREPORT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String BUGREPORT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get BUGREPORT_SERVICE =>
      _id_BUGREPORT_SERVICE.get(_class, const jni.JStringType());

  static final _id_CAMERA_SERVICE = _class.staticFieldId(
    r"CAMERA_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CAMERA_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CAMERA_SERVICE =>
      _id_CAMERA_SERVICE.get(_class, const jni.JStringType());

  static final _id_CAPTIONING_SERVICE = _class.staticFieldId(
    r"CAPTIONING_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CAPTIONING_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CAPTIONING_SERVICE =>
      _id_CAPTIONING_SERVICE.get(_class, const jni.JStringType());

  static final _id_CARRIER_CONFIG_SERVICE = _class.staticFieldId(
    r"CARRIER_CONFIG_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CARRIER_CONFIG_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CARRIER_CONFIG_SERVICE =>
      _id_CARRIER_CONFIG_SERVICE.get(_class, const jni.JStringType());

  static final _id_CLIPBOARD_SERVICE = _class.staticFieldId(
    r"CLIPBOARD_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CLIPBOARD_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CLIPBOARD_SERVICE =>
      _id_CLIPBOARD_SERVICE.get(_class, const jni.JStringType());

  static final _id_COMPANION_DEVICE_SERVICE = _class.staticFieldId(
    r"COMPANION_DEVICE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String COMPANION_DEVICE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get COMPANION_DEVICE_SERVICE =>
      _id_COMPANION_DEVICE_SERVICE.get(_class, const jni.JStringType());

  static final _id_CONNECTIVITY_DIAGNOSTICS_SERVICE = _class.staticFieldId(
    r"CONNECTIVITY_DIAGNOSTICS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CONNECTIVITY_DIAGNOSTICS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CONNECTIVITY_DIAGNOSTICS_SERVICE =>
      _id_CONNECTIVITY_DIAGNOSTICS_SERVICE.get(_class, const jni.JStringType());

  static final _id_CONNECTIVITY_SERVICE = _class.staticFieldId(
    r"CONNECTIVITY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CONNECTIVITY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CONNECTIVITY_SERVICE =>
      _id_CONNECTIVITY_SERVICE.get(_class, const jni.JStringType());

  static final _id_CONSUMER_IR_SERVICE = _class.staticFieldId(
    r"CONSUMER_IR_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CONSUMER_IR_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CONSUMER_IR_SERVICE =>
      _id_CONSUMER_IR_SERVICE.get(_class, const jni.JStringType());

  /// from: static public final int CONTEXT_IGNORE_SECURITY
  static const CONTEXT_IGNORE_SECURITY = 2;

  /// from: static public final int CONTEXT_INCLUDE_CODE
  static const CONTEXT_INCLUDE_CODE = 1;

  /// from: static public final int CONTEXT_RESTRICTED
  static const CONTEXT_RESTRICTED = 4;
  static final _id_CREDENTIAL_SERVICE = _class.staticFieldId(
    r"CREDENTIAL_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CREDENTIAL_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CREDENTIAL_SERVICE =>
      _id_CREDENTIAL_SERVICE.get(_class, const jni.JStringType());

  static final _id_CROSS_PROFILE_APPS_SERVICE = _class.staticFieldId(
    r"CROSS_PROFILE_APPS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String CROSS_PROFILE_APPS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CROSS_PROFILE_APPS_SERVICE =>
      _id_CROSS_PROFILE_APPS_SERVICE.get(_class, const jni.JStringType());

  /// from: static public final int DEVICE_ID_DEFAULT
  static const DEVICE_ID_DEFAULT = 0;

  /// from: static public final int DEVICE_ID_INVALID
  static const DEVICE_ID_INVALID = -1;
  static final _id_DEVICE_LOCK_SERVICE = _class.staticFieldId(
    r"DEVICE_LOCK_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String DEVICE_LOCK_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get DEVICE_LOCK_SERVICE =>
      _id_DEVICE_LOCK_SERVICE.get(_class, const jni.JStringType());

  static final _id_DEVICE_POLICY_SERVICE = _class.staticFieldId(
    r"DEVICE_POLICY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String DEVICE_POLICY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get DEVICE_POLICY_SERVICE =>
      _id_DEVICE_POLICY_SERVICE.get(_class, const jni.JStringType());

  static final _id_DISPLAY_HASH_SERVICE = _class.staticFieldId(
    r"DISPLAY_HASH_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String DISPLAY_HASH_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get DISPLAY_HASH_SERVICE =>
      _id_DISPLAY_HASH_SERVICE.get(_class, const jni.JStringType());

  static final _id_DISPLAY_SERVICE = _class.staticFieldId(
    r"DISPLAY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String DISPLAY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get DISPLAY_SERVICE =>
      _id_DISPLAY_SERVICE.get(_class, const jni.JStringType());

  static final _id_DOMAIN_VERIFICATION_SERVICE = _class.staticFieldId(
    r"DOMAIN_VERIFICATION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String DOMAIN_VERIFICATION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get DOMAIN_VERIFICATION_SERVICE =>
      _id_DOMAIN_VERIFICATION_SERVICE.get(_class, const jni.JStringType());

  static final _id_DOWNLOAD_SERVICE = _class.staticFieldId(
    r"DOWNLOAD_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String DOWNLOAD_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get DOWNLOAD_SERVICE =>
      _id_DOWNLOAD_SERVICE.get(_class, const jni.JStringType());

  static final _id_DROPBOX_SERVICE = _class.staticFieldId(
    r"DROPBOX_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String DROPBOX_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get DROPBOX_SERVICE =>
      _id_DROPBOX_SERVICE.get(_class, const jni.JStringType());

  static final _id_EUICC_SERVICE = _class.staticFieldId(
    r"EUICC_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String EUICC_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EUICC_SERVICE =>
      _id_EUICC_SERVICE.get(_class, const jni.JStringType());

  static final _id_FILE_INTEGRITY_SERVICE = _class.staticFieldId(
    r"FILE_INTEGRITY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String FILE_INTEGRITY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get FILE_INTEGRITY_SERVICE =>
      _id_FILE_INTEGRITY_SERVICE.get(_class, const jni.JStringType());

  static final _id_FINGERPRINT_SERVICE = _class.staticFieldId(
    r"FINGERPRINT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String FINGERPRINT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get FINGERPRINT_SERVICE =>
      _id_FINGERPRINT_SERVICE.get(_class, const jni.JStringType());

  static final _id_GAME_SERVICE = _class.staticFieldId(
    r"GAME_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String GAME_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get GAME_SERVICE =>
      _id_GAME_SERVICE.get(_class, const jni.JStringType());

  static final _id_GRAMMATICAL_INFLECTION_SERVICE = _class.staticFieldId(
    r"GRAMMATICAL_INFLECTION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String GRAMMATICAL_INFLECTION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get GRAMMATICAL_INFLECTION_SERVICE =>
      _id_GRAMMATICAL_INFLECTION_SERVICE.get(_class, const jni.JStringType());

  static final _id_HARDWARE_PROPERTIES_SERVICE = _class.staticFieldId(
    r"HARDWARE_PROPERTIES_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String HARDWARE_PROPERTIES_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get HARDWARE_PROPERTIES_SERVICE =>
      _id_HARDWARE_PROPERTIES_SERVICE.get(_class, const jni.JStringType());

  static final _id_HEALTHCONNECT_SERVICE = _class.staticFieldId(
    r"HEALTHCONNECT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String HEALTHCONNECT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get HEALTHCONNECT_SERVICE =>
      _id_HEALTHCONNECT_SERVICE.get(_class, const jni.JStringType());

  static final _id_INPUT_METHOD_SERVICE = _class.staticFieldId(
    r"INPUT_METHOD_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String INPUT_METHOD_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get INPUT_METHOD_SERVICE =>
      _id_INPUT_METHOD_SERVICE.get(_class, const jni.JStringType());

  static final _id_INPUT_SERVICE = _class.staticFieldId(
    r"INPUT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String INPUT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get INPUT_SERVICE =>
      _id_INPUT_SERVICE.get(_class, const jni.JStringType());

  static final _id_IPSEC_SERVICE = _class.staticFieldId(
    r"IPSEC_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String IPSEC_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get IPSEC_SERVICE =>
      _id_IPSEC_SERVICE.get(_class, const jni.JStringType());

  static final _id_JOB_SCHEDULER_SERVICE = _class.staticFieldId(
    r"JOB_SCHEDULER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String JOB_SCHEDULER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get JOB_SCHEDULER_SERVICE =>
      _id_JOB_SCHEDULER_SERVICE.get(_class, const jni.JStringType());

  static final _id_KEYGUARD_SERVICE = _class.staticFieldId(
    r"KEYGUARD_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String KEYGUARD_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get KEYGUARD_SERVICE =>
      _id_KEYGUARD_SERVICE.get(_class, const jni.JStringType());

  static final _id_LAUNCHER_APPS_SERVICE = _class.staticFieldId(
    r"LAUNCHER_APPS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String LAUNCHER_APPS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get LAUNCHER_APPS_SERVICE =>
      _id_LAUNCHER_APPS_SERVICE.get(_class, const jni.JStringType());

  static final _id_LAYOUT_INFLATER_SERVICE = _class.staticFieldId(
    r"LAYOUT_INFLATER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String LAYOUT_INFLATER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get LAYOUT_INFLATER_SERVICE =>
      _id_LAYOUT_INFLATER_SERVICE.get(_class, const jni.JStringType());

  static final _id_LOCALE_SERVICE = _class.staticFieldId(
    r"LOCALE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String LOCALE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get LOCALE_SERVICE =>
      _id_LOCALE_SERVICE.get(_class, const jni.JStringType());

  static final _id_LOCATION_SERVICE = _class.staticFieldId(
    r"LOCATION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String LOCATION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get LOCATION_SERVICE =>
      _id_LOCATION_SERVICE.get(_class, const jni.JStringType());

  static final _id_MEDIA_COMMUNICATION_SERVICE = _class.staticFieldId(
    r"MEDIA_COMMUNICATION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String MEDIA_COMMUNICATION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get MEDIA_COMMUNICATION_SERVICE =>
      _id_MEDIA_COMMUNICATION_SERVICE.get(_class, const jni.JStringType());

  static final _id_MEDIA_METRICS_SERVICE = _class.staticFieldId(
    r"MEDIA_METRICS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String MEDIA_METRICS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get MEDIA_METRICS_SERVICE =>
      _id_MEDIA_METRICS_SERVICE.get(_class, const jni.JStringType());

  static final _id_MEDIA_PROJECTION_SERVICE = _class.staticFieldId(
    r"MEDIA_PROJECTION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String MEDIA_PROJECTION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get MEDIA_PROJECTION_SERVICE =>
      _id_MEDIA_PROJECTION_SERVICE.get(_class, const jni.JStringType());

  static final _id_MEDIA_ROUTER_SERVICE = _class.staticFieldId(
    r"MEDIA_ROUTER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String MEDIA_ROUTER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get MEDIA_ROUTER_SERVICE =>
      _id_MEDIA_ROUTER_SERVICE.get(_class, const jni.JStringType());

  static final _id_MEDIA_SESSION_SERVICE = _class.staticFieldId(
    r"MEDIA_SESSION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String MEDIA_SESSION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get MEDIA_SESSION_SERVICE =>
      _id_MEDIA_SESSION_SERVICE.get(_class, const jni.JStringType());

  static final _id_MIDI_SERVICE = _class.staticFieldId(
    r"MIDI_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String MIDI_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get MIDI_SERVICE =>
      _id_MIDI_SERVICE.get(_class, const jni.JStringType());

  /// from: static public final int MODE_APPEND
  static const MODE_APPEND = 32768;

  /// from: static public final int MODE_ENABLE_WRITE_AHEAD_LOGGING
  static const MODE_ENABLE_WRITE_AHEAD_LOGGING = 8;

  /// from: static public final int MODE_MULTI_PROCESS
  static const MODE_MULTI_PROCESS = 4;

  /// from: static public final int MODE_NO_LOCALIZED_COLLATORS
  static const MODE_NO_LOCALIZED_COLLATORS = 16;

  /// from: static public final int MODE_PRIVATE
  static const MODE_PRIVATE = 0;

  /// from: static public final int MODE_WORLD_READABLE
  static const MODE_WORLD_READABLE = 1;

  /// from: static public final int MODE_WORLD_WRITEABLE
  static const MODE_WORLD_WRITEABLE = 2;
  static final _id_NETWORK_STATS_SERVICE = _class.staticFieldId(
    r"NETWORK_STATS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String NETWORK_STATS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get NETWORK_STATS_SERVICE =>
      _id_NETWORK_STATS_SERVICE.get(_class, const jni.JStringType());

  static final _id_NFC_SERVICE = _class.staticFieldId(
    r"NFC_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String NFC_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get NFC_SERVICE =>
      _id_NFC_SERVICE.get(_class, const jni.JStringType());

  static final _id_NOTIFICATION_SERVICE = _class.staticFieldId(
    r"NOTIFICATION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String NOTIFICATION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get NOTIFICATION_SERVICE =>
      _id_NOTIFICATION_SERVICE.get(_class, const jni.JStringType());

  static final _id_NSD_SERVICE = _class.staticFieldId(
    r"NSD_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String NSD_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get NSD_SERVICE =>
      _id_NSD_SERVICE.get(_class, const jni.JStringType());

  static final _id_OVERLAY_SERVICE = _class.staticFieldId(
    r"OVERLAY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String OVERLAY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get OVERLAY_SERVICE =>
      _id_OVERLAY_SERVICE.get(_class, const jni.JStringType());

  static final _id_PEOPLE_SERVICE = _class.staticFieldId(
    r"PEOPLE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String PEOPLE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get PEOPLE_SERVICE =>
      _id_PEOPLE_SERVICE.get(_class, const jni.JStringType());

  static final _id_PERFORMANCE_HINT_SERVICE = _class.staticFieldId(
    r"PERFORMANCE_HINT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String PERFORMANCE_HINT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get PERFORMANCE_HINT_SERVICE =>
      _id_PERFORMANCE_HINT_SERVICE.get(_class, const jni.JStringType());

  static final _id_POWER_SERVICE = _class.staticFieldId(
    r"POWER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String POWER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get POWER_SERVICE =>
      _id_POWER_SERVICE.get(_class, const jni.JStringType());

  static final _id_PRINT_SERVICE = _class.staticFieldId(
    r"PRINT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String PRINT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get PRINT_SERVICE =>
      _id_PRINT_SERVICE.get(_class, const jni.JStringType());

  /// from: static public final int RECEIVER_EXPORTED
  static const RECEIVER_EXPORTED = 2;

  /// from: static public final int RECEIVER_NOT_EXPORTED
  static const RECEIVER_NOT_EXPORTED = 4;

  /// from: static public final int RECEIVER_VISIBLE_TO_INSTANT_APPS
  static const RECEIVER_VISIBLE_TO_INSTANT_APPS = 1;
  static final _id_RESTRICTIONS_SERVICE = _class.staticFieldId(
    r"RESTRICTIONS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String RESTRICTIONS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get RESTRICTIONS_SERVICE =>
      _id_RESTRICTIONS_SERVICE.get(_class, const jni.JStringType());

  static final _id_ROLE_SERVICE = _class.staticFieldId(
    r"ROLE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String ROLE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ROLE_SERVICE =>
      _id_ROLE_SERVICE.get(_class, const jni.JStringType());

  static final _id_SEARCH_SERVICE = _class.staticFieldId(
    r"SEARCH_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String SEARCH_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get SEARCH_SERVICE =>
      _id_SEARCH_SERVICE.get(_class, const jni.JStringType());

  static final _id_SENSOR_SERVICE = _class.staticFieldId(
    r"SENSOR_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String SENSOR_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get SENSOR_SERVICE =>
      _id_SENSOR_SERVICE.get(_class, const jni.JStringType());

  static final _id_SHORTCUT_SERVICE = _class.staticFieldId(
    r"SHORTCUT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String SHORTCUT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get SHORTCUT_SERVICE =>
      _id_SHORTCUT_SERVICE.get(_class, const jni.JStringType());

  static final _id_STATUS_BAR_SERVICE = _class.staticFieldId(
    r"STATUS_BAR_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String STATUS_BAR_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get STATUS_BAR_SERVICE =>
      _id_STATUS_BAR_SERVICE.get(_class, const jni.JStringType());

  static final _id_STORAGE_SERVICE = _class.staticFieldId(
    r"STORAGE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String STORAGE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get STORAGE_SERVICE =>
      _id_STORAGE_SERVICE.get(_class, const jni.JStringType());

  static final _id_STORAGE_STATS_SERVICE = _class.staticFieldId(
    r"STORAGE_STATS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String STORAGE_STATS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get STORAGE_STATS_SERVICE =>
      _id_STORAGE_STATS_SERVICE.get(_class, const jni.JStringType());

  static final _id_SYSTEM_HEALTH_SERVICE = _class.staticFieldId(
    r"SYSTEM_HEALTH_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String SYSTEM_HEALTH_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get SYSTEM_HEALTH_SERVICE =>
      _id_SYSTEM_HEALTH_SERVICE.get(_class, const jni.JStringType());

  static final _id_TELECOM_SERVICE = _class.staticFieldId(
    r"TELECOM_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TELECOM_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TELECOM_SERVICE =>
      _id_TELECOM_SERVICE.get(_class, const jni.JStringType());

  static final _id_TELEPHONY_IMS_SERVICE = _class.staticFieldId(
    r"TELEPHONY_IMS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TELEPHONY_IMS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TELEPHONY_IMS_SERVICE =>
      _id_TELEPHONY_IMS_SERVICE.get(_class, const jni.JStringType());

  static final _id_TELEPHONY_SERVICE = _class.staticFieldId(
    r"TELEPHONY_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TELEPHONY_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TELEPHONY_SERVICE =>
      _id_TELEPHONY_SERVICE.get(_class, const jni.JStringType());

  static final _id_TELEPHONY_SUBSCRIPTION_SERVICE = _class.staticFieldId(
    r"TELEPHONY_SUBSCRIPTION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TELEPHONY_SUBSCRIPTION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TELEPHONY_SUBSCRIPTION_SERVICE =>
      _id_TELEPHONY_SUBSCRIPTION_SERVICE.get(_class, const jni.JStringType());

  static final _id_TEXT_CLASSIFICATION_SERVICE = _class.staticFieldId(
    r"TEXT_CLASSIFICATION_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TEXT_CLASSIFICATION_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TEXT_CLASSIFICATION_SERVICE =>
      _id_TEXT_CLASSIFICATION_SERVICE.get(_class, const jni.JStringType());

  static final _id_TEXT_SERVICES_MANAGER_SERVICE = _class.staticFieldId(
    r"TEXT_SERVICES_MANAGER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TEXT_SERVICES_MANAGER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TEXT_SERVICES_MANAGER_SERVICE =>
      _id_TEXT_SERVICES_MANAGER_SERVICE.get(_class, const jni.JStringType());

  static final _id_TV_INPUT_SERVICE = _class.staticFieldId(
    r"TV_INPUT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TV_INPUT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TV_INPUT_SERVICE =>
      _id_TV_INPUT_SERVICE.get(_class, const jni.JStringType());

  static final _id_TV_INTERACTIVE_APP_SERVICE = _class.staticFieldId(
    r"TV_INTERACTIVE_APP_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String TV_INTERACTIVE_APP_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get TV_INTERACTIVE_APP_SERVICE =>
      _id_TV_INTERACTIVE_APP_SERVICE.get(_class, const jni.JStringType());

  static final _id_UI_MODE_SERVICE = _class.staticFieldId(
    r"UI_MODE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String UI_MODE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get UI_MODE_SERVICE =>
      _id_UI_MODE_SERVICE.get(_class, const jni.JStringType());

  static final _id_USAGE_STATS_SERVICE = _class.staticFieldId(
    r"USAGE_STATS_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String USAGE_STATS_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get USAGE_STATS_SERVICE =>
      _id_USAGE_STATS_SERVICE.get(_class, const jni.JStringType());

  static final _id_USB_SERVICE = _class.staticFieldId(
    r"USB_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String USB_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get USB_SERVICE =>
      _id_USB_SERVICE.get(_class, const jni.JStringType());

  static final _id_USER_SERVICE = _class.staticFieldId(
    r"USER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String USER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get USER_SERVICE =>
      _id_USER_SERVICE.get(_class, const jni.JStringType());

  static final _id_VIBRATOR_MANAGER_SERVICE = _class.staticFieldId(
    r"VIBRATOR_MANAGER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String VIBRATOR_MANAGER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get VIBRATOR_MANAGER_SERVICE =>
      _id_VIBRATOR_MANAGER_SERVICE.get(_class, const jni.JStringType());

  static final _id_VIBRATOR_SERVICE = _class.staticFieldId(
    r"VIBRATOR_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String VIBRATOR_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get VIBRATOR_SERVICE =>
      _id_VIBRATOR_SERVICE.get(_class, const jni.JStringType());

  static final _id_VIRTUAL_DEVICE_SERVICE = _class.staticFieldId(
    r"VIRTUAL_DEVICE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String VIRTUAL_DEVICE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get VIRTUAL_DEVICE_SERVICE =>
      _id_VIRTUAL_DEVICE_SERVICE.get(_class, const jni.JStringType());

  static final _id_VPN_MANAGEMENT_SERVICE = _class.staticFieldId(
    r"VPN_MANAGEMENT_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String VPN_MANAGEMENT_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get VPN_MANAGEMENT_SERVICE =>
      _id_VPN_MANAGEMENT_SERVICE.get(_class, const jni.JStringType());

  static final _id_WALLPAPER_SERVICE = _class.staticFieldId(
    r"WALLPAPER_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String WALLPAPER_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get WALLPAPER_SERVICE =>
      _id_WALLPAPER_SERVICE.get(_class, const jni.JStringType());

  static final _id_WIFI_AWARE_SERVICE = _class.staticFieldId(
    r"WIFI_AWARE_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String WIFI_AWARE_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get WIFI_AWARE_SERVICE =>
      _id_WIFI_AWARE_SERVICE.get(_class, const jni.JStringType());

  static final _id_WIFI_P2P_SERVICE = _class.staticFieldId(
    r"WIFI_P2P_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String WIFI_P2P_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get WIFI_P2P_SERVICE =>
      _id_WIFI_P2P_SERVICE.get(_class, const jni.JStringType());

  static final _id_WIFI_RTT_RANGING_SERVICE = _class.staticFieldId(
    r"WIFI_RTT_RANGING_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String WIFI_RTT_RANGING_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get WIFI_RTT_RANGING_SERVICE =>
      _id_WIFI_RTT_RANGING_SERVICE.get(_class, const jni.JStringType());

  static final _id_WIFI_SERVICE = _class.staticFieldId(
    r"WIFI_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String WIFI_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get WIFI_SERVICE =>
      _id_WIFI_SERVICE.get(_class, const jni.JStringType());

  static final _id_WINDOW_SERVICE = _class.staticFieldId(
    r"WINDOW_SERVICE",
    r"Ljava/lang/String;",
  );

  /// from: static public final java.lang.String WINDOW_SERVICE
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get WINDOW_SERVICE =>
      _id_WINDOW_SERVICE.get(_class, const jni.JStringType());

  static final _id_new0 = _class.constructorId(
    r"()V",
  );

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory Context() {
    return Context.fromReference(_id_new0(_class, referenceType, []));
  }

  static final _id_getAssets = _class.instanceMethodId(
    r"getAssets",
    r"()Landroid/content/res/AssetManager;",
  );

  /// from: public abstract android.content.res.AssetManager getAssets()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getAssets() {
    return _id_getAssets(this, const jni.JObjectType(), []);
  }

  static final _id_getResources = _class.instanceMethodId(
    r"getResources",
    r"()Landroid/content/res/Resources;",
  );

  /// from: public abstract android.content.res.Resources getResources()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getResources() {
    return _id_getResources(this, const jni.JObjectType(), []);
  }

  static final _id_getPackageManager = _class.instanceMethodId(
    r"getPackageManager",
    r"()Landroid/content/pm/PackageManager;",
  );

  /// from: public abstract android.content.pm.PackageManager getPackageManager()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getPackageManager() {
    return _id_getPackageManager(this, const jni.JObjectType(), []);
  }

  static final _id_getContentResolver = _class.instanceMethodId(
    r"getContentResolver",
    r"()Landroid/content/ContentResolver;",
  );

  /// from: public abstract android.content.ContentResolver getContentResolver()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getContentResolver() {
    return _id_getContentResolver(this, const jni.JObjectType(), []);
  }

  static final _id_getMainLooper = _class.instanceMethodId(
    r"getMainLooper",
    r"()Landroid/os/Looper;",
  );

  /// from: public abstract android.os.Looper getMainLooper()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getMainLooper() {
    return _id_getMainLooper(this, const jni.JObjectType(), []);
  }

  static final _id_getMainExecutor = _class.instanceMethodId(
    r"getMainExecutor",
    r"()Ljava/util/concurrent/Executor;",
  );

  /// from: public java.util.concurrent.Executor getMainExecutor()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getMainExecutor() {
    return _id_getMainExecutor(this, const jni.JObjectType(), []);
  }

  static final _id_getApplicationContext = _class.instanceMethodId(
    r"getApplicationContext",
    r"()Landroid/content/Context;",
  );

  /// from: public abstract android.content.Context getApplicationContext()
  /// The returned object must be released after use, by calling the [release] method.
  Context getApplicationContext() {
    return _id_getApplicationContext(this, const $ContextType(), []);
  }

  static final _id_registerComponentCallbacks = _class.instanceMethodId(
    r"registerComponentCallbacks",
    r"(Landroid/content/ComponentCallbacks;)V",
  );

  /// from: public void registerComponentCallbacks(android.content.ComponentCallbacks componentCallbacks)
  void registerComponentCallbacks(
    jni.JObject componentCallbacks,
  ) {
    _id_registerComponentCallbacks(
        this, const jni.jvoidType(), [componentCallbacks.reference.pointer]);
  }

  static final _id_unregisterComponentCallbacks = _class.instanceMethodId(
    r"unregisterComponentCallbacks",
    r"(Landroid/content/ComponentCallbacks;)V",
  );

  /// from: public void unregisterComponentCallbacks(android.content.ComponentCallbacks componentCallbacks)
  void unregisterComponentCallbacks(
    jni.JObject componentCallbacks,
  ) {
    _id_unregisterComponentCallbacks(
        this, const jni.jvoidType(), [componentCallbacks.reference.pointer]);
  }

  static final _id_getText = _class.instanceMethodId(
    r"getText",
    r"(I)Ljava/lang/CharSequence;",
  );

  /// from: public final java.lang.CharSequence getText(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getText(
    int i,
  ) {
    return _id_getText(this, const jni.JObjectType(), [jni.JValueInt(i)]);
  }

  static final _id_getString = _class.instanceMethodId(
    r"getString",
    r"(I)Ljava/lang/String;",
  );

  /// from: public final java.lang.String getString(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getString(
    int i,
  ) {
    return _id_getString(this, const jni.JStringType(), [jni.JValueInt(i)]);
  }

  static final _id_getString1 = _class.instanceMethodId(
    r"getString",
    r"(I[Ljava/lang/Object;)Ljava/lang/String;",
  );

  /// from: public final java.lang.String getString(int i, java.lang.Object[] objects)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getString1(
    int i,
    jni.JArray<jni.JObject> objects,
  ) {
    return _id_getString1(this, const jni.JStringType(),
        [jni.JValueInt(i), objects.reference.pointer]);
  }

  static final _id_getColor = _class.instanceMethodId(
    r"getColor",
    r"(I)I",
  );

  /// from: public final int getColor(int i)
  int getColor(
    int i,
  ) {
    return _id_getColor(this, const jni.jintType(), [jni.JValueInt(i)]);
  }

  static final _id_getDrawable = _class.instanceMethodId(
    r"getDrawable",
    r"(I)Landroid/graphics/drawable/Drawable;",
  );

  /// from: public final android.graphics.drawable.Drawable getDrawable(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDrawable(
    int i,
  ) {
    return _id_getDrawable(this, const jni.JObjectType(), [jni.JValueInt(i)]);
  }

  static final _id_getColorStateList = _class.instanceMethodId(
    r"getColorStateList",
    r"(I)Landroid/content/res/ColorStateList;",
  );

  /// from: public final android.content.res.ColorStateList getColorStateList(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getColorStateList(
    int i,
  ) {
    return _id_getColorStateList(
        this, const jni.JObjectType(), [jni.JValueInt(i)]);
  }

  static final _id_setTheme = _class.instanceMethodId(
    r"setTheme",
    r"(I)V",
  );

  /// from: public abstract void setTheme(int i)
  void setTheme(
    int i,
  ) {
    _id_setTheme(this, const jni.jvoidType(), [jni.JValueInt(i)]);
  }

  static final _id_getTheme = _class.instanceMethodId(
    r"getTheme",
    r"()Landroid/content/res/Resources$Theme;",
  );

  /// from: public abstract android.content.res.Resources$Theme getTheme()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getTheme() {
    return _id_getTheme(this, const jni.JObjectType(), []);
  }

  static final _id_obtainStyledAttributes = _class.instanceMethodId(
    r"obtainStyledAttributes",
    r"([I)Landroid/content/res/TypedArray;",
  );

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes(
    jni.JArray<jni.jint> is0,
  ) {
    return _id_obtainStyledAttributes(
        this, const jni.JObjectType(), [is0.reference.pointer]);
  }

  static final _id_obtainStyledAttributes1 = _class.instanceMethodId(
    r"obtainStyledAttributes",
    r"(I[I)Landroid/content/res/TypedArray;",
  );

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(int i, int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes1(
    int i,
    jni.JArray<jni.jint> is0,
  ) {
    return _id_obtainStyledAttributes1(this, const jni.JObjectType(),
        [jni.JValueInt(i), is0.reference.pointer]);
  }

  static final _id_obtainStyledAttributes2 = _class.instanceMethodId(
    r"obtainStyledAttributes",
    r"(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;",
  );

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet attributeSet, int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes2(
    jni.JObject attributeSet,
    jni.JArray<jni.jint> is0,
  ) {
    return _id_obtainStyledAttributes2(this, const jni.JObjectType(),
        [attributeSet.reference.pointer, is0.reference.pointer]);
  }

  static final _id_obtainStyledAttributes3 = _class.instanceMethodId(
    r"obtainStyledAttributes",
    r"(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;",
  );

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet attributeSet, int[] is, int i, int i1)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes3(
    jni.JObject attributeSet,
    jni.JArray<jni.jint> is0,
    int i,
    int i1,
  ) {
    return _id_obtainStyledAttributes3(this, const jni.JObjectType(), [
      attributeSet.reference.pointer,
      is0.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1)
    ]);
  }

  static final _id_getClassLoader = _class.instanceMethodId(
    r"getClassLoader",
    r"()Ljava/lang/ClassLoader;",
  );

  /// from: public abstract java.lang.ClassLoader getClassLoader()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getClassLoader() {
    return _id_getClassLoader(this, const jni.JObjectType(), []);
  }

  static final _id_getPackageName = _class.instanceMethodId(
    r"getPackageName",
    r"()Ljava/lang/String;",
  );

  /// from: public abstract java.lang.String getPackageName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackageName() {
    return _id_getPackageName(this, const jni.JStringType(), []);
  }

  static final _id_getOpPackageName = _class.instanceMethodId(
    r"getOpPackageName",
    r"()Ljava/lang/String;",
  );

  /// from: public java.lang.String getOpPackageName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getOpPackageName() {
    return _id_getOpPackageName(this, const jni.JStringType(), []);
  }

  static final _id_getAttributionTag = _class.instanceMethodId(
    r"getAttributionTag",
    r"()Ljava/lang/String;",
  );

  /// from: public java.lang.String getAttributionTag()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAttributionTag() {
    return _id_getAttributionTag(this, const jni.JStringType(), []);
  }

  static final _id_getAttributionSource = _class.instanceMethodId(
    r"getAttributionSource",
    r"()Landroid/content/AttributionSource;",
  );

  /// from: public android.content.AttributionSource getAttributionSource()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getAttributionSource() {
    return _id_getAttributionSource(this, const jni.JObjectType(), []);
  }

  static final _id_getParams = _class.instanceMethodId(
    r"getParams",
    r"()Landroid/content/ContextParams;",
  );

  /// from: public android.content.ContextParams getParams()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getParams() {
    return _id_getParams(this, const jni.JObjectType(), []);
  }

  static final _id_getApplicationInfo = _class.instanceMethodId(
    r"getApplicationInfo",
    r"()Landroid/content/pm/ApplicationInfo;",
  );

  /// from: public abstract android.content.pm.ApplicationInfo getApplicationInfo()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getApplicationInfo() {
    return _id_getApplicationInfo(this, const jni.JObjectType(), []);
  }

  static final _id_getPackageResourcePath = _class.instanceMethodId(
    r"getPackageResourcePath",
    r"()Ljava/lang/String;",
  );

  /// from: public abstract java.lang.String getPackageResourcePath()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackageResourcePath() {
    return _id_getPackageResourcePath(this, const jni.JStringType(), []);
  }

  static final _id_getPackageCodePath = _class.instanceMethodId(
    r"getPackageCodePath",
    r"()Ljava/lang/String;",
  );

  /// from: public abstract java.lang.String getPackageCodePath()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackageCodePath() {
    return _id_getPackageCodePath(this, const jni.JStringType(), []);
  }

  static final _id_getSharedPreferences = _class.instanceMethodId(
    r"getSharedPreferences",
    r"(Ljava/lang/String;I)Landroid/content/SharedPreferences;",
  );

  /// from: public abstract android.content.SharedPreferences getSharedPreferences(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSharedPreferences(
    jni.JString string,
    int i,
  ) {
    return _id_getSharedPreferences(this, const jni.JObjectType(),
        [string.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_moveSharedPreferencesFrom = _class.instanceMethodId(
    r"moveSharedPreferencesFrom",
    r"(Landroid/content/Context;Ljava/lang/String;)Z",
  );

  /// from: public abstract boolean moveSharedPreferencesFrom(android.content.Context context, java.lang.String string)
  bool moveSharedPreferencesFrom(
    Context context,
    jni.JString string,
  ) {
    return _id_moveSharedPreferencesFrom(this, const jni.jbooleanType(),
        [context.reference.pointer, string.reference.pointer]);
  }

  static final _id_deleteSharedPreferences = _class.instanceMethodId(
    r"deleteSharedPreferences",
    r"(Ljava/lang/String;)Z",
  );

  /// from: public abstract boolean deleteSharedPreferences(java.lang.String string)
  bool deleteSharedPreferences(
    jni.JString string,
  ) {
    return _id_deleteSharedPreferences(
        this, const jni.jbooleanType(), [string.reference.pointer]);
  }

  static final _id_openFileInput = _class.instanceMethodId(
    r"openFileInput",
    r"(Ljava/lang/String;)Ljava/io/FileInputStream;",
  );

  /// from: public abstract java.io.FileInputStream openFileInput(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openFileInput(
    jni.JString string,
  ) {
    return _id_openFileInput(
        this, const jni.JObjectType(), [string.reference.pointer]);
  }

  static final _id_openFileOutput = _class.instanceMethodId(
    r"openFileOutput",
    r"(Ljava/lang/String;I)Ljava/io/FileOutputStream;",
  );

  /// from: public abstract java.io.FileOutputStream openFileOutput(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openFileOutput(
    jni.JString string,
    int i,
  ) {
    return _id_openFileOutput(this, const jni.JObjectType(),
        [string.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_deleteFile = _class.instanceMethodId(
    r"deleteFile",
    r"(Ljava/lang/String;)Z",
  );

  /// from: public abstract boolean deleteFile(java.lang.String string)
  bool deleteFile(
    jni.JString string,
  ) {
    return _id_deleteFile(
        this, const jni.jbooleanType(), [string.reference.pointer]);
  }

  static final _id_getFileStreamPath = _class.instanceMethodId(
    r"getFileStreamPath",
    r"(Ljava/lang/String;)Ljava/io/File;",
  );

  /// from: public abstract java.io.File getFileStreamPath(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getFileStreamPath(
    jni.JString string,
  ) {
    return _id_getFileStreamPath(
        this, const jni.JObjectType(), [string.reference.pointer]);
  }

  static final _id_getDataDir = _class.instanceMethodId(
    r"getDataDir",
    r"()Ljava/io/File;",
  );

  /// from: public abstract java.io.File getDataDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDataDir() {
    return _id_getDataDir(this, const jni.JObjectType(), []);
  }

  static final _id_getFilesDir = _class.instanceMethodId(
    r"getFilesDir",
    r"()Ljava/io/File;",
  );

  /// from: public abstract java.io.File getFilesDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getFilesDir() {
    return _id_getFilesDir(this, const jni.JObjectType(), []);
  }

  static final _id_getNoBackupFilesDir = _class.instanceMethodId(
    r"getNoBackupFilesDir",
    r"()Ljava/io/File;",
  );

  /// from: public abstract java.io.File getNoBackupFilesDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getNoBackupFilesDir() {
    return _id_getNoBackupFilesDir(this, const jni.JObjectType(), []);
  }

  static final _id_getExternalFilesDir = _class.instanceMethodId(
    r"getExternalFilesDir",
    r"(Ljava/lang/String;)Ljava/io/File;",
  );

  /// from: public abstract java.io.File getExternalFilesDir(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getExternalFilesDir(
    jni.JString string,
  ) {
    return _id_getExternalFilesDir(
        this, const jni.JObjectType(), [string.reference.pointer]);
  }

  static final _id_getExternalFilesDirs = _class.instanceMethodId(
    r"getExternalFilesDirs",
    r"(Ljava/lang/String;)[Ljava/io/File;",
  );

  /// from: public abstract java.io.File[] getExternalFilesDirs(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getExternalFilesDirs(
    jni.JString string,
  ) {
    return _id_getExternalFilesDirs(this,
        const jni.JArrayType(jni.JObjectType()), [string.reference.pointer]);
  }

  static final _id_getObbDir = _class.instanceMethodId(
    r"getObbDir",
    r"()Ljava/io/File;",
  );

  /// from: public abstract java.io.File getObbDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getObbDir() {
    return _id_getObbDir(this, const jni.JObjectType(), []);
  }

  static final _id_getObbDirs = _class.instanceMethodId(
    r"getObbDirs",
    r"()[Ljava/io/File;",
  );

  /// from: public abstract java.io.File[] getObbDirs()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getObbDirs() {
    return _id_getObbDirs(this, const jni.JArrayType(jni.JObjectType()), []);
  }

  static final _id_getCacheDir = _class.instanceMethodId(
    r"getCacheDir",
    r"()Ljava/io/File;",
  );

  /// from: public abstract java.io.File getCacheDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCacheDir() {
    return _id_getCacheDir(this, const jni.JObjectType(), []);
  }

  static final _id_getCodeCacheDir = _class.instanceMethodId(
    r"getCodeCacheDir",
    r"()Ljava/io/File;",
  );

  /// from: public abstract java.io.File getCodeCacheDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCodeCacheDir() {
    return _id_getCodeCacheDir(this, const jni.JObjectType(), []);
  }

  static final _id_getExternalCacheDir = _class.instanceMethodId(
    r"getExternalCacheDir",
    r"()Ljava/io/File;",
  );

  /// from: public abstract java.io.File getExternalCacheDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getExternalCacheDir() {
    return _id_getExternalCacheDir(this, const jni.JObjectType(), []);
  }

  static final _id_getExternalCacheDirs = _class.instanceMethodId(
    r"getExternalCacheDirs",
    r"()[Ljava/io/File;",
  );

  /// from: public abstract java.io.File[] getExternalCacheDirs()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getExternalCacheDirs() {
    return _id_getExternalCacheDirs(
        this, const jni.JArrayType(jni.JObjectType()), []);
  }

  static final _id_getExternalMediaDirs = _class.instanceMethodId(
    r"getExternalMediaDirs",
    r"()[Ljava/io/File;",
  );

  /// from: public abstract java.io.File[] getExternalMediaDirs()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getExternalMediaDirs() {
    return _id_getExternalMediaDirs(
        this, const jni.JArrayType(jni.JObjectType()), []);
  }

  static final _id_fileList = _class.instanceMethodId(
    r"fileList",
    r"()[Ljava/lang/String;",
  );

  /// from: public abstract java.lang.String[] fileList()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JString> fileList() {
    return _id_fileList(this, const jni.JArrayType(jni.JStringType()), []);
  }

  static final _id_getDir = _class.instanceMethodId(
    r"getDir",
    r"(Ljava/lang/String;I)Ljava/io/File;",
  );

  /// from: public abstract java.io.File getDir(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDir(
    jni.JString string,
    int i,
  ) {
    return _id_getDir(this, const jni.JObjectType(),
        [string.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_openOrCreateDatabase = _class.instanceMethodId(
    r"openOrCreateDatabase",
    r"(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;",
  );

  /// from: public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String string, int i, android.database.sqlite.SQLiteDatabase$CursorFactory cursorFactory)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openOrCreateDatabase(
    jni.JString string,
    int i,
    jni.JObject cursorFactory,
  ) {
    return _id_openOrCreateDatabase(this, const jni.JObjectType(), [
      string.reference.pointer,
      jni.JValueInt(i),
      cursorFactory.reference.pointer
    ]);
  }

  static final _id_openOrCreateDatabase1 = _class.instanceMethodId(
    r"openOrCreateDatabase",
    r"(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;",
  );

  /// from: public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String string, int i, android.database.sqlite.SQLiteDatabase$CursorFactory cursorFactory, android.database.DatabaseErrorHandler databaseErrorHandler)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openOrCreateDatabase1(
    jni.JString string,
    int i,
    jni.JObject cursorFactory,
    jni.JObject databaseErrorHandler,
  ) {
    return _id_openOrCreateDatabase1(this, const jni.JObjectType(), [
      string.reference.pointer,
      jni.JValueInt(i),
      cursorFactory.reference.pointer,
      databaseErrorHandler.reference.pointer
    ]);
  }

  static final _id_moveDatabaseFrom = _class.instanceMethodId(
    r"moveDatabaseFrom",
    r"(Landroid/content/Context;Ljava/lang/String;)Z",
  );

  /// from: public abstract boolean moveDatabaseFrom(android.content.Context context, java.lang.String string)
  bool moveDatabaseFrom(
    Context context,
    jni.JString string,
  ) {
    return _id_moveDatabaseFrom(this, const jni.jbooleanType(),
        [context.reference.pointer, string.reference.pointer]);
  }

  static final _id_deleteDatabase = _class.instanceMethodId(
    r"deleteDatabase",
    r"(Ljava/lang/String;)Z",
  );

  /// from: public abstract boolean deleteDatabase(java.lang.String string)
  bool deleteDatabase(
    jni.JString string,
  ) {
    return _id_deleteDatabase(
        this, const jni.jbooleanType(), [string.reference.pointer]);
  }

  static final _id_getDatabasePath = _class.instanceMethodId(
    r"getDatabasePath",
    r"(Ljava/lang/String;)Ljava/io/File;",
  );

  /// from: public abstract java.io.File getDatabasePath(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDatabasePath(
    jni.JString string,
  ) {
    return _id_getDatabasePath(
        this, const jni.JObjectType(), [string.reference.pointer]);
  }

  static final _id_databaseList = _class.instanceMethodId(
    r"databaseList",
    r"()[Ljava/lang/String;",
  );

  /// from: public abstract java.lang.String[] databaseList()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JString> databaseList() {
    return _id_databaseList(this, const jni.JArrayType(jni.JStringType()), []);
  }

  static final _id_getWallpaper = _class.instanceMethodId(
    r"getWallpaper",
    r"()Landroid/graphics/drawable/Drawable;",
  );

  /// from: public abstract android.graphics.drawable.Drawable getWallpaper()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getWallpaper() {
    return _id_getWallpaper(this, const jni.JObjectType(), []);
  }

  static final _id_peekWallpaper = _class.instanceMethodId(
    r"peekWallpaper",
    r"()Landroid/graphics/drawable/Drawable;",
  );

  /// from: public abstract android.graphics.drawable.Drawable peekWallpaper()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject peekWallpaper() {
    return _id_peekWallpaper(this, const jni.JObjectType(), []);
  }

  static final _id_getWallpaperDesiredMinimumWidth = _class.instanceMethodId(
    r"getWallpaperDesiredMinimumWidth",
    r"()I",
  );

  /// from: public abstract int getWallpaperDesiredMinimumWidth()
  int getWallpaperDesiredMinimumWidth() {
    return _id_getWallpaperDesiredMinimumWidth(this, const jni.jintType(), []);
  }

  static final _id_getWallpaperDesiredMinimumHeight = _class.instanceMethodId(
    r"getWallpaperDesiredMinimumHeight",
    r"()I",
  );

  /// from: public abstract int getWallpaperDesiredMinimumHeight()
  int getWallpaperDesiredMinimumHeight() {
    return _id_getWallpaperDesiredMinimumHeight(this, const jni.jintType(), []);
  }

  static final _id_setWallpaper = _class.instanceMethodId(
    r"setWallpaper",
    r"(Landroid/graphics/Bitmap;)V",
  );

  /// from: public abstract void setWallpaper(android.graphics.Bitmap bitmap)
  void setWallpaper(
    jni.JObject bitmap,
  ) {
    _id_setWallpaper(this, const jni.jvoidType(), [bitmap.reference.pointer]);
  }

  static final _id_setWallpaper1 = _class.instanceMethodId(
    r"setWallpaper",
    r"(Ljava/io/InputStream;)V",
  );

  /// from: public abstract void setWallpaper(java.io.InputStream inputStream)
  void setWallpaper1(
    jni.JObject inputStream,
  ) {
    _id_setWallpaper1(
        this, const jni.jvoidType(), [inputStream.reference.pointer]);
  }

  static final _id_clearWallpaper = _class.instanceMethodId(
    r"clearWallpaper",
    r"()V",
  );

  /// from: public abstract void clearWallpaper()
  void clearWallpaper() {
    _id_clearWallpaper(this, const jni.jvoidType(), []);
  }

  static final _id_startActivity = _class.instanceMethodId(
    r"startActivity",
    r"(Landroid/content/Intent;)V",
  );

  /// from: public abstract void startActivity(android.content.Intent intent)
  void startActivity(
    jni.JObject intent,
  ) {
    _id_startActivity(this, const jni.jvoidType(), [intent.reference.pointer]);
  }

  static final _id_startActivity1 = _class.instanceMethodId(
    r"startActivity",
    r"(Landroid/content/Intent;Landroid/os/Bundle;)V",
  );

  /// from: public abstract void startActivity(android.content.Intent intent, android.os.Bundle bundle)
  void startActivity1(
    jni.JObject intent,
    jni.JObject bundle,
  ) {
    _id_startActivity1(this, const jni.jvoidType(),
        [intent.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_startActivities = _class.instanceMethodId(
    r"startActivities",
    r"([Landroid/content/Intent;)V",
  );

  /// from: public abstract void startActivities(android.content.Intent[] intents)
  void startActivities(
    jni.JArray<jni.JObject> intents,
  ) {
    _id_startActivities(
        this, const jni.jvoidType(), [intents.reference.pointer]);
  }

  static final _id_startActivities1 = _class.instanceMethodId(
    r"startActivities",
    r"([Landroid/content/Intent;Landroid/os/Bundle;)V",
  );

  /// from: public abstract void startActivities(android.content.Intent[] intents, android.os.Bundle bundle)
  void startActivities1(
    jni.JArray<jni.JObject> intents,
    jni.JObject bundle,
  ) {
    _id_startActivities1(this, const jni.jvoidType(),
        [intents.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_startIntentSender = _class.instanceMethodId(
    r"startIntentSender",
    r"(Landroid/content/IntentSender;Landroid/content/Intent;III)V",
  );

  /// from: public abstract void startIntentSender(android.content.IntentSender intentSender, android.content.Intent intent, int i, int i1, int i2)
  void startIntentSender(
    jni.JObject intentSender,
    jni.JObject intent,
    int i,
    int i1,
    int i2,
  ) {
    _id_startIntentSender(this, const jni.jvoidType(), [
      intentSender.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2)
    ]);
  }

  static final _id_startIntentSender1 = _class.instanceMethodId(
    r"startIntentSender",
    r"(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V",
  );

  /// from: public abstract void startIntentSender(android.content.IntentSender intentSender, android.content.Intent intent, int i, int i1, int i2, android.os.Bundle bundle)
  void startIntentSender1(
    jni.JObject intentSender,
    jni.JObject intent,
    int i,
    int i1,
    int i2,
    jni.JObject bundle,
  ) {
    _id_startIntentSender1(this, const jni.jvoidType(), [
      intentSender.reference.pointer,
      intent.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      bundle.reference.pointer
    ]);
  }

  static final _id_sendBroadcast = _class.instanceMethodId(
    r"sendBroadcast",
    r"(Landroid/content/Intent;)V",
  );

  /// from: public abstract void sendBroadcast(android.content.Intent intent)
  void sendBroadcast(
    jni.JObject intent,
  ) {
    _id_sendBroadcast(this, const jni.jvoidType(), [intent.reference.pointer]);
  }

  static final _id_sendBroadcast1 = _class.instanceMethodId(
    r"sendBroadcast",
    r"(Landroid/content/Intent;Ljava/lang/String;)V",
  );

  /// from: public abstract void sendBroadcast(android.content.Intent intent, java.lang.String string)
  void sendBroadcast1(
    jni.JObject intent,
    jni.JString string,
  ) {
    _id_sendBroadcast1(this, const jni.jvoidType(),
        [intent.reference.pointer, string.reference.pointer]);
  }

  static final _id_sendBroadcastWithMultiplePermissions =
      _class.instanceMethodId(
    r"sendBroadcastWithMultiplePermissions",
    r"(Landroid/content/Intent;[Ljava/lang/String;)V",
  );

  /// from: public void sendBroadcastWithMultiplePermissions(android.content.Intent intent, java.lang.String[] strings)
  void sendBroadcastWithMultiplePermissions(
    jni.JObject intent,
    jni.JArray<jni.JString> strings,
  ) {
    _id_sendBroadcastWithMultiplePermissions(this, const jni.jvoidType(),
        [intent.reference.pointer, strings.reference.pointer]);
  }

  static final _id_sendBroadcast2 = _class.instanceMethodId(
    r"sendBroadcast",
    r"(Landroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public void sendBroadcast(android.content.Intent intent, java.lang.String string, android.os.Bundle bundle)
  void sendBroadcast2(
    jni.JObject intent,
    jni.JString string,
    jni.JObject bundle,
  ) {
    _id_sendBroadcast2(this, const jni.jvoidType(), [
      intent.reference.pointer,
      string.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_sendOrderedBroadcast = _class.instanceMethodId(
    r"sendOrderedBroadcast",
    r"(Landroid/content/Intent;Ljava/lang/String;)V",
  );

  /// from: public abstract void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string)
  void sendOrderedBroadcast(
    jni.JObject intent,
    jni.JString string,
  ) {
    _id_sendOrderedBroadcast(this, const jni.jvoidType(),
        [intent.reference.pointer, string.reference.pointer]);
  }

  static final _id_sendOrderedBroadcast1 = _class.instanceMethodId(
    r"sendOrderedBroadcast",
    r"(Landroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, android.os.Bundle bundle)
  void sendOrderedBroadcast1(
    jni.JObject intent,
    jni.JString string,
    jni.JObject bundle,
  ) {
    _id_sendOrderedBroadcast1(this, const jni.jvoidType(), [
      intent.reference.pointer,
      string.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_sendOrderedBroadcast2 = _class.instanceMethodId(
    r"sendOrderedBroadcast",
    r"(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public abstract void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string1, android.os.Bundle bundle)
  void sendOrderedBroadcast2(
    jni.JObject intent,
    jni.JString string,
    jni.JObject broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string1,
    jni.JObject bundle,
  ) {
    _id_sendOrderedBroadcast2(this, const jni.jvoidType(), [
      intent.reference.pointer,
      string.reference.pointer,
      broadcastReceiver.reference.pointer,
      handler.reference.pointer,
      jni.JValueInt(i),
      string1.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_sendOrderedBroadcast3 = _class.instanceMethodId(
    r"sendOrderedBroadcast",
    r"(Landroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, android.os.Bundle bundle, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string1, android.os.Bundle bundle1)
  void sendOrderedBroadcast3(
    jni.JObject intent,
    jni.JString string,
    jni.JObject bundle,
    jni.JObject broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string1,
    jni.JObject bundle1,
  ) {
    _id_sendOrderedBroadcast3(this, const jni.jvoidType(), [
      intent.reference.pointer,
      string.reference.pointer,
      bundle.reference.pointer,
      broadcastReceiver.reference.pointer,
      handler.reference.pointer,
      jni.JValueInt(i),
      string1.reference.pointer,
      bundle1.reference.pointer
    ]);
  }

  static final _id_sendBroadcastAsUser = _class.instanceMethodId(
    r"sendBroadcastAsUser",
    r"(Landroid/content/Intent;Landroid/os/UserHandle;)V",
  );

  /// from: public abstract void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle)
  void sendBroadcastAsUser(
    jni.JObject intent,
    jni.JObject userHandle,
  ) {
    _id_sendBroadcastAsUser(this, const jni.jvoidType(),
        [intent.reference.pointer, userHandle.reference.pointer]);
  }

  static final _id_sendBroadcastAsUser1 = _class.instanceMethodId(
    r"sendBroadcastAsUser",
    r"(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V",
  );

  /// from: public abstract void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle, java.lang.String string)
  void sendBroadcastAsUser1(
    jni.JObject intent,
    jni.JObject userHandle,
    jni.JString string,
  ) {
    _id_sendBroadcastAsUser1(this, const jni.jvoidType(), [
      intent.reference.pointer,
      userHandle.reference.pointer,
      string.reference.pointer
    ]);
  }

  static final _id_sendOrderedBroadcastAsUser = _class.instanceMethodId(
    r"sendOrderedBroadcastAsUser",
    r"(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public abstract void sendOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle, java.lang.String string, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string1, android.os.Bundle bundle)
  void sendOrderedBroadcastAsUser(
    jni.JObject intent,
    jni.JObject userHandle,
    jni.JString string,
    jni.JObject broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string1,
    jni.JObject bundle,
  ) {
    _id_sendOrderedBroadcastAsUser(this, const jni.jvoidType(), [
      intent.reference.pointer,
      userHandle.reference.pointer,
      string.reference.pointer,
      broadcastReceiver.reference.pointer,
      handler.reference.pointer,
      jni.JValueInt(i),
      string1.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_sendOrderedBroadcast4 = _class.instanceMethodId(
    r"sendOrderedBroadcast",
    r"(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, java.lang.String string1, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string2, android.os.Bundle bundle)
  void sendOrderedBroadcast4(
    jni.JObject intent,
    jni.JString string,
    jni.JString string1,
    jni.JObject broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string2,
    jni.JObject bundle,
  ) {
    _id_sendOrderedBroadcast4(this, const jni.jvoidType(), [
      intent.reference.pointer,
      string.reference.pointer,
      string1.reference.pointer,
      broadcastReceiver.reference.pointer,
      handler.reference.pointer,
      jni.JValueInt(i),
      string2.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_sendStickyBroadcast = _class.instanceMethodId(
    r"sendStickyBroadcast",
    r"(Landroid/content/Intent;)V",
  );

  /// from: public abstract void sendStickyBroadcast(android.content.Intent intent)
  void sendStickyBroadcast(
    jni.JObject intent,
  ) {
    _id_sendStickyBroadcast(
        this, const jni.jvoidType(), [intent.reference.pointer]);
  }

  static final _id_sendStickyBroadcast1 = _class.instanceMethodId(
    r"sendStickyBroadcast",
    r"(Landroid/content/Intent;Landroid/os/Bundle;)V",
  );

  /// from: public void sendStickyBroadcast(android.content.Intent intent, android.os.Bundle bundle)
  void sendStickyBroadcast1(
    jni.JObject intent,
    jni.JObject bundle,
  ) {
    _id_sendStickyBroadcast1(this, const jni.jvoidType(),
        [intent.reference.pointer, bundle.reference.pointer]);
  }

  static final _id_sendStickyOrderedBroadcast = _class.instanceMethodId(
    r"sendStickyOrderedBroadcast",
    r"(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public abstract void sendStickyOrderedBroadcast(android.content.Intent intent, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string, android.os.Bundle bundle)
  void sendStickyOrderedBroadcast(
    jni.JObject intent,
    jni.JObject broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string,
    jni.JObject bundle,
  ) {
    _id_sendStickyOrderedBroadcast(this, const jni.jvoidType(), [
      intent.reference.pointer,
      broadcastReceiver.reference.pointer,
      handler.reference.pointer,
      jni.JValueInt(i),
      string.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_removeStickyBroadcast = _class.instanceMethodId(
    r"removeStickyBroadcast",
    r"(Landroid/content/Intent;)V",
  );

  /// from: public abstract void removeStickyBroadcast(android.content.Intent intent)
  void removeStickyBroadcast(
    jni.JObject intent,
  ) {
    _id_removeStickyBroadcast(
        this, const jni.jvoidType(), [intent.reference.pointer]);
  }

  static final _id_sendStickyBroadcastAsUser = _class.instanceMethodId(
    r"sendStickyBroadcastAsUser",
    r"(Landroid/content/Intent;Landroid/os/UserHandle;)V",
  );

  /// from: public abstract void sendStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle)
  void sendStickyBroadcastAsUser(
    jni.JObject intent,
    jni.JObject userHandle,
  ) {
    _id_sendStickyBroadcastAsUser(this, const jni.jvoidType(),
        [intent.reference.pointer, userHandle.reference.pointer]);
  }

  static final _id_sendStickyOrderedBroadcastAsUser = _class.instanceMethodId(
    r"sendStickyOrderedBroadcastAsUser",
    r"(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
  );

  /// from: public abstract void sendStickyOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string, android.os.Bundle bundle)
  void sendStickyOrderedBroadcastAsUser(
    jni.JObject intent,
    jni.JObject userHandle,
    jni.JObject broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string,
    jni.JObject bundle,
  ) {
    _id_sendStickyOrderedBroadcastAsUser(this, const jni.jvoidType(), [
      intent.reference.pointer,
      userHandle.reference.pointer,
      broadcastReceiver.reference.pointer,
      handler.reference.pointer,
      jni.JValueInt(i),
      string.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_removeStickyBroadcastAsUser = _class.instanceMethodId(
    r"removeStickyBroadcastAsUser",
    r"(Landroid/content/Intent;Landroid/os/UserHandle;)V",
  );

  /// from: public abstract void removeStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle)
  void removeStickyBroadcastAsUser(
    jni.JObject intent,
    jni.JObject userHandle,
  ) {
    _id_removeStickyBroadcastAsUser(this, const jni.jvoidType(),
        [intent.reference.pointer, userHandle.reference.pointer]);
  }

  static final _id_registerReceiver = _class.instanceMethodId(
    r"registerReceiver",
    r"(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;",
  );

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject registerReceiver(
    jni.JObject broadcastReceiver,
    jni.JObject intentFilter,
  ) {
    return _id_registerReceiver(this, const jni.JObjectType(),
        [broadcastReceiver.reference.pointer, intentFilter.reference.pointer]);
  }

  static final _id_registerReceiver1 = _class.instanceMethodId(
    r"registerReceiver",
    r"(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;I)Landroid/content/Intent;",
  );

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject registerReceiver1(
    jni.JObject broadcastReceiver,
    jni.JObject intentFilter,
    int i,
  ) {
    return _id_registerReceiver1(this, const jni.JObjectType(), [
      broadcastReceiver.reference.pointer,
      intentFilter.reference.pointer,
      jni.JValueInt(i)
    ]);
  }

  static final _id_registerReceiver2 = _class.instanceMethodId(
    r"registerReceiver",
    r"(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;",
  );

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter, java.lang.String string, android.os.Handler handler)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject registerReceiver2(
    jni.JObject broadcastReceiver,
    jni.JObject intentFilter,
    jni.JString string,
    jni.JObject handler,
  ) {
    return _id_registerReceiver2(this, const jni.JObjectType(), [
      broadcastReceiver.reference.pointer,
      intentFilter.reference.pointer,
      string.reference.pointer,
      handler.reference.pointer
    ]);
  }

  static final _id_registerReceiver3 = _class.instanceMethodId(
    r"registerReceiver",
    r"(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;",
  );

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter, java.lang.String string, android.os.Handler handler, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject registerReceiver3(
    jni.JObject broadcastReceiver,
    jni.JObject intentFilter,
    jni.JString string,
    jni.JObject handler,
    int i,
  ) {
    return _id_registerReceiver3(this, const jni.JObjectType(), [
      broadcastReceiver.reference.pointer,
      intentFilter.reference.pointer,
      string.reference.pointer,
      handler.reference.pointer,
      jni.JValueInt(i)
    ]);
  }

  static final _id_unregisterReceiver = _class.instanceMethodId(
    r"unregisterReceiver",
    r"(Landroid/content/BroadcastReceiver;)V",
  );

  /// from: public abstract void unregisterReceiver(android.content.BroadcastReceiver broadcastReceiver)
  void unregisterReceiver(
    jni.JObject broadcastReceiver,
  ) {
    _id_unregisterReceiver(
        this, const jni.jvoidType(), [broadcastReceiver.reference.pointer]);
  }

  static final _id_startService = _class.instanceMethodId(
    r"startService",
    r"(Landroid/content/Intent;)Landroid/content/ComponentName;",
  );

  /// from: public abstract android.content.ComponentName startService(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject startService(
    jni.JObject intent,
  ) {
    return _id_startService(
        this, const jni.JObjectType(), [intent.reference.pointer]);
  }

  static final _id_startForegroundService = _class.instanceMethodId(
    r"startForegroundService",
    r"(Landroid/content/Intent;)Landroid/content/ComponentName;",
  );

  /// from: public abstract android.content.ComponentName startForegroundService(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject startForegroundService(
    jni.JObject intent,
  ) {
    return _id_startForegroundService(
        this, const jni.JObjectType(), [intent.reference.pointer]);
  }

  static final _id_stopService = _class.instanceMethodId(
    r"stopService",
    r"(Landroid/content/Intent;)Z",
  );

  /// from: public abstract boolean stopService(android.content.Intent intent)
  bool stopService(
    jni.JObject intent,
  ) {
    return _id_stopService(
        this, const jni.jbooleanType(), [intent.reference.pointer]);
  }

  static final _id_bindService = _class.instanceMethodId(
    r"bindService",
    r"(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z",
  );

  /// from: public abstract boolean bindService(android.content.Intent intent, android.content.ServiceConnection serviceConnection, int i)
  bool bindService(
    jni.JObject intent,
    jni.JObject serviceConnection,
    int i,
  ) {
    return _id_bindService(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      serviceConnection.reference.pointer,
      jni.JValueInt(i)
    ]);
  }

  static final _id_bindService1 = _class.instanceMethodId(
    r"bindService",
    r"(Landroid/content/Intent;Landroid/content/ServiceConnection;Landroid/content/Context$BindServiceFlags;)Z",
  );

  /// from: public boolean bindService(android.content.Intent intent, android.content.ServiceConnection serviceConnection, android.content.Context$BindServiceFlags bindServiceFlags)
  bool bindService1(
    jni.JObject intent,
    jni.JObject serviceConnection,
    Context_BindServiceFlags bindServiceFlags,
  ) {
    return _id_bindService1(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      serviceConnection.reference.pointer,
      bindServiceFlags.reference.pointer
    ]);
  }

  static final _id_bindService2 = _class.instanceMethodId(
    r"bindService",
    r"(Landroid/content/Intent;ILjava/util/concurrent/Executor;Landroid/content/ServiceConnection;)Z",
  );

  /// from: public boolean bindService(android.content.Intent intent, int i, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindService2(
    jni.JObject intent,
    int i,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _id_bindService2(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      jni.JValueInt(i),
      executor.reference.pointer,
      serviceConnection.reference.pointer
    ]);
  }

  static final _id_bindService3 = _class.instanceMethodId(
    r"bindService",
    r"(Landroid/content/Intent;Landroid/content/Context$BindServiceFlags;Ljava/util/concurrent/Executor;Landroid/content/ServiceConnection;)Z",
  );

  /// from: public boolean bindService(android.content.Intent intent, android.content.Context$BindServiceFlags bindServiceFlags, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindService3(
    jni.JObject intent,
    Context_BindServiceFlags bindServiceFlags,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _id_bindService3(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      bindServiceFlags.reference.pointer,
      executor.reference.pointer,
      serviceConnection.reference.pointer
    ]);
  }

  static final _id_bindIsolatedService = _class.instanceMethodId(
    r"bindIsolatedService",
    r"(Landroid/content/Intent;ILjava/lang/String;Ljava/util/concurrent/Executor;Landroid/content/ServiceConnection;)Z",
  );

  /// from: public boolean bindIsolatedService(android.content.Intent intent, int i, java.lang.String string, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindIsolatedService(
    jni.JObject intent,
    int i,
    jni.JString string,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _id_bindIsolatedService(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      jni.JValueInt(i),
      string.reference.pointer,
      executor.reference.pointer,
      serviceConnection.reference.pointer
    ]);
  }

  static final _id_bindIsolatedService1 = _class.instanceMethodId(
    r"bindIsolatedService",
    r"(Landroid/content/Intent;Landroid/content/Context$BindServiceFlags;Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/content/ServiceConnection;)Z",
  );

  /// from: public boolean bindIsolatedService(android.content.Intent intent, android.content.Context$BindServiceFlags bindServiceFlags, java.lang.String string, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindIsolatedService1(
    jni.JObject intent,
    Context_BindServiceFlags bindServiceFlags,
    jni.JString string,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _id_bindIsolatedService1(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      bindServiceFlags.reference.pointer,
      string.reference.pointer,
      executor.reference.pointer,
      serviceConnection.reference.pointer
    ]);
  }

  static final _id_bindServiceAsUser = _class.instanceMethodId(
    r"bindServiceAsUser",
    r"(Landroid/content/Intent;Landroid/content/ServiceConnection;ILandroid/os/UserHandle;)Z",
  );

  /// from: public boolean bindServiceAsUser(android.content.Intent intent, android.content.ServiceConnection serviceConnection, int i, android.os.UserHandle userHandle)
  bool bindServiceAsUser(
    jni.JObject intent,
    jni.JObject serviceConnection,
    int i,
    jni.JObject userHandle,
  ) {
    return _id_bindServiceAsUser(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      serviceConnection.reference.pointer,
      jni.JValueInt(i),
      userHandle.reference.pointer
    ]);
  }

  static final _id_bindServiceAsUser1 = _class.instanceMethodId(
    r"bindServiceAsUser",
    r"(Landroid/content/Intent;Landroid/content/ServiceConnection;Landroid/content/Context$BindServiceFlags;Landroid/os/UserHandle;)Z",
  );

  /// from: public boolean bindServiceAsUser(android.content.Intent intent, android.content.ServiceConnection serviceConnection, android.content.Context$BindServiceFlags bindServiceFlags, android.os.UserHandle userHandle)
  bool bindServiceAsUser1(
    jni.JObject intent,
    jni.JObject serviceConnection,
    Context_BindServiceFlags bindServiceFlags,
    jni.JObject userHandle,
  ) {
    return _id_bindServiceAsUser1(this, const jni.jbooleanType(), [
      intent.reference.pointer,
      serviceConnection.reference.pointer,
      bindServiceFlags.reference.pointer,
      userHandle.reference.pointer
    ]);
  }

  static final _id_updateServiceGroup = _class.instanceMethodId(
    r"updateServiceGroup",
    r"(Landroid/content/ServiceConnection;II)V",
  );

  /// from: public void updateServiceGroup(android.content.ServiceConnection serviceConnection, int i, int i1)
  void updateServiceGroup(
    jni.JObject serviceConnection,
    int i,
    int i1,
  ) {
    _id_updateServiceGroup(this, const jni.jvoidType(), [
      serviceConnection.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1)
    ]);
  }

  static final _id_unbindService = _class.instanceMethodId(
    r"unbindService",
    r"(Landroid/content/ServiceConnection;)V",
  );

  /// from: public abstract void unbindService(android.content.ServiceConnection serviceConnection)
  void unbindService(
    jni.JObject serviceConnection,
  ) {
    _id_unbindService(
        this, const jni.jvoidType(), [serviceConnection.reference.pointer]);
  }

  static final _id_startInstrumentation = _class.instanceMethodId(
    r"startInstrumentation",
    r"(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z",
  );

  /// from: public abstract boolean startInstrumentation(android.content.ComponentName componentName, java.lang.String string, android.os.Bundle bundle)
  bool startInstrumentation(
    jni.JObject componentName,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _id_startInstrumentation(this, const jni.jbooleanType(), [
      componentName.reference.pointer,
      string.reference.pointer,
      bundle.reference.pointer
    ]);
  }

  static final _id_getSystemService = _class.instanceMethodId(
    r"getSystemService",
    r"(Ljava/lang/String;)Ljava/lang/Object;",
  );

  /// from: public abstract java.lang.Object getSystemService(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSystemService(
    jni.JString string,
  ) {
    return _id_getSystemService(
        this, const jni.JObjectType(), [string.reference.pointer]);
  }

  static final _id_getSystemService1 = _class.instanceMethodId(
    r"getSystemService",
    r"(Ljava/lang/Class;)Ljava/lang/Object;",
  );

  /// from: public final T getSystemService(java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  $T getSystemService1<$T extends jni.JObject>(
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return _id_getSystemService1(this, T, [class0.reference.pointer]);
  }

  static final _id_getSystemServiceName = _class.instanceMethodId(
    r"getSystemServiceName",
    r"(Ljava/lang/Class;)Ljava/lang/String;",
  );

  /// from: public abstract java.lang.String getSystemServiceName(java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getSystemServiceName(
    jni.JObject class0,
  ) {
    return _id_getSystemServiceName(
        this, const jni.JStringType(), [class0.reference.pointer]);
  }

  static final _id_checkPermission = _class.instanceMethodId(
    r"checkPermission",
    r"(Ljava/lang/String;II)I",
  );

  /// from: public abstract int checkPermission(java.lang.String string, int i, int i1)
  int checkPermission(
    jni.JString string,
    int i,
    int i1,
  ) {
    return _id_checkPermission(this, const jni.jintType(),
        [string.reference.pointer, jni.JValueInt(i), jni.JValueInt(i1)]);
  }

  static final _id_checkCallingPermission = _class.instanceMethodId(
    r"checkCallingPermission",
    r"(Ljava/lang/String;)I",
  );

  /// from: public abstract int checkCallingPermission(java.lang.String string)
  int checkCallingPermission(
    jni.JString string,
  ) {
    return _id_checkCallingPermission(
        this, const jni.jintType(), [string.reference.pointer]);
  }

  static final _id_checkCallingOrSelfPermission = _class.instanceMethodId(
    r"checkCallingOrSelfPermission",
    r"(Ljava/lang/String;)I",
  );

  /// from: public abstract int checkCallingOrSelfPermission(java.lang.String string)
  int checkCallingOrSelfPermission(
    jni.JString string,
  ) {
    return _id_checkCallingOrSelfPermission(
        this, const jni.jintType(), [string.reference.pointer]);
  }

  static final _id_checkSelfPermission = _class.instanceMethodId(
    r"checkSelfPermission",
    r"(Ljava/lang/String;)I",
  );

  /// from: public abstract int checkSelfPermission(java.lang.String string)
  int checkSelfPermission(
    jni.JString string,
  ) {
    return _id_checkSelfPermission(
        this, const jni.jintType(), [string.reference.pointer]);
  }

  static final _id_enforcePermission = _class.instanceMethodId(
    r"enforcePermission",
    r"(Ljava/lang/String;IILjava/lang/String;)V",
  );

  /// from: public abstract void enforcePermission(java.lang.String string, int i, int i1, java.lang.String string1)
  void enforcePermission(
    jni.JString string,
    int i,
    int i1,
    jni.JString string1,
  ) {
    _id_enforcePermission(this, const jni.jvoidType(), [
      string.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      string1.reference.pointer
    ]);
  }

  static final _id_enforceCallingPermission = _class.instanceMethodId(
    r"enforceCallingPermission",
    r"(Ljava/lang/String;Ljava/lang/String;)V",
  );

  /// from: public abstract void enforceCallingPermission(java.lang.String string, java.lang.String string1)
  void enforceCallingPermission(
    jni.JString string,
    jni.JString string1,
  ) {
    _id_enforceCallingPermission(this, const jni.jvoidType(),
        [string.reference.pointer, string1.reference.pointer]);
  }

  static final _id_enforceCallingOrSelfPermission = _class.instanceMethodId(
    r"enforceCallingOrSelfPermission",
    r"(Ljava/lang/String;Ljava/lang/String;)V",
  );

  /// from: public abstract void enforceCallingOrSelfPermission(java.lang.String string, java.lang.String string1)
  void enforceCallingOrSelfPermission(
    jni.JString string,
    jni.JString string1,
  ) {
    _id_enforceCallingOrSelfPermission(this, const jni.jvoidType(),
        [string.reference.pointer, string1.reference.pointer]);
  }

  static final _id_grantUriPermission = _class.instanceMethodId(
    r"grantUriPermission",
    r"(Ljava/lang/String;Landroid/net/Uri;I)V",
  );

  /// from: public abstract void grantUriPermission(java.lang.String string, android.net.Uri uri, int i)
  void grantUriPermission(
    jni.JString string,
    jni.JObject uri,
    int i,
  ) {
    _id_grantUriPermission(this, const jni.jvoidType(),
        [string.reference.pointer, uri.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_revokeUriPermission = _class.instanceMethodId(
    r"revokeUriPermission",
    r"(Landroid/net/Uri;I)V",
  );

  /// from: public abstract void revokeUriPermission(android.net.Uri uri, int i)
  void revokeUriPermission(
    jni.JObject uri,
    int i,
  ) {
    _id_revokeUriPermission(
        this, const jni.jvoidType(), [uri.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_revokeUriPermission1 = _class.instanceMethodId(
    r"revokeUriPermission",
    r"(Ljava/lang/String;Landroid/net/Uri;I)V",
  );

  /// from: public abstract void revokeUriPermission(java.lang.String string, android.net.Uri uri, int i)
  void revokeUriPermission1(
    jni.JString string,
    jni.JObject uri,
    int i,
  ) {
    _id_revokeUriPermission1(this, const jni.jvoidType(),
        [string.reference.pointer, uri.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_checkUriPermission = _class.instanceMethodId(
    r"checkUriPermission",
    r"(Landroid/net/Uri;III)I",
  );

  /// from: public abstract int checkUriPermission(android.net.Uri uri, int i, int i1, int i2)
  int checkUriPermission(
    jni.JObject uri,
    int i,
    int i1,
    int i2,
  ) {
    return _id_checkUriPermission(this, const jni.jintType(), [
      uri.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2)
    ]);
  }

  static final _id_checkUriPermissions = _class.instanceMethodId(
    r"checkUriPermissions",
    r"(Ljava/util/List;III)[I",
  );

  /// from: public java.lang.Object[] checkUriPermissions(java.util.List list, int i, int i1, int i2)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> checkUriPermissions(
    jni.JList<jni.JObject> list,
    int i,
    int i1,
    int i2,
  ) {
    return _id_checkUriPermissions(this, const jni.JArrayType(jni.jintType()), [
      list.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2)
    ]);
  }

  static final _id_checkCallingUriPermission = _class.instanceMethodId(
    r"checkCallingUriPermission",
    r"(Landroid/net/Uri;I)I",
  );

  /// from: public abstract int checkCallingUriPermission(android.net.Uri uri, int i)
  int checkCallingUriPermission(
    jni.JObject uri,
    int i,
  ) {
    return _id_checkCallingUriPermission(
        this, const jni.jintType(), [uri.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_checkCallingUriPermissions = _class.instanceMethodId(
    r"checkCallingUriPermissions",
    r"(Ljava/util/List;I)[I",
  );

  /// from: public java.lang.Object[] checkCallingUriPermissions(java.util.List list, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> checkCallingUriPermissions(
    jni.JList<jni.JObject> list,
    int i,
  ) {
    return _id_checkCallingUriPermissions(
        this,
        const jni.JArrayType(jni.jintType()),
        [list.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_checkCallingOrSelfUriPermission = _class.instanceMethodId(
    r"checkCallingOrSelfUriPermission",
    r"(Landroid/net/Uri;I)I",
  );

  /// from: public abstract int checkCallingOrSelfUriPermission(android.net.Uri uri, int i)
  int checkCallingOrSelfUriPermission(
    jni.JObject uri,
    int i,
  ) {
    return _id_checkCallingOrSelfUriPermission(
        this, const jni.jintType(), [uri.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_checkCallingOrSelfUriPermissions = _class.instanceMethodId(
    r"checkCallingOrSelfUriPermissions",
    r"(Ljava/util/List;I)[I",
  );

  /// from: public java.lang.Object[] checkCallingOrSelfUriPermissions(java.util.List list, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> checkCallingOrSelfUriPermissions(
    jni.JList<jni.JObject> list,
    int i,
  ) {
    return _id_checkCallingOrSelfUriPermissions(
        this,
        const jni.JArrayType(jni.jintType()),
        [list.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_checkUriPermission1 = _class.instanceMethodId(
    r"checkUriPermission",
    r"(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I",
  );

  /// from: public abstract int checkUriPermission(android.net.Uri uri, java.lang.String string, java.lang.String string1, int i, int i1, int i2)
  int checkUriPermission1(
    jni.JObject uri,
    jni.JString string,
    jni.JString string1,
    int i,
    int i1,
    int i2,
  ) {
    return _id_checkUriPermission1(this, const jni.jintType(), [
      uri.reference.pointer,
      string.reference.pointer,
      string1.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2)
    ]);
  }

  static final _id_enforceUriPermission = _class.instanceMethodId(
    r"enforceUriPermission",
    r"(Landroid/net/Uri;IIILjava/lang/String;)V",
  );

  /// from: public abstract void enforceUriPermission(android.net.Uri uri, int i, int i1, int i2, java.lang.String string)
  void enforceUriPermission(
    jni.JObject uri,
    int i,
    int i1,
    int i2,
    jni.JString string,
  ) {
    _id_enforceUriPermission(this, const jni.jvoidType(), [
      uri.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      string.reference.pointer
    ]);
  }

  static final _id_enforceCallingUriPermission = _class.instanceMethodId(
    r"enforceCallingUriPermission",
    r"(Landroid/net/Uri;ILjava/lang/String;)V",
  );

  /// from: public abstract void enforceCallingUriPermission(android.net.Uri uri, int i, java.lang.String string)
  void enforceCallingUriPermission(
    jni.JObject uri,
    int i,
    jni.JString string,
  ) {
    _id_enforceCallingUriPermission(this, const jni.jvoidType(),
        [uri.reference.pointer, jni.JValueInt(i), string.reference.pointer]);
  }

  static final _id_enforceCallingOrSelfUriPermission = _class.instanceMethodId(
    r"enforceCallingOrSelfUriPermission",
    r"(Landroid/net/Uri;ILjava/lang/String;)V",
  );

  /// from: public abstract void enforceCallingOrSelfUriPermission(android.net.Uri uri, int i, java.lang.String string)
  void enforceCallingOrSelfUriPermission(
    jni.JObject uri,
    int i,
    jni.JString string,
  ) {
    _id_enforceCallingOrSelfUriPermission(this, const jni.jvoidType(),
        [uri.reference.pointer, jni.JValueInt(i), string.reference.pointer]);
  }

  static final _id_enforceUriPermission1 = _class.instanceMethodId(
    r"enforceUriPermission",
    r"(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V",
  );

  /// from: public abstract void enforceUriPermission(android.net.Uri uri, java.lang.String string, java.lang.String string1, int i, int i1, int i2, java.lang.String string2)
  void enforceUriPermission1(
    jni.JObject uri,
    jni.JString string,
    jni.JString string1,
    int i,
    int i1,
    int i2,
    jni.JString string2,
  ) {
    _id_enforceUriPermission1(this, const jni.jvoidType(), [
      uri.reference.pointer,
      string.reference.pointer,
      string1.reference.pointer,
      jni.JValueInt(i),
      jni.JValueInt(i1),
      jni.JValueInt(i2),
      string2.reference.pointer
    ]);
  }

  static final _id_revokeSelfPermissionOnKill = _class.instanceMethodId(
    r"revokeSelfPermissionOnKill",
    r"(Ljava/lang/String;)V",
  );

  /// from: public void revokeSelfPermissionOnKill(java.lang.String string)
  void revokeSelfPermissionOnKill(
    jni.JString string,
  ) {
    _id_revokeSelfPermissionOnKill(
        this, const jni.jvoidType(), [string.reference.pointer]);
  }

  static final _id_revokeSelfPermissionsOnKill = _class.instanceMethodId(
    r"revokeSelfPermissionsOnKill",
    r"(Ljava/util/Collection;)V",
  );

  /// from: public void revokeSelfPermissionsOnKill(java.util.Collection collection)
  void revokeSelfPermissionsOnKill(
    jni.JObject collection,
  ) {
    _id_revokeSelfPermissionsOnKill(
        this, const jni.jvoidType(), [collection.reference.pointer]);
  }

  static final _id_createPackageContext = _class.instanceMethodId(
    r"createPackageContext",
    r"(Ljava/lang/String;I)Landroid/content/Context;",
  );

  /// from: public abstract android.content.Context createPackageContext(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  Context createPackageContext(
    jni.JString string,
    int i,
  ) {
    return _id_createPackageContext(this, const $ContextType(),
        [string.reference.pointer, jni.JValueInt(i)]);
  }

  static final _id_createContextForSplit = _class.instanceMethodId(
    r"createContextForSplit",
    r"(Ljava/lang/String;)Landroid/content/Context;",
  );

  /// from: public abstract android.content.Context createContextForSplit(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Context createContextForSplit(
    jni.JString string,
  ) {
    return _id_createContextForSplit(
        this, const $ContextType(), [string.reference.pointer]);
  }

  static final _id_createConfigurationContext = _class.instanceMethodId(
    r"createConfigurationContext",
    r"(Landroid/content/res/Configuration;)Landroid/content/Context;",
  );

  /// from: public abstract android.content.Context createConfigurationContext(android.content.res.Configuration configuration)
  /// The returned object must be released after use, by calling the [release] method.
  Context createConfigurationContext(
    jni.JObject configuration,
  ) {
    return _id_createConfigurationContext(
        this, const $ContextType(), [configuration.reference.pointer]);
  }

  static final _id_createDisplayContext = _class.instanceMethodId(
    r"createDisplayContext",
    r"(Landroid/view/Display;)Landroid/content/Context;",
  );

  /// from: public abstract android.content.Context createDisplayContext(android.view.Display display)
  /// The returned object must be released after use, by calling the [release] method.
  Context createDisplayContext(
    jni.JObject display,
  ) {
    return _id_createDisplayContext(
        this, const $ContextType(), [display.reference.pointer]);
  }

  static final _id_createDeviceContext = _class.instanceMethodId(
    r"createDeviceContext",
    r"(I)Landroid/content/Context;",
  );

  /// from: public android.content.Context createDeviceContext(int i)
  /// The returned object must be released after use, by calling the [release] method.
  Context createDeviceContext(
    int i,
  ) {
    return _id_createDeviceContext(
        this, const $ContextType(), [jni.JValueInt(i)]);
  }

  static final _id_createWindowContext = _class.instanceMethodId(
    r"createWindowContext",
    r"(ILandroid/os/Bundle;)Landroid/content/Context;",
  );

  /// from: public android.content.Context createWindowContext(int i, android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  Context createWindowContext(
    int i,
    jni.JObject bundle,
  ) {
    return _id_createWindowContext(this, const $ContextType(),
        [jni.JValueInt(i), bundle.reference.pointer]);
  }

  static final _id_createWindowContext1 = _class.instanceMethodId(
    r"createWindowContext",
    r"(Landroid/view/Display;ILandroid/os/Bundle;)Landroid/content/Context;",
  );

  /// from: public android.content.Context createWindowContext(android.view.Display display, int i, android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  Context createWindowContext1(
    jni.JObject display,
    int i,
    jni.JObject bundle,
  ) {
    return _id_createWindowContext1(this, const $ContextType(), [
      display.reference.pointer,
      jni.JValueInt(i),
      bundle.reference.pointer
    ]);
  }

  static final _id_createContext = _class.instanceMethodId(
    r"createContext",
    r"(Landroid/content/ContextParams;)Landroid/content/Context;",
  );

  /// from: public android.content.Context createContext(android.content.ContextParams contextParams)
  /// The returned object must be released after use, by calling the [release] method.
  Context createContext(
    jni.JObject contextParams,
  ) {
    return _id_createContext(
        this, const $ContextType(), [contextParams.reference.pointer]);
  }

  static final _id_createAttributionContext = _class.instanceMethodId(
    r"createAttributionContext",
    r"(Ljava/lang/String;)Landroid/content/Context;",
  );

  /// from: public android.content.Context createAttributionContext(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Context createAttributionContext(
    jni.JString string,
  ) {
    return _id_createAttributionContext(
        this, const $ContextType(), [string.reference.pointer]);
  }

  static final _id_createDeviceProtectedStorageContext =
      _class.instanceMethodId(
    r"createDeviceProtectedStorageContext",
    r"()Landroid/content/Context;",
  );

  /// from: public abstract android.content.Context createDeviceProtectedStorageContext()
  /// The returned object must be released after use, by calling the [release] method.
  Context createDeviceProtectedStorageContext() {
    return _id_createDeviceProtectedStorageContext(
        this, const $ContextType(), []);
  }

  static final _id_getDisplay = _class.instanceMethodId(
    r"getDisplay",
    r"()Landroid/view/Display;",
  );

  /// from: public android.view.Display getDisplay()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDisplay() {
    return _id_getDisplay(this, const jni.JObjectType(), []);
  }

  static final _id_getDeviceId = _class.instanceMethodId(
    r"getDeviceId",
    r"()I",
  );

  /// from: public int getDeviceId()
  int getDeviceId() {
    return _id_getDeviceId(this, const jni.jintType(), []);
  }

  static final _id_registerDeviceIdChangeListener = _class.instanceMethodId(
    r"registerDeviceIdChangeListener",
    r"(Ljava/util/concurrent/Executor;Ljava/util/function/IntConsumer;)V",
  );

  /// from: public void registerDeviceIdChangeListener(java.util.concurrent.Executor executor, java.util.function.IntConsumer intConsumer)
  void registerDeviceIdChangeListener(
    jni.JObject executor,
    jni.JObject intConsumer,
  ) {
    _id_registerDeviceIdChangeListener(this, const jni.jvoidType(),
        [executor.reference.pointer, intConsumer.reference.pointer]);
  }

  static final _id_unregisterDeviceIdChangeListener = _class.instanceMethodId(
    r"unregisterDeviceIdChangeListener",
    r"(Ljava/util/function/IntConsumer;)V",
  );

  /// from: public void unregisterDeviceIdChangeListener(java.util.function.IntConsumer intConsumer)
  void unregisterDeviceIdChangeListener(
    jni.JObject intConsumer,
  ) {
    _id_unregisterDeviceIdChangeListener(
        this, const jni.jvoidType(), [intConsumer.reference.pointer]);
  }

  static final _id_isRestricted = _class.instanceMethodId(
    r"isRestricted",
    r"()Z",
  );

  /// from: public boolean isRestricted()
  bool isRestricted() {
    return _id_isRestricted(this, const jni.jbooleanType(), []);
  }

  static final _id_isDeviceProtectedStorage = _class.instanceMethodId(
    r"isDeviceProtectedStorage",
    r"()Z",
  );

  /// from: public abstract boolean isDeviceProtectedStorage()
  bool isDeviceProtectedStorage() {
    return _id_isDeviceProtectedStorage(this, const jni.jbooleanType(), []);
  }

  static final _id_isUiContext = _class.instanceMethodId(
    r"isUiContext",
    r"()Z",
  );

  /// from: public boolean isUiContext()
  bool isUiContext() {
    return _id_isUiContext(this, const jni.jbooleanType(), []);
  }
}

final class $ContextType extends jni.JObjType<Context> {
  const $ContextType();

  @override
  String get signature => r"Landroid/content/Context;";

  @override
  Context fromReference(jni.JReference reference) =>
      Context.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($ContextType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($ContextType) && other is $ContextType;
  }
}
