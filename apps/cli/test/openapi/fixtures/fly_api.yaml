openapi: '3.0.1'
info:
  title: Machines API
  description: |-
      This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https://fly.io/docs/machines/api/) for how to get started, more information about each endpoint, parameter descriptions, and examples.
  version: '1.0'
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.machines.dev/v1
paths:
  '/apps':
    get:
      tags:
        - Apps
      summary: List Apps
      description: "List all apps with the ability to filter by organization slug.\n"
      operationId: Apps_list
      parameters:
        - name: org_slug
          in: query
          required: true
          description: |-
              The org slug, or 'personal', to filter apps
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResponse'
    post:
      tags:
        - Apps
      summary: Create App
      description: "Create an app with the specified details in the request body.\n"
      operationId: Apps_create
      requestBody:
        description: |-
            App body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
        required: true
      responses:
        '201':
          description: |-
              Created
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
  '/apps/{app_name}':
    get:
      tags:
        - Apps
      summary: Get App
      description: "Retrieve details about a specific app by its name.\n"
      operationId: Apps_show
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
    delete:
      tags:
        - Apps
      summary: Destroy App
      description: "Delete an app by its name.\n"
      operationId: Apps_delete
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
      responses:
        '202':
          description: |-
              Accepted
          content: {}
  '/apps/{app_name}/machines':
    get:
      tags:
        - Machines
      summary: List Machines
      description: "List all Machines associated with a specific app, with optional filters for including deleted Machines and filtering by region.\n"
      operationId: Machines_list
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: include_deleted
          in: query
          description: |-
              Include deleted machines
          schema:
            type: boolean
        - name: region
          in: query
          description: |-
              Region filter
          schema:
            type: string
        - name: state
          in: query
          description: |-
              comma separated list of states to filter (created, started, stopped, suspended)
          schema:
            type: string
        - name: summary
          in: query
          description: |-
              Only return summary info about machines (omit config, checks, events, host_status, nonce, etc.)
          schema:
            type: boolean
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Machine'
    post:
      tags:
        - Machines
      summary: Create Machine
      description: "Create a Machine within a specific app using the details provided in the request body.\n\n**Important**: This request can fail, and you’re responsible for handling that failure. If you ask for a large Machine, or a Machine in a region we happen to be at capacity for, you might need to retry the request, or to fall back to another region. If you’re working directly with the Machines API, you’re taking some responsibility for your own orchestration!\n"
      operationId: Machines_create
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
      requestBody:
        description: |-
            Create machine request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMachineRequest'
        required: true
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
      x-codegen-request-body-name: request
  '/apps/{app_name}/machines/{machine_id}':
    get:
      tags:
        - Machines
      summary: Get Machine
      description: "Get details of a specific Machine within an app by the Machine ID.\n"
      operationId: Machines_show
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
    post:
      tags:
        - Machines
      summary: Update Machine
      description: "Update a Machine's configuration using the details provided in the request body.\n"
      operationId: Machines_update
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      requestBody:
        description: |-
            Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineRequest'
        required: true
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
    delete:
      tags:
        - Machines
      summary: Destroy Machine
      description: "Delete a specific Machine within an app by Machine ID, with an optional force parameter to force kill the Machine if it's running.\n"
      operationId: Machines_delete
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: force
          in: query
          description: |-
              Force kill the machine if it's running
          schema:
            type: boolean
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/apps/{app_name}/machines/{machine_id}/cordon':
    post:
      tags:
        - Machines
      summary: Cordon Machine
      description: "“Cordoning” a Machine refers to disabling its services, so the Fly Proxy won’t route requests to it. In flyctl this is used by blue\/green deployments; one set of Machines is started up with services disabled, and when they are all healthy, the services are enabled on the new Machines and disabled on the old ones.\n"
      operationId: Machines_cordon
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/apps/{app_name}/machines/{machine_id}/events':
    get:
      tags:
        - Machines
      summary: List Events
      description: "List all events associated with a specific Machine within an app.\n"
      operationId: Machines_list_events
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MachineEvent'
  '/apps/{app_name}/machines/{machine_id}/exec':
    post:
      tags:
        - Machines
      summary: Execute Command
      description: "Execute a command on a specific Machine and return the raw command output bytes.\n"
      operationId: Machines_exec
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      requestBody:
        description: |-
            Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineExecRequest'
        required: true
      responses:
        '200':
          description: |-
              stdout, stderr, exit code, and exit signal are returned
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/flydv1.ExecResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/flydv1.ExecResponse'
        '400':
          description: |-
              Bad Request
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
  '/apps/{app_name}/machines/{machine_id}/lease':
    get:
      tags:
        - Machines
      summary: Get Lease
      description: "Retrieve the current lease of a specific Machine within an app. Machine leases can be used to obtain an exclusive lock on modifying a Machine.\n"
      operationId: Machines_show_lease
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
    post:
      tags:
        - Machines
      summary: Create Lease
      description: "Create a lease for a specific Machine within an app using the details provided in the request body. Machine leases can be used to obtain an exclusive lock on modifying a Machine.\n"
      operationId: Machines_create_lease
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: fly-machine-lease-nonce
          in: header
          description: |-
              Existing lease nonce to refresh by ttl, empty or non-existent to create a new lease
          schema:
            type: string
      requestBody:
        description: |-
            Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeaseRequest'
        required: true
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
      x-codegen-request-body-name: request
    delete:
      tags:
        - Machines
      summary: Release Lease
      description: "Release the lease of a specific Machine within an app. Machine leases can be used to obtain an exclusive lock on modifying a Machine.\n"
      operationId: Machines_release_lease
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: fly-machine-lease-nonce
          in: header
          required: true
          description: |-
              Existing lease nonce
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/apps/{app_name}/machines/{machine_id}/metadata':
    get:
      tags:
        - Machines
      summary: Get Metadata
      description: "Retrieve metadata for a specific Machine within an app.\n"
      operationId: Machines_show_metadata
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  '/apps/{app_name}/machines/{machine_id}/metadata/{key}':
    post:
      tags:
        - Machines
      summary: Update Metadata
      description: "Update metadata for a specific machine within an app by providing a metadata key.\n"
      operationId: Machines_update_metadata
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: key
          in: path
          required: true
          description: |-
              Metadata Key
          schema:
            type: string
      responses:
        '204':
          description: |-
              No Content
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Machines
      summary: Delete Metadata
      description: "Delete metadata for a specific Machine within an app by providing a metadata key.\n"
      operationId: Machines_delete_metadata
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: key
          in: path
          required: true
          description: |-
              Metadata Key
          schema:
            type: string
      responses:
        '204':
          description: |-
              No Content
          content: {}
  '/apps/{app_name}/machines/{machine_id}/ps':
    get:
      tags:
        - Machines
      summary: List Processes
      description: "List all processes running on a specific Machine within an app, with optional sorting parameters.\n"
      operationId: Machines_list_processes
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: sort_by
          in: query
          description: |-
              Sort by
          schema:
            type: string
        - name: order
          in: query
          description: |-
              Order
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessStat'
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/apps/{app_name}/machines/{machine_id}/restart':
    post:
      tags:
        - Machines
      summary: Restart Machine
      description: "Restart a specific Machine within an app, with an optional timeout parameter.\n"
      operationId: Machines_restart
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: timeout
          in: query
          description: |-
              Restart timeout as a Go duration string or number of seconds
          schema:
            type: string
        - name: signal
          in: query
          description: |-
              Unix signal name
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/apps/{app_name}/machines/{machine_id}/signal':
    post:
      tags:
        - Machines
      summary: Signal Machine
      description: "Send a signal to a specific Machine within an app using the details provided in the request body.\n"
      operationId: Machines_signal
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      requestBody:
        description: |-
            Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalRequest'
        required: true
      responses:
        '200':
          description: |-
              OK
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
  '/apps/{app_name}/machines/{machine_id}/start':
    post:
      tags:
        - Machines
      summary: Start Machine
      description: "Start a specific Machine within an app.\n"
      operationId: Machines_start
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/apps/{app_name}/machines/{machine_id}/stop':
    post:
      tags:
        - Machines
      summary: Stop Machine
      description: "Stop a specific Machine within an app, with an optional request body to specify signal and timeout.\n"
      operationId: Machines_stop
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      requestBody:
        description: |-
            Optional request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRequest'
        required: false
      responses:
        '200':
          description: |-
              OK
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
  '/apps/{app_name}/machines/{machine_id}/suspend':
    post:
      tags:
        - Machines
      summary: Suspend Machine
      description: "Suspend a specific Machine within an app. The next start operation will attempt (but is not guaranteed) to resume the Machine from a snapshot taken at suspension time, rather than performing a cold boot.\n"
      operationId: Machines_suspend
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/apps/{app_name}/machines/{machine_id}/uncordon':
    post:
      tags:
        - Machines
      summary: Uncordon Machine
      description: "“Cordoning” a Machine refers to disabling its services, so the Fly Proxy won’t route requests to it. In flyctl this is used by blue\/green deployments; one set of Machines is started up with services disabled, and when they are all healthy, the services are enabled on the new Machines and disabled on the old ones.\n"
      operationId: Machines_uncordon
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/apps/{app_name}/machines/{machine_id}/versions':
    get:
      tags:
        - Machines
      summary: List Versions
      description: "List all versions of the configuration for a specific Machine within an app.\n"
      operationId: Machines_list_versions
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MachineVersion'
  '/apps/{app_name}/machines/{machine_id}/wait':
    get:
      tags:
        - Machines
      summary: Wait for State
      description: "Wait for a Machine to reach a specific state. Specify the desired state with the state parameter. See the [Machine states table](https:\/\/fly.io\/docs\/machines\/working-with-machines\/#machine-states) for a list of possible states. The default for this parameter is `started`.\n\nThis request will block for up to 60 seconds. Set a shorter timeout with the timeout parameter.\n"
      operationId: Machines_wait
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: machine_id
          in: path
          required: true
          description: |-
              Machine ID
          schema:
            type: string
        - name: instance_id
          in: query
          description: |-
              26-character Machine version ID
          schema:
            type: string
        - name: timeout
          in: query
          description: |-
              wait timeout. default 60s
          schema:
            type: integer
        - name: state
          in: query
          description: |-
              desired state
          schema:
            type: string
            enum:
              - started
              - stopped
              - suspended
              - destroyed
      responses:
        '200':
          description: |-
              OK
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/apps/{app_name}/secrets':
    get:
      tags:
        - Secrets
      summary: List App secrets
      operationId: Secrets_list
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListSecret'
  '/apps/{app_name}/secrets/{secret_label}':
    delete:
      tags:
        - Secrets
      summary: Destroy Secret
      operationId: Secret_delete
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: secret_label
          in: path
          required: true
          description: |-
              App Secret Label
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/apps/{app_name}/secrets/{secret_label}/type/{secret_type}':
    post:
      tags:
        - Secrets
      summary: Create Secret
      operationId: Secret_create
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: secret_label
          in: path
          required: true
          description: |-
              App Secret Label
          schema:
            type: string
        - name: secret_type
          in: path
          required: true
          description: |-
              App Secret Type
          schema:
            type: string
      requestBody:
        description: |-
            secret body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretRequest'
        required: true
      responses:
        '201':
          description: |-
              Created
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
  '/apps/{app_name}/secrets/{secret_label}/type/{secret_type}/generate':
    post:
      tags:
        - Secrets
      summary: Generate Secret
      operationId: Secret_generate
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: secret_label
          in: path
          required: true
          description: |-
              App Secret Label
          schema:
            type: string
        - name: secret_type
          in: path
          required: true
          description: |-
              App Secret Type
          schema:
            type: string
      responses:
        '201':
          description: |-
              Created
          content: {}
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/apps/{app_name}/volumes':
    get:
      tags:
        - Volumes
      summary: List Volumes
      description: "List all volumes associated with a specific app.\n"
      operationId: Volumes_list
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: summary
          in: query
          description: |-
              Only return summary info about volumes (omit blocks, block size, etc)
          schema:
            type: boolean
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Volume'
    post:
      tags:
        - Volumes
      summary: Create Volume
      description: "Create a volume for a specific app using the details provided in the request body.\n"
      operationId: Volumes_create
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
      requestBody:
        description: |-
            Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVolumeRequest'
        required: true
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      x-codegen-request-body-name: request
  '/apps/{app_name}/volumes/{volume_id}':
    get:
      tags:
        - Volumes
      summary: Get Volume
      description: "Retrieve details about a specific volume by its ID within an app.\n"
      operationId: Volumes_get_by_id
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: volume_id
          in: path
          required: true
          description: |-
              Volume ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
    put:
      tags:
        - Volumes
      summary: Update Volume
      description: "Update a volume's configuration using the details provided in the request body.\n"
      operationId: Volumes_update
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: volume_id
          in: path
          required: true
          description: |-
              Volume ID
          schema:
            type: string
      requestBody:
        description: |-
            Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVolumeRequest'
        required: true
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
    delete:
      tags:
        - Volumes
      summary: Destroy Volume
      description: "Delete a specific volume within an app by volume ID.\n"
      operationId: Volume_delete
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: volume_id
          in: path
          required: true
          description: |-
              Volume ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
  '/apps/{app_name}/volumes/{volume_id}/extend':
    put:
      tags:
        - Volumes
      summary: Extend Volume
      description: "Extend a volume's size within an app using the details provided in the request body.\n"
      operationId: Volumes_extend
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: volume_id
          in: path
          required: true
          description: |-
              Volume ID
          schema:
            type: string
      requestBody:
        description: |-
            Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendVolumeRequest'
        required: true
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendVolumeResponse'
      x-codegen-request-body-name: request
  '/apps/{app_name}/volumes/{volume_id}/snapshots':
    get:
      tags:
        - Volumes
      summary: List Snapshots
      description: "List all snapshots for a specific volume within an app.\n"
      operationId: Volumes_list_snapshots
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: volume_id
          in: path
          required: true
          description: |-
              Volume ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeSnapshot'
    post:
      tags:
        - Volumes
      summary: Create Snapshot
      description: "Create a snapshot for a specific volume within an app.\n"
      operationId: createVolumeSnapshot
      parameters:
        - name: app_name
          in: path
          required: true
          description: |-
              Fly App Name
          schema:
            type: string
        - name: volume_id
          in: path
          required: true
          description: |-
              Volume ID
          schema:
            type: string
      responses:
        '200':
          description: |-
              OK
          content: {}
  '/tokens/kms':
    post:
      tags:
        - Tokens
      summary: Request a Petsem token for accessing KMS
      description: |-
          This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https://fly.io/docs/machines/api/apps-resource/) for details about using the Apps resource.
      operationId: Tokens_request_Kms
      responses:
        '200':
          description: |-
              KMS token
          content:
            application/json:
              schema:
                type: string
  '/tokens/oidc':
    post:
      tags:
        - Tokens
      summary: Request an OIDC token
      description: "Request an Open ID Connect token for your machine. Customize the audience claim with the `aud` parameter. This returns a JWT token. Learn more about [using OpenID Connect](\/docs\/reference\/openid-connect\/) on Fly.io.\n"
      operationId: Tokens_request_OIDC
      requestBody:
        description: |-
            Optional request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOIDCTokenRequest'
        required: true
      responses:
        '200':
          description: |-
              OIDC token
          content:
            application/json:
              schema:
                type: string
        '400':
          description: |-
              Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: request
components:
  schemas:
    App:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
        status:
          type: string
    CheckStatus:
      type: object
      properties:
        name:
          type: string
        output:
          type: string
        status:
          type: string
        updated_at:
          type: string
    CreateAppRequest:
      type: object
      properties:
        app_name:
          type: string
        enable_subdomains:
          type: boolean
        network:
          type: string
        org_slug:
          type: string
    CreateLeaseRequest:
      type: object
      properties:
        description:
          type: string
        ttl:
          description: |-
              seconds lease will be valid
          type: integer
    CreateMachineRequest:
      type: object
      properties:
        config:
          description: |-
              An object defining the Machine configuration
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.MachineConfig'
        lease_ttl:
          type: integer
        lsvd:
          type: boolean
        name:
          description: |-
              Unique name for this Machine. If omitted, one is generated for you
          type: string
        region:
          description: |-
              The target region. Omitting this param launches in the same region as your WireGuard peer connection (somewhere near you).
          type: string
        skip_launch:
          type: boolean
        skip_service_registration:
          type: boolean
    CreateOIDCTokenRequest:
      description: |-
          Optional parameters
      type: object
      properties:
        aud:
          type: string
          example: https://fly.io/org-slug
        aws_principal_tags:
          type: boolean
    CreateSecretRequest:
      type: object
      properties:
        value:
          type: array
          items:
            type: integer
    CreateVolumeRequest:
      type: object
      properties:
        compute:
          $ref: '#/components/schemas/fly.MachineGuest'
        compute_image:
          type: string
        encrypted:
          type: boolean
        fstype:
          type: string
        name:
          type: string
        region:
          type: string
        require_unique_zone:
          type: boolean
        size_gb:
          type: integer
        snapshot_id:
          description: |-
              restore from snapshot
          type: string
        snapshot_retention:
          type: integer
        source_volume_id:
          description: |-
              fork from remote volume
          type: string
        unique_zone_app_wide:
          type: boolean
    ErrorResponse:
      type: object
      properties:
        details:
          description: |-
              Deprecated
          type: object
        error:
          type: string
        status:
          $ref: '#/components/schemas/main.statusCode'
    ExtendVolumeRequest:
      type: object
      properties:
        size_gb:
          type: integer
    ExtendVolumeResponse:
      type: object
      properties:
        needs_restart:
          type: boolean
        volume:
          $ref: '#/components/schemas/Volume'
    ImageRef:
      type: object
      properties:
        digest:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        registry:
          type: string
        repository:
          type: string
        tag:
          type: string
    Lease:
      type: object
      properties:
        description:
          description: |-
              Description or reason for the Lease.
          type: string
        expires_at:
          description: |-
              ExpiresAt is the unix timestamp in UTC to denote when the Lease will no longer be valid.
          type: integer
        nonce:
          description: |-
              Nonce is the unique ID autogenerated and associated with the Lease.
          type: string
        owner:
          description: |-
              Owner is the user identifier which acquired the Lease.
          type: string
        version:
          description: |-
              Machine version
          type: string
    ListApp:
      type: object
      properties:
        id:
          type: string
        machine_count:
          type: integer
        name:
          type: string
        network:
          type: object
    ListAppsResponse:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/ListApp'
        total_apps:
          type: integer
    ListSecret:
      type: object
      properties:
        label:
          type: string
        publickey:
          type: array
          items:
            type: integer
        type:
          type: string
    ListenSocket:
      type: object
      properties:
        address:
          type: string
        proto:
          type: string
    Machine:
      type: object
      properties:
        checks:
          type: array
          items:
            $ref: '#/components/schemas/CheckStatus'
        config:
          $ref: '#/components/schemas/fly.MachineConfig'
        created_at:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/MachineEvent'
        host_status:
          type: string
          enum:
            - ok
            - unknown
            - unreachable
        id:
          type: string
        image_ref:
          $ref: '#/components/schemas/ImageRef'
        incomplete_config:
          $ref: '#/components/schemas/fly.MachineConfig'
        instance_id:
          description: |-
              InstanceID is unique for each version of the machine
          type: string
        name:
          type: string
        nonce:
          description: |-
              Nonce is only every returned on machine creation if a lease_duration was provided.
          type: string
        private_ip:
          description: |-
              PrivateIP is the internal 6PN address of the machine.
          type: string
        region:
          type: string
        state:
          type: string
        updated_at:
          type: string
    MachineEvent:
      type: object
      properties:
        id:
          type: string
        request:
          type: object
        source:
          type: string
        status:
          type: string
        timestamp:
          type: integer
        type:
          type: string
    MachineExecRequest:
      type: object
      properties:
        cmd:
          description: |-
              Deprecated: use Command instead
          type: string
        command:
          type: array
          items:
            type: string
        container:
          type: string
        stdin:
          type: string
        timeout:
          type: integer
    MachineVersion:
      type: object
      properties:
        user_config:
          $ref: '#/components/schemas/fly.MachineConfig'
        version:
          type: string
    Organization:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
    ProcessStat:
      type: object
      properties:
        command:
          type: string
        cpu:
          type: integer
        directory:
          type: string
        listen_sockets:
          type: array
          items:
            $ref: '#/components/schemas/ListenSocket'
        pid:
          type: integer
        rss:
          type: integer
        rtime:
          type: integer
        stime:
          type: integer
    SignalRequest:
      type: object
      properties:
        signal:
          type: string
          enum:
            - SIGABRT
            - SIGALRM
            - SIGFPE
            - SIGHUP
            - SIGILL
            - SIGINT
            - SIGKILL
            - SIGPIPE
            - SIGQUIT
            - SIGSEGV
            - SIGTERM
            - SIGTRAP
            - SIGUSR1
    StopRequest:
      type: object
      properties:
        signal:
          type: string
        timeout:
          $ref: '#/components/schemas/fly.Duration'
    UpdateMachineRequest:
      type: object
      properties:
        config:
          description: |-
              An object defining the Machine configuration
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.MachineConfig'
        current_version:
          type: string
        lease_ttl:
          type: integer
        lsvd:
          type: boolean
        name:
          description: |-
              Unique name for this Machine. If omitted, one is generated for you
          type: string
        region:
          description: |-
              The target region. Omitting this param launches in the same region as your WireGuard peer connection (somewhere near you).
          type: string
        skip_launch:
          type: boolean
        skip_service_registration:
          type: boolean
    UpdateVolumeRequest:
      type: object
      properties:
        auto_backup_enabled:
          type: boolean
        snapshot_retention:
          type: integer
    Volume:
      type: object
      properties:
        attached_alloc_id:
          type: string
        attached_machine_id:
          type: string
        auto_backup_enabled:
          type: boolean
        block_size:
          type: integer
        blocks:
          type: integer
        blocks_avail:
          type: integer
        blocks_free:
          type: integer
        created_at:
          type: string
        encrypted:
          type: boolean
        fstype:
          type: string
        host_status:
          type: string
          enum:
            - ok
            - unknown
            - unreachable
        id:
          type: string
        name:
          type: string
        region:
          type: string
        size_gb:
          type: integer
        snapshot_retention:
          type: integer
        state:
          type: string
        zone:
          type: string
    VolumeSnapshot:
      type: object
      properties:
        created_at:
          type: string
        digest:
          type: string
        id:
          type: string
        retention_days:
          type: integer
        size:
          type: integer
        status:
          type: string
    fly.ContainerConfig:
      type: object
      properties:
        cmd:
          description: |-
              CmdOverride is used to override the default command of the image.
          type: array
          items:
            type: string
        depends_on:
          description: |-
              DependsOn can be used to define dependencies between containers. The container will only be
              started after all of its dependent conditions have been satisfied.
          type: array
          items:
            $ref: '#/components/schemas/fly.ContainerDependency'
        entrypoint:
          description: |-
              EntrypointOverride is used to override the default entrypoint of the image.
          type: array
          items:
            type: string
        env:
          description: |-
              ExtraEnv is used to add additional environment variables to the container.
          type: object
          additionalProperties:
            type: string
        env_from:
          description: |-
              EnvFrom can be provided to set environment variables from machine fields.
          type: array
          items:
            $ref: '#/components/schemas/fly.EnvFrom'
        exec:
          description: |-
              Image Config overrides - these fields are used to override the image configuration.
              If not provided, the image configuration will be used.
              ExecOverride is used to override the default command of the image.
          type: array
          items:
            type: string
        files:
          description: |-
              Files are files that will be written to the container file system.
          type: array
          items:
            $ref: '#/components/schemas/fly.File'
        healthchecks:
          description: |-
              Healthchecks determine the health of your containers. Healthchecks can use HTTP, TCP or an Exec command.
          type: array
          items:
            $ref: '#/components/schemas/fly.ContainerHealthcheck'
        image:
          description: |-
              Image is the docker image to run.
          type: string
        mounts:
          description: |-
              Set of mounts added to the container. These must reference a volume in the machine config via its name.
          type: array
          items:
            $ref: '#/components/schemas/fly.ContainerMount'
        name:
          description: |-
              Name is used to identify the container in the machine.
          type: string
        restart:
          description: |-
              Restart is used to define the restart policy for the container. NOTE: spot-price is not
              supported for containers.
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.MachineRestart'
        secrets:
          description: |-
              Secrets can be provided at the process level to explicitly indicate which secrets should be
              used for the process. If not provided, the secrets provided at the machine level will be used.
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineSecret'
        stop:
          description: |-
              Stop is used to define the signal and timeout for stopping the container.
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.StopConfig'
        user:
          description: |-
              UserOverride is used to override the default user of the image.
          type: string
    fly.ContainerDependency:
      type: object
      properties:
        condition:
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.ContainerDependencyCondition'
        name:
          type: string
    fly.ContainerDependencyCondition:
      type: string
      enum:
        - exited_successfully
        - healthy
        - started
      x-enum-varnames:
        - ExitedSuccessfully
        - Healthy
        - Started
    fly.ContainerHealthcheck:
      type: object
      properties:
        exec:
          $ref: '#/components/schemas/fly.ExecHealthcheck'
        failure_threshold:
          description: |-
              The number of times the check must fail before considering the container unhealthy.
          type: integer
        grace_period:
          description: |-
              The time in seconds to wait after a container starts before checking its health.
          type: integer
        http:
          $ref: '#/components/schemas/fly.HTTPHealthcheck'
        interval:
          description: |-
              The time in seconds between executing the defined check.
          type: integer
        kind:
          description: |-
              Kind of healthcheck (readiness, liveness)
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.ContainerHealthcheckKind'
        name:
          description: |-
              The name of the check. Must be unique within the container.
          type: string
        success_threshold:
          description: |-
              The number of times the check must succeeed before considering the container healthy.
          type: integer
        tcp:
          $ref: '#/components/schemas/fly.TCPHealthcheck'
        timeout:
          description: |-
              The time in seconds to wait for the check to complete.
          type: integer
        unhealthy:
          description: |-
              Unhealthy policy that determines what action to take if a container is deemed unhealthy
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.UnhealthyPolicy'
    fly.ContainerHealthcheckKind:
      type: string
      enum:
        - readiness
        - liveness
      x-enum-varnames:
        - Readiness
        - Liveness
    fly.ContainerHealthcheckScheme:
      type: string
      enum:
        - http
        - https
      x-enum-varnames:
        - HTTP
        - HTTPS
    fly.ContainerMount:
      type: object
      properties:
        name:
          description: |-
              The name of the volume. Must exist in the volumes field in the machine configuration
          type: string
        path:
          description: |-
              The path to mount the volume within the container
          type: string
    fly.DNSConfig:
      type: object
      properties:
        dns_forward_rules:
          type: array
          items:
            $ref: '#/components/schemas/fly.dnsForwardRule'
        hostname:
          type: string
        hostname_fqdn:
          type: string
        nameservers:
          type: array
          items:
            type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/fly.dnsOption'
        searches:
          type: array
          items:
            type: string
        skip_registration:
          type: boolean
    fly.Duration:
      type: object
      properties:
        time.Duration:
          type: integer
          x-enum-varnames:
            - minDuration
            - maxDuration
            - Nanosecond
            - Microsecond
            - Millisecond
            - Second
            - Minute
            - Hour
            - minDuration
            - maxDuration
            - Nanosecond
            - Microsecond
            - Millisecond
            - Second
            - Minute
            - Hour
            - minDuration
            - maxDuration
            - Nanosecond
            - Microsecond
            - Millisecond
            - Second
            - Minute
            - Hour
    fly.EnvFrom:
      description: |-
          EnvVar defines an environment variable to be populated from a machine field, env_var
      type: object
      properties:
        env_var:
          description: |-
              EnvVar is required and is the name of the environment variable that will be set from the
              secret. It must be a valid environment variable name.
          type: string
        field_ref:
          description: |-
              FieldRef selects a field of the Machine: supports id, version, app_name, private_ip, region, image.
          type: string
          enum:
            - id
            - version
            - app_name
            - private_ip
            - region
            - image
    fly.ExecHealthcheck:
      type: object
      properties:
        command:
          description: |-
              The command to run to check the health of the container (e.g. ["cat", "/tmp/healthy"])
          type: array
          items:
            type: string
    fly.File:
      description: |-
          A file that will be written to the Machine. One of RawValue or SecretName must be set.
      type: object
      properties:
        guest_path:
          description: |-
              GuestPath is the path on the machine where the file will be written and must be an absolute path.
              For example: /full/path/to/file.json
          type: string
        mode:
          description: |-
              Mode bits used to set permissions on this file as accepted by chmod(2).
          type: integer
        raw_value:
          description: |-
              The base64 encoded string of the file contents.
          type: string
        secret_name:
          description: |-
              The name of the secret that contains the base64 encoded file contents.
          type: string
    fly.HTTPHealthcheck:
      type: object
      properties:
        headers:
          description: |-
              Additional headers to send with the request
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineHTTPHeader'
        method:
          description: |-
              The HTTP method to use to when making the request
          type: string
        path:
          description: |-
              The path to send the request to
          type: string
        port:
          description: |-
              The port to connect to, often the same as internal_port
          type: integer
        scheme:
          description: |-
              Whether to use http or https
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.ContainerHealthcheckScheme'
        tls_server_name:
          description: |-
              If the protocol is https, the hostname to use for TLS certificate validation
          type: string
        tls_skip_verify:
          description: |-
              If the protocol is https, whether or not to verify the TLS certificate
          type: boolean
    fly.HTTPOptions:
      type: object
      properties:
        compress:
          type: boolean
        h2_backend:
          type: boolean
        headers_read_timeout:
          type: integer
        idle_timeout:
          type: integer
        response:
          $ref: '#/components/schemas/fly.HTTPResponseOptions'
    fly.HTTPResponseOptions:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: object
        pristine:
          type: boolean
    fly.MachineCheck:
      description: |-
          An optional object that defines one or more named checks. The key for each check is the check name.
      type: object
      properties:
        grace_period:
          description: |-
              The time to wait after a VM starts before checking its health
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.Duration'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineHTTPHeader'
        interval:
          description: |-
              The time between connectivity checks
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.Duration'
        kind:
          description: |-
              Kind of the check (informational, readiness)
          type: string
          enum:
            - informational
            - readiness
        method:
          description: |-
              For http checks, the HTTP method to use to when making the request
          type: string
        path:
          description: |-
              For http checks, the path to send the request to
          type: string
        port:
          description: |-
              The port to connect to, often the same as internal_port
          type: integer
        protocol:
          description: |-
              For http checks, whether to use http or https
          type: string
        timeout:
          description: |-
              The maximum time a connection can take before being reported as failing its health check
          type: object
          allOf:
            - $ref: '#/components/schemas/fly.Duration'
        tls_server_name:
          description: |-
              If the protocol is https, the hostname to use for TLS certificate validation
          type: string
        tls_skip_verify:
          description: |-
              For http checks with https protocol, whether or not to verify the TLS certificate
          type: boolean
        type:
          description: |-
              tcp or http
          type: string
    fly.MachineConfig:
      type: object
      properties:
        auto_destroy:
          description: |-
              Optional boolean telling the Machine to destroy itself once it’s complete (default false)
          type: boolean
        checks:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/fly.MachineCheck'
        containers:
          description: |-
              Containers are a list of containers that will run in the machine. Currently restricted to
              only specific organizations.
          type: array
          items:
            $ref: '#/components/schemas/fly.ContainerConfig'
        disable_machine_autostart:
          description: |-
              Deprecated: use Service.Autostart instead
          type: boolean
        dns:
          $ref: '#/components/schemas/fly.DNSConfig'
        env:
          description: |-
              An object filled with key/value pairs to be set as environment variables
          type: object
          additionalProperties:
            type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/fly.File'
        guest:
          $ref: '#/components/schemas/fly.MachineGuest'
        image:
          description: |-
              The docker image to run
          type: string
        init:
          $ref: '#/components/schemas/fly.MachineInit'
        metadata:
          type: object
          additionalProperties:
            type: string
        metrics:
          $ref: '#/components/schemas/fly.MachineMetrics'
        mounts:
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineMount'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineProcess'
        restart:
          $ref: '#/components/schemas/fly.MachineRestart'
        schedule:
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineService'
        size:
          description: |-
              Deprecated: use Guest instead
          type: string
        standbys:
          description: |-
              Standbys enable a machine to be a standby for another. In the event of a hardware failure,
              the standby machine will be started.
          type: array
          items:
            type: string
        statics:
          type: array
          items:
            $ref: '#/components/schemas/fly.Static'
        stop_config:
          $ref: '#/components/schemas/fly.StopConfig'
        volumes:
          description: |-
              Volumes describe the set of volumes that can be attached to the machine. Used in conjuction
              with containers
          type: array
          items:
            $ref: '#/components/schemas/fly.VolumeConfig'
    fly.MachineGuest:
      type: object
      properties:
        cpu_kind:
          type: string
        cpus:
          type: integer
        gpu_kind:
          type: string
        gpus:
          type: integer
        host_dedication_id:
          type: string
        kernel_args:
          type: array
          items:
            type: string
        memory_mb:
          type: integer
    fly.MachineHTTPHeader:
      description: |-
          For http checks, an array of objects with string field Name and array of strings field Values. The key/value pairs specify header and header values that will get passed with the check call.
      type: object
      properties:
        name:
          description: |-
              The header name
          type: string
        values:
          description: |-
              The header value
          type: array
          items:
            type: string
    fly.MachineInit:
      type: object
      properties:
        cmd:
          type: array
          items:
            type: string
        entrypoint:
          type: array
          items:
            type: string
        exec:
          type: array
          items:
            type: string
        kernel_args:
          type: array
          items:
            type: string
        swap_size_mb:
          type: integer
        tty:
          type: boolean
    fly.MachineMetrics:
      type: object
      properties:
        https:
          type: boolean
        path:
          type: string
        port:
          type: integer
    fly.MachineMount:
      type: object
      properties:
        add_size_gb:
          type: integer
        encrypted:
          type: boolean
        extend_threshold_percent:
          type: integer
        name:
          type: string
        path:
          type: string
        size_gb:
          type: integer
        size_gb_limit:
          type: integer
        volume:
          type: string
    fly.MachinePort:
      type: object
      properties:
        end_port:
          type: integer
        force_https:
          type: boolean
        handlers:
          type: array
          items:
            type: string
        http_options:
          $ref: '#/components/schemas/fly.HTTPOptions'
        port:
          type: integer
        proxy_proto_options:
          $ref: '#/components/schemas/fly.ProxyProtoOptions'
        start_port:
          type: integer
        tls_options:
          $ref: '#/components/schemas/fly.TLSOptions'
    fly.MachineProcess:
      type: object
      properties:
        cmd:
          type: array
          items:
            type: string
        entrypoint:
          type: array
          items:
            type: string
        env:
          type: object
          additionalProperties:
            type: string
        env_from:
          description: |-
              EnvFrom can be provided to set environment variables from machine fields.
          type: array
          items:
            $ref: '#/components/schemas/fly.EnvFrom'
        exec:
          type: array
          items:
            type: string
        ignore_app_secrets:
          description: |-
              IgnoreAppSecrets can be set to true to ignore the secrets for the App the Machine belongs to
              and only use the secrets provided at the process level. The default/legacy behavior is to use
              the secrets provided at the App level.
          type: boolean
        secrets:
          description: |-
              Secrets can be provided at the process level to explicitly indicate which secrets should be
              used for the process. If not provided, the secrets provided at the machine level will be used.
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineSecret'
        user:
          type: string
    fly.MachineRestart:
      description: |-
          The Machine restart policy defines whether and how flyd restarts a Machine after its main process exits. See https://fly.io/docs/machines/guides-examples/machine-restart-policy/.
      type: object
      properties:
        gpu_bid_price:
          description: |-
              GPU bid price for spot Machines.
          type: number
        max_retries:
          description: |-
              When policy is on-failure, the maximum number of times to attempt to restart the Machine before letting it stop.
          type: integer
        policy:
          description: |-
              * no - Never try to restart a Machine automatically when its main process exits, whether that’s on purpose or on a crash.
              * always - Always restart a Machine automatically and never let it enter a stopped state, even when the main process exits cleanly.
              * on-failure - Try up to MaxRetries times to automatically restart the Machine if it exits with a non-zero exit code. Default when no explicit policy is set, and for Machines with schedules.
              * spot-price - Starts the Machine only when there is capacity and the spot price is less than or equal to the bid price.
          type: string
          enum:
            - no
            - always
            - on-failure
            - spot-price
    fly.MachineSecret:
      description: |-
          A Secret needing to be set in the environment of the Machine. env_var is required
      type: object
      properties:
        env_var:
          description: |-
              EnvVar is required and is the name of the environment variable that will be set from the
              secret. It must be a valid environment variable name.
          type: string
        name:
          description: |-
              Name is optional and when provided is used to reference a secret name where the EnvVar is
              different from what was set as the secret name.
          type: string
    fly.MachineService:
      type: object
      properties:
        autostart:
          type: boolean
        autostop:
          description: |-
              Accepts a string (new format) or a boolean (old format). For backward compatibility with older clients, the API continues to use booleans for "off" and "stop" in responses.
              * "off" or false - Do not autostop the Machine.
              * "stop" or true - Automatically stop the Machine.
              * "suspend" - Automatically suspend the Machine, falling back to a full stop if this is not possible.
          type: string
          enum:
            - off
            - stop
            - suspend
        checks:
          type: array
          items:
            $ref: '#/components/schemas/fly.MachineCheck'
        concurrency:
          $ref: '#/components/schemas/fly.MachineServiceConcurrency'
        force_instance_description:
          type: string
        force_instance_key:
          type: string
        internal_port:
          type: integer
        min_machines_running:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/fly.MachinePort'
        protocol:
          type: string
    fly.MachineServiceConcurrency:
      type: object
      properties:
        hard_limit:
          type: integer
        soft_limit:
          type: integer
        type:
          type: string
    fly.ProxyProtoOptions:
      type: object
      properties:
        version:
          type: string
    fly.Static:
      type: object
      properties:
        guest_path:
          type: string
        index_document:
          type: string
        tigris_bucket:
          type: string
        url_prefix:
          type: string
      required:
        - guest_path
        - url_prefix
    fly.StopConfig:
      type: object
      properties:
        signal:
          type: string
        timeout:
          $ref: '#/components/schemas/fly.Duration'
    fly.TCPHealthcheck:
      type: object
      properties:
        port:
          description: |-
              The port to connect to, often the same as internal_port
          type: integer
    fly.TLSOptions:
      type: object
      properties:
        alpn:
          type: array
          items:
            type: string
        default_self_signed:
          type: boolean
        versions:
          type: array
          items:
            type: string
    fly.TempDirVolume:
      type: object
      properties:
        size_mb:
          description: |-
              The size limit of the temp dir, only applicable when using disk backed storage.
          type: integer
        storage_type:
          description: |-
              The type of storage used to back the temp dir. Either disk or memory.
          type: string
    fly.UnhealthyPolicy:
      type: string
      enum:
        - stop
      x-enum-varnames:
        - UnhealthyPolicyStop
    fly.VolumeConfig:
      type: object
      properties:
        name:
          description: |-
              The name of the volume. A volume must have a unique name within an app
          type: string
        temp_dir:
          $ref: '#/components/schemas/fly.TempDirVolume'
    fly.dnsForwardRule:
      type: object
      properties:
        addr:
          type: string
        basename:
          type: string
    fly.dnsOption:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    flydv1.ExecResponse:
      type: object
      properties:
        exit_code:
          type: integer
        exit_signal:
          type: integer
        stderr:
          type: string
        stdout:
          type: string
    main.statusCode:
      type: string
      enum:
        - unknown
        - insufficient_capacity
      x-enum-varnames:
        - unknown
        - capacityErr
externalDocs:
  url: https://fly.io/docs/machines/working-with-machines/
tags:
  - name: Apps
    description: "This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https:\/\/fly.io\/docs\/machines\/api\/apps-resource\/) for details about using the Apps resource."
  - name: Machines
    description: "This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https:\/\/fly.io\/docs\/machines\/api\/machines-resource\/) for details about using the Machines resource."
  - name: Volumes
    description: "This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https:\/\/fly.io\/docs\/machines\/api\/volumes-resource\/) for details about using the Volumes resource."
x-original-swagger-version: "2.0"
