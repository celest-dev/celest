import 'package:celest/celest.dart';
import 'dart:typed_data';

import 'package:celest_backend/models/parameter_types.dart';

@cloud
Future<void> simple(
  String aString,
  int anInt,
  double aDouble,
  bool aBool,
  MyEnum anEnum,
  Null aNull,
  BigInt aBigInt,
  DateTime aDateTime,
  Duration aDuration,
  RegExp aRegExp,
  StackTrace aStackTrace,
  Uri aUri,
  UriData aUriData,
  Uint8List aUint8List,
  Iterable<String> anIterableOfString,
  Iterable<Uint8List> anIterableOfUint8List,
  List<String> aListOfString,
  List<int> aListOfInt,
  List<double> aListOfDouble,
  List<bool> aListOfBool,
  List<MyEnum> aListOfEnum,
  List<Null> aListOfNull,
  List<BigInt> aListOfBigInt,
  List<DateTime> aListOfDateTime,
  List<Duration> aListOfDuration,
  List<RegExp> aListOfRegExp,
  List<StackTrace> aListOfStackTrace,
  List<Uri> aListOfUri,
  List<UriData> aListOfUriData,
  List<Uint8List> aListOfUint8List,
  Map<String, String> aMapOfString,
  Map<String, int> aMapOfInt,
  Map<String, double> aMapOfDouble,
  Map<String, bool> aMapOfBool,
  Map<String, MyEnum> aMapOfEnum,
  Map<String, Null> aMapOfNull,
  Map<String, BigInt> aMapOfBigInt,
  Map<String, DateTime> aMapOfDateTime,
  Map<String, Duration> aMapOfDuration,
  Map<String, RegExp> aMapOfRegExp,
  Map<String, StackTrace> aMapOfStackTrace,
  Map<String, Uri> aMapOfUri,
  Map<String, UriData> aMapOfUriData,
  Map<String, Uint8List> aMapOfUint8List,
  // TODO: Map<String, Object?> / Map<String, dynamic>
) async {}

@cloud
Future<void> simpleOptional(
  String? aString,
  int? anInt,
  double? aDouble,
  bool? aBool,
  MyEnum? anEnum,
  Null aNull,
  BigInt? aBigInt,
  DateTime? aDateTime,
  Duration? aDuration,
  RegExp? aRegExp,
  StackTrace? aStackTrace,
  Uri? aUri,
  UriData? aUriData,
  Uint8List? aUint8List,
  Iterable<String>? anIterableOfString,
  Iterable<Uint8List>? anIterableOfUint8List,
  List<String>? aListOfString,
  List<int>? aListOfInt,
  List<double>? aListOfDouble,
  List<bool>? aListOfBool,
  List<MyEnum>? aListOfEnum,
  List<Null>? aListOfNull,
  List<BigInt>? aListOfBigInt,
  List<DateTime>? aListOfDateTime,
  List<Duration>? aListOfDuration,
  List<RegExp>? aListOfRegExp,
  List<StackTrace>? aListOfStackTrace,
  List<Uri>? aListOfUri,
  List<UriData>? aListOfUriData,
  List<Uint8List>? aListOfUint8List,
  Map<String, String>? aMapOfString,
  Map<String, int>? aMapOfInt,
  Map<String, double>? aMapOfDouble,
  Map<String, bool>? aMapOfBool,
  Map<String, MyEnum>? aMapOfEnum,
  Map<String, Null>? aMapOfNull,
  Map<String, BigInt>? aMapOfBigInt,
  Map<String, DateTime>? aMapOfDateTime,
  Map<String, Duration>? aMapOfDuration,
  Map<String, RegExp>? aMapOfRegExp,
  Map<String, StackTrace>? aMapOfStackTrace,
  Map<String, Uri>? aMapOfUri,
  Map<String, UriData>? aMapOfUriData,
  Map<String, Uint8List>? aMapOfUint8List,
) async {}

@cloud
Future<void> complex(
  SimpleStruct aSimpleStruct,
  ComplexStruct aComplexStruct,
  SimpleClass aSimpleClass,
  ComplexClass aComplexClass,
  SimpleStruct? aNullableSimpleStruct,
  ComplexStruct? aNullableComplexStruct,
  SimpleClass? aNullableSimpleClass,
  ComplexClass? aNullableComplexClass,
  Iterable<SimpleStruct> anIterableOfSimpleStruct,
  Iterable<ComplexStruct> anIterableOfComplexStruct,
  Iterable<SimpleClass> anIterableOfSimpleClass,
  Iterable<ComplexClass> anIterableOfComplexClass,
  Iterable<SimpleStruct>? aNullableIterableOfSimpleStruct,
  Iterable<ComplexStruct>? aNullableIterableOfComplexStruct,
  Iterable<SimpleClass>? aNullableIterableOfSimpleClass,
  Iterable<ComplexClass>? aNullableIterableOfComplexClass,
  Iterable<SimpleStruct?> anIterableOfNullableSimpleStruct,
  Iterable<ComplexStruct?> anIterableOfNullableComplexStruct,
  Iterable<SimpleClass?> anIterableOfNullableSimpleClass,
  Iterable<ComplexClass?> anIterableOfNullableComplexClass,
  List<SimpleStruct> aListOfSimpleStruct,
  List<ComplexStruct> aListOfComplexStruct,
  List<SimpleClass> aListOfSimpleClass,
  List<ComplexClass> aListOfComplexClass,
  List<SimpleStruct>? aNullableListOfSimpleStruct,
  List<ComplexStruct>? aNullableListOfComplexStruct,
  List<SimpleClass>? aNullableListOfSimpleClass,
  List<ComplexClass>? aNullableListOfComplexClass,
  List<SimpleStruct?> aListOfNullableSimpleStruct,
  List<ComplexStruct?> aListOfNullableComplexStruct,
  List<SimpleClass?> aListOfNullableSimpleClass,
  List<ComplexClass?> aListOfNullableComplexClass,
  Map<String, SimpleStruct> aMapOfSimpleStruct,
  Map<String, ComplexStruct> aMapOfComplexStruct,
  Map<String, SimpleClass> aMapOfSimpleClass,
  Map<String, ComplexClass> aMapOfComplexClass,
  Map<String, SimpleStruct>? aNullableMapOfSimpleStruct,
  Map<String, ComplexStruct>? aNullableMapOfComplexStruct,
  Map<String, SimpleClass>? aNullableMapOfSimpleClass,
  Map<String, ComplexClass>? aNullableMapOfComplexClass,
  Map<String, SimpleStruct?> aMapOfNullableSimpleStruct,
  Map<String, ComplexStruct?> aMapOfNullableComplexStruct,
  Map<String, SimpleClass?> aMapOfNullableSimpleClass,
  Map<String, ComplexClass?> aMapOfNullableComplexClass,
  Map<String, SimpleStruct?>? aNullableMapOfNullableSimpleStruct,
  Map<String, ComplexStruct?>? aNullableMapOfNullableComplexStruct,
  Map<String, SimpleClass?>? aNullableMapOfNullableSimpleClass,
  Map<String, ComplexClass?>? aNullableMapOfNullableComplexClass,
) async {}
