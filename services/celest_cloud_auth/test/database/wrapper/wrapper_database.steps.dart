// dart format width=80
import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'dart:typed_data' as i2;
import 'package:drift/drift.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class Schema2 extends i0.VersionedSchema {
  Schema2({required super.database}) : super(version: 2);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    cloudAuthUsers,
    cedarTypes,
    cedarEntities,
    cloudAuthUsersCreateTrg,
    cedarRelationships,
    cloudAuthUsersDeleteTrg,
    cloudAuthUserEmails,
    cloudAuthUserPhoneNumbers,
    cloudAuthUsersView,
    cloudAuthProjects,
    cloudAuthApis,
    cloudAuthApisProjectIdx,
    cloudAuthApisCreateTrg,
    cloudAuthApisDeleteTrg,
    cloudAuthFunctions,
    cloudAuthFunctionsApiIdx,
    cloudAuthFunctionsCreateTrg,
    cloudAuthFunctionsDeleteTrg,
    cloudAuthMeta,
    i1.OnCreateQuery(
        'INSERT INTO cloud_auth_meta (schema_version) VALUES (6) ON CONFLICT DO NOTHING'),
    cloudAuthCryptoKeys,
    cloudAuthSessions,
    cloudAuthCryptoKeysExternalCryptoKeyIdIdx,
    cloudAuthSessionsUserIdx,
    cloudAuthSessionsCryptoKeyIdx,
    cloudAuthSessionsExternalSessionIdIdx,
    cloudAuthSessionsUpdateTimeTrg,
    cloudAuthOtpCodes,
    cloudAuthOtpCodesSessionIdIdx,
    cloudAuthCorks,
    cloudAuthCorksCryptoKeyIdx,
    cloudAuthCorksBearerIdx,
    cloudAuthCorksAudienceIdx,
    cloudAuthCorksIssuerIdx,
    cedarRelationshipsFkEntityIdx,
    cedarRelationshipsFkParentIdx,
    cedarPolicies,
    cedarPolicyTemplates,
    cedarPolicyTemplateLinks,
    cedarPolicyTemplateLinksFkTemplateIdIdx,
    cedarPolicyTemplateLinksFkPrincipalIdx,
    cedarPolicyTemplateLinksFkResourceIdx,
    cedarAuthorizationLogs,
    test,
  ];
  late final Shape0 cloudAuthUsers = Shape0(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_users',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 cedarTypes = Shape1(
      source: i0.VersionedTable(
        entityName: 'cedar_types',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_7,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 cedarEntities = Shape2(
      source: i0.VersionedTable(
        entityName: 'cedar_entities',
        withoutRowId: true,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cedar_entities_pk PRIMARY KEY(entity_type, entity_id)ON CONFLICT IGNORE',
        ],
        columns: [
          _column_8,
          _column_9,
          _column_10,
          _column_11,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Trigger cloudAuthUsersCreateTrg = i1.Trigger(
      'CREATE TRIGGER IF NOT EXISTS cloud_auth_users_create_trg BEFORE INSERT ON cloud_auth_users BEGIN INSERT INTO cedar_entities (entity_type, entity_id) VALUES (\'Celest::User\', NEW.user_id);END',
      'cloud_auth_users_create_trg');
  late final Shape3 cedarRelationships = Shape3(
      source: i0.VersionedTable(
        entityName: 'cedar_relationships',
        withoutRowId: true,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cedar_relationships_pk PRIMARY KEY(entity_type, entity_id, parent_type, parent_id)ON CONFLICT IGNORE',
          'CONSTRAINT cedar_relationships_fk_entity FOREIGN KEY(entity_type, entity_id)REFERENCES cedar_entities(entity_type, entity_id)ON UPDATE CASCADE ON DELETE CASCADE',
          'CONSTRAINT cedar_relationships_fk_parent FOREIGN KEY(parent_type, parent_id)REFERENCES cedar_entities(entity_type, entity_id)ON UPDATE CASCADE ON DELETE CASCADE',
        ],
        columns: [
          _column_12,
          _column_9,
          _column_11,
          _column_13,
          _column_14,
          _column_15,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Trigger cloudAuthUsersDeleteTrg = i1.Trigger(
      'CREATE TRIGGER IF NOT EXISTS cloud_auth_users_delete_trg AFTER DELETE ON cloud_auth_users BEGIN DELETE FROM cedar_relationships WHERE(entity_type = \'Celest::User\' AND entity_id = OLD.user_id)OR(parent_type = \'Celest::User\' AND parent_id = OLD.user_id);DELETE FROM cedar_entities WHERE entity_id = OLD.user_id AND entity_type = \'Celest::User\';END',
      'cloud_auth_users_delete_trg');
  late final Shape4 cloudAuthUserEmails = Shape4(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_user_emails',
        withoutRowId: true,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cloud_auth_user_emails_pk PRIMARY KEY(user_id, email)',
          'CONSTRAINT cloud_auth_user_emails_user_fk FOREIGN KEY(user_id)REFERENCES cloud_auth_users(user_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
        ],
        columns: [
          _column_16,
          _column_17,
          _column_18,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 cloudAuthUserPhoneNumbers = Shape5(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_user_phone_numbers',
        withoutRowId: true,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cloud_auth_user_phone_numbers_pk PRIMARY KEY(user_id, phone_number)',
          'CONSTRAINT cloud_auth_user_phone_numbers_user_fk FOREIGN KEY(user_id)REFERENCES cloud_auth_users(user_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
        ],
        columns: [
          _column_16,
          _column_20,
          _column_18,
          _column_19,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 cloudAuthUsersView = Shape6(
      source: i0.VersionedView(
        entityName: 'cloud_auth_users_view',
        createViewStmt:
            'CREATE VIEW IF NOT EXISTS cloud_auth_users_view AS SELECT cloud_auth_users.*, (SELECT json_group_array(json_object(\'email\', email, \'isVerified\', iif(is_verified, json(\'true\'), json(\'false\')), \'isPrimary\', iif(is_primary, json(\'true\'), json(\'false\')))) FROM cloud_auth_user_emails WHERE user_id = cloud_auth_users.user_id) AS emails, (SELECT json_group_array(json_object(\'phoneNumber\', phone_number, \'isVerified\', iif(is_verified, json(\'true\'), json(\'false\')), \'isPrimary\', iif(is_primary, json(\'true\'), json(\'false\')))) FROM cloud_auth_user_phone_numbers WHERE user_id = cloud_auth_users.user_id) AS phone_numbers, (SELECT json_group_array(json_object(\'type\', \'Celest::Role\', \'id\', parent_id)) FROM cedar_relationships WHERE entity_type = \'Celest::User\' AND entity_id = cloud_auth_users.user_id AND parent_type = \'Celest::Role\') AS roles FROM cloud_auth_users;',
        columns: [
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 cloudAuthProjects = Shape7(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_projects',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_31,
          _column_32,
          _column_33,
          _column_34,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 cloudAuthApis = Shape8(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_apis',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cloud_auth_apis_project_fk FOREIGN KEY(project_id)REFERENCES cloud_auth_projects(project_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
        ],
        columns: [
          _column_35,
          _column_36,
          _column_33,
          _column_34,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Index cloudAuthApisProjectIdx = i1.Index(
      'cloud_auth_apis_project_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_apis_project_idx ON cloud_auth_apis (project_id)');
  final i1.Trigger cloudAuthApisCreateTrg = i1.Trigger(
      'CREATE TRIGGER IF NOT EXISTS cloud_auth_apis_create_trg BEFORE INSERT ON cloud_auth_apis BEGIN INSERT INTO cedar_entities (entity_type, entity_id) VALUES (\'Celest::Api\', NEW.api_id);END',
      'cloud_auth_apis_create_trg');
  final i1.Trigger cloudAuthApisDeleteTrg = i1.Trigger(
      'CREATE TRIGGER IF NOT EXISTS cloud_auth_apis_delete_trg AFTER DELETE ON cloud_auth_apis BEGIN DELETE FROM cedar_relationships WHERE entity_type = \'Celest::Api\' AND entity_id = OLD.api_id;DELETE FROM cedar_relationships WHERE parent_type = \'Celest::Api\' AND parent_id = OLD.api_id;DELETE FROM cedar_entities WHERE entity_type = \'Celest::Api\' AND entity_id = OLD.api_id;END',
      'cloud_auth_apis_delete_trg');
  late final Shape9 cloudAuthFunctions = Shape9(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_functions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cloud_auth_functions_api_fk FOREIGN KEY(api_id)REFERENCES cloud_auth_apis(api_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
        ],
        columns: [
          _column_37,
          _column_38,
          _column_33,
          _column_34,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Index cloudAuthFunctionsApiIdx = i1.Index(
      'cloud_auth_functions_api_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_functions_api_idx ON cloud_auth_functions (api_id)');
  final i1.Trigger cloudAuthFunctionsCreateTrg = i1.Trigger(
      'CREATE TRIGGER IF NOT EXISTS cloud_auth_functions_create_trg BEFORE INSERT ON cloud_auth_functions BEGIN INSERT INTO cedar_entities (entity_type, entity_id) VALUES (\'Celest::Function\', NEW.function_id);INSERT INTO cedar_relationships (entity_type, entity_id, parent_type, parent_id) VALUES (\'Celest::Function\', NEW.function_id, \'Celest::Api\', NEW.api_id);END',
      'cloud_auth_functions_create_trg');
  final i1.Trigger cloudAuthFunctionsDeleteTrg = i1.Trigger(
      'CREATE TRIGGER IF NOT EXISTS cloud_auth_functions_delete_trg AFTER DELETE ON cloud_auth_functions BEGIN DELETE FROM cedar_relationships WHERE entity_type = \'Celest::Function\' AND entity_id = OLD.function_id;DELETE FROM cedar_relationships WHERE parent_type = \'Celest::Function\' AND parent_id = OLD.function_id;DELETE FROM cedar_entities WHERE entity_type = \'Celest::Function\' AND entity_id = OLD.function_id;END',
      'cloud_auth_functions_delete_trg');
  late final Shape10 cloudAuthMeta = Shape10(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_meta',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_39,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 cloudAuthCryptoKeys = Shape11(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_crypto_keys',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CHECK(key_material IS NOT NULL OR external_crypto_key_id IS NOT NULL)',
        ],
        columns: [
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 cloudAuthSessions = Shape12(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_sessions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cloud_auth_sessions_user_fk FOREIGN KEY(user_id)REFERENCES cloud_auth_users(user_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
          'CONSTRAINT cloud_auth_sessions_key_fk FOREIGN KEY(crypto_key_id)REFERENCES cloud_auth_crypto_keys(crypto_key_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
        ],
        columns: [
          _column_45,
          _column_46,
          _column_47,
          _column_16,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
          _column_5,
          _column_6,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Index cloudAuthCryptoKeysExternalCryptoKeyIdIdx = i1.Index(
      'cloud_auth_crypto_keys_external_crypto_key_id_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_crypto_keys_external_crypto_key_id_idx ON cloud_auth_crypto_keys (external_crypto_key_id)');
  final i1.Index cloudAuthSessionsUserIdx = i1.Index(
      'cloud_auth_sessions_user_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_sessions_user_idx ON cloud_auth_sessions (user_id)');
  final i1.Index cloudAuthSessionsCryptoKeyIdx = i1.Index(
      'cloud_auth_sessions_crypto_key_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_sessions_crypto_key_idx ON cloud_auth_sessions (crypto_key_id)');
  final i1.Index cloudAuthSessionsExternalSessionIdIdx = i1.Index(
      'cloud_auth_sessions_external_session_id_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_sessions_external_session_id_idx ON cloud_auth_sessions (external_session_id)');
  final i1.Trigger cloudAuthSessionsUpdateTimeTrg = i1.Trigger(
      'CREATE TRIGGER IF NOT EXISTS cloud_auth_sessions_update_time_trg AFTER UPDATE ON cloud_auth_sessions BEGIN UPDATE cloud_auth_sessions SET update_time = unixepoch(\'now\', \'subsec\') WHERE "rowid" = OLD."rowid";END',
      'cloud_auth_sessions_update_time_trg');
  late final Shape13 cloudAuthOtpCodes = Shape13(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_otp_codes',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cloud_auth_otp_codes_session_id_fk FOREIGN KEY(session_id)REFERENCES cloud_auth_sessions(session_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
        ],
        columns: [
          _column_45,
          _column_46,
          _column_54,
          _column_55,
          _column_56,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Index cloudAuthOtpCodesSessionIdIdx = i1.Index(
      'cloud_auth_otp_codes_session_id_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_otp_codes_session_id_idx ON cloud_auth_otp_codes (session_id)');
  late final Shape14 cloudAuthCorks = Shape14(
      source: i0.VersionedTable(
        entityName: 'cloud_auth_corks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CONSTRAINT cloud_auth_corks_crypto_key_fk FOREIGN KEY(crypto_key_id)REFERENCES cloud_auth_crypto_keys(crypto_key_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
          'CONSTRAINT cloud_auth_corks_bearer_fk FOREIGN KEY(bearer_type, bearer_id)REFERENCES cedar_entities(entity_type, entity_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
          'CONSTRAINT cloud_auth_corks_audience_fk FOREIGN KEY(audience_type, audience_id)REFERENCES cedar_entities(entity_type, entity_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
          'CONSTRAINT cloud_auth_corks_issuer_fk FOREIGN KEY(issuer_type, issuer_id)REFERENCES cedar_entities(entity_type, entity_id)ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED',
        ],
        columns: [
          _column_57,
          _column_47,
          _column_58,
          _column_59,
          _column_60,
          _column_61,
          _column_62,
          _column_63,
          _column_5,
          _column_64,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Index cloudAuthCorksCryptoKeyIdx = i1.Index(
      'cloud_auth_corks_crypto_key_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_corks_crypto_key_idx ON cloud_auth_corks (crypto_key_id)');
  final i1.Index cloudAuthCorksBearerIdx = i1.Index(
      'cloud_auth_corks_bearer_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_corks_bearer_idx ON cloud_auth_corks (bearer_type, bearer_id)');
  final i1.Index cloudAuthCorksAudienceIdx = i1.Index(
      'cloud_auth_corks_audience_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_corks_audience_idx ON cloud_auth_corks (audience_type, audience_id)');
  final i1.Index cloudAuthCorksIssuerIdx = i1.Index(
      'cloud_auth_corks_issuer_idx',
      'CREATE INDEX IF NOT EXISTS cloud_auth_corks_issuer_idx ON cloud_auth_corks (issuer_type, issuer_id)');
  final i1.Index cedarRelationshipsFkEntityIdx = i1.Index(
      'cedar_relationships_fk_entity_idx',
      'CREATE INDEX IF NOT EXISTS cedar_relationships_fk_entity_idx ON cedar_relationships (entity_type, entity_id)');
  final i1.Index cedarRelationshipsFkParentIdx = i1.Index(
      'cedar_relationships_fk_parent_idx',
      'CREATE INDEX IF NOT EXISTS cedar_relationships_fk_parent_idx ON cedar_relationships (parent_type, parent_id)');
  late final Shape15 cedarPolicies = Shape15(
      source: i0.VersionedTable(
        entityName: 'cedar_policies',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CHECK(enforcement_level IN (0, 1))',
        ],
        columns: [
          _column_66,
          _column_67,
          _column_68,
          _column_69,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape16 cedarPolicyTemplates = Shape16(
      source: i0.VersionedTable(
        entityName: 'cedar_policy_templates',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CHECK(template IS NOT NULL OR template IS NOT NULL)',
        ],
        columns: [
          _column_66,
          _column_70,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 cedarPolicyTemplateLinks = Shape17(
      source: i0.VersionedTable(
        entityName: 'cedar_policy_template_links',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'CHECK(principal_type IS NOT NULL AND principal_id IS NOT NULL OR resource_type IS NOT NULL AND resource_id IS NOT NULL)',
          'CHECK(enforcement_level IN (0, 1))',
          'CONSTRAINT cedar_policy_template_links_fk_template_id FOREIGN KEY(template_id)REFERENCES cedar_policy_templates(template_id)ON UPDATE CASCADE ON DELETE CASCADE',
          'CONSTRAINT cedar_policy_template_links_fk_principal FOREIGN KEY(principal_type, principal_id)REFERENCES cedar_entities(entity_type, entity_id)ON DELETE CASCADE',
          'CONSTRAINT cedar_policy_template_links_fk_resource FOREIGN KEY(resource_type, resource_id)REFERENCES cedar_entities(entity_type, entity_id)ON DELETE CASCADE',
        ],
        columns: [
          _column_66,
          _column_67,
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
          _column_69,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  final i1.Index cedarPolicyTemplateLinksFkTemplateIdIdx = i1.Index(
      'cedar_policy_template_links_fk_template_id_idx',
      'CREATE INDEX IF NOT EXISTS cedar_policy_template_links_fk_template_id_idx ON cedar_policy_template_links (template_id)');
  final i1.Index cedarPolicyTemplateLinksFkPrincipalIdx = i1.Index(
      'cedar_policy_template_links_fk_principal_idx',
      'CREATE INDEX IF NOT EXISTS cedar_policy_template_links_fk_principal_idx ON cedar_policy_template_links (principal_type, principal_id)');
  final i1.Index cedarPolicyTemplateLinksFkResourceIdx = i1.Index(
      'cedar_policy_template_links_fk_resource_idx',
      'CREATE INDEX IF NOT EXISTS cedar_policy_template_links_fk_resource_idx ON cedar_policy_template_links (resource_type, resource_id)');
  late final Shape18 cedarAuthorizationLogs = Shape18(
      source: i0.VersionedTable(
        entityName: 'cedar_authorization_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_45,
          _column_77,
          _column_78,
          _column_73,
          _column_74,
          _column_79,
          _column_80,
          _column_75,
          _column_76,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 test = Shape19(
      source: i0.VersionedTable(
        entityName: 'test',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'FOREIGN KEY(user_id)REFERENCES cloud_auth_users(user_id)',
          'FOREIGN KEY(session_id)REFERENCES cloud_auth_sessions(session_id)',
        ],
        columns: [
          _column_16,
          _column_85,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get givenName =>
      columnsByName['given_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get familyName =>
      columnsByName['family_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<double> get createTime =>
      columnsByName['create_time']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get updateTime =>
      columnsByName['update_time']! as i1.GeneratedColumn<double>;
}

i1.GeneratedColumn<String> _column_0(String aliasedName) =>
    i1.GeneratedColumn<String>('user_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL PRIMARY KEY');
i1.GeneratedColumn<String> _column_1(String aliasedName) =>
    i1.GeneratedColumn<String>('given_name', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_2(String aliasedName) =>
    i1.GeneratedColumn<String>('family_name', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_3(String aliasedName) =>
    i1.GeneratedColumn<String>('time_zone', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_4(String aliasedName) =>
    i1.GeneratedColumn<String>('language_code', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<double> _column_5(String aliasedName) =>
    i1.GeneratedColumn<double>('create_time', aliasedName, false,
        type: i1.DriftSqlType.double,
        $customConstraints: 'NOT NULL DEFAULT (unixepoch(\'now\', \'subsec\'))',
        defaultValue: const CustomExpression('unixepoch(\'now\', \'subsec\')'));
i1.GeneratedColumn<double> _column_6(String aliasedName) =>
    i1.GeneratedColumn<double>('update_time', aliasedName, true,
        type: i1.DriftSqlType.double, $customConstraints: '');

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get fqn =>
      columnsByName['fqn']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_7(String aliasedName) =>
    i1.GeneratedColumn<String>('fqn', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL PRIMARY KEY');

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get entityType =>
      columnsByName['entity_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get entityId =>
      columnsByName['entity_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get attributeJson =>
      columnsByName['attribute_json']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get entityJson =>
      columnsByName['entity_json']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_8(String aliasedName) =>
    i1.GeneratedColumn<String>('entity_type', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL REFERENCES cedar_types(fqn)');
i1.GeneratedColumn<String> _column_9(String aliasedName) =>
    i1.GeneratedColumn<String>('entity_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_10(String aliasedName) =>
    i1.GeneratedColumn<String>('attribute_json', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL DEFAULT \'{}\'',
        defaultValue: const CustomExpression('\'{}\''));
i1.GeneratedColumn<String> _column_11(String aliasedName) => i1.GeneratedColumn<
        String>('entity_json', aliasedName, false,
    generatedAs: i1.GeneratedAs(
        const i1.CustomExpression(
            'json_object(\'type\', entity_type, \'id\', entity_id)'),
        false),
    type: i1.DriftSqlType.string,
    $customConstraints:
        'NOT NULL GENERATED ALWAYS AS (json_object(\'type\', entity_type, \'id\', entity_id)) VIRTUAL');

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get entityType =>
      columnsByName['entity_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get entityId =>
      columnsByName['entity_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get entityJson =>
      columnsByName['entity_json']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get parentType =>
      columnsByName['parent_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get parentId =>
      columnsByName['parent_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get parentJson =>
      columnsByName['parent_json']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_12(String aliasedName) =>
    i1.GeneratedColumn<String>('entity_type', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_13(String aliasedName) =>
    i1.GeneratedColumn<String>('parent_type', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_14(String aliasedName) =>
    i1.GeneratedColumn<String>('parent_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_15(String aliasedName) => i1.GeneratedColumn<
        String>('parent_json', aliasedName, false,
    generatedAs: i1.GeneratedAs(
        const i1.CustomExpression(
            'json_object(\'type\', parent_type, \'id\', parent_id)'),
        false),
    type: i1.DriftSqlType.string,
    $customConstraints:
        'NOT NULL GENERATED ALWAYS AS (json_object(\'type\', parent_type, \'id\', parent_id)) VIRTUAL');

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isVerified =>
      columnsByName['is_verified']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get isPrimary =>
      columnsByName['is_primary']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_16(String aliasedName) =>
    i1.GeneratedColumn<String>('user_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_17(String aliasedName) =>
    i1.GeneratedColumn<String>('email', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<bool> _column_18(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_verified', aliasedName, false,
        type: i1.DriftSqlType.bool,
        $customConstraints: 'NOT NULL DEFAULT FALSE',
        defaultValue: const CustomExpression('FALSE'));
i1.GeneratedColumn<bool> _column_19(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_primary', aliasedName, false,
        type: i1.DriftSqlType.bool,
        $customConstraints: 'NOT NULL DEFAULT FALSE',
        defaultValue: const CustomExpression('FALSE'));

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get phoneNumber =>
      columnsByName['phone_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isVerified =>
      columnsByName['is_verified']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get isPrimary =>
      columnsByName['is_primary']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_20(String aliasedName) =>
    i1.GeneratedColumn<String>('phone_number', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');

class Shape6 extends i0.VersionedView {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get givenName =>
      columnsByName['given_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get familyName =>
      columnsByName['family_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i1.DriftAny> get createTime =>
      columnsByName['create_time']! as i1.GeneratedColumn<i1.DriftAny>;
  i1.GeneratedColumn<i1.DriftAny> get updateTime =>
      columnsByName['update_time']! as i1.GeneratedColumn<i1.DriftAny>;
  i1.GeneratedColumn<String> get emails =>
      columnsByName['emails']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get phoneNumbers =>
      columnsByName['phone_numbers']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get roles =>
      columnsByName['roles']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_21(String aliasedName) =>
    i1.GeneratedColumn<String>('user_id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_22(String aliasedName) =>
    i1.GeneratedColumn<String>('given_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_23(String aliasedName) =>
    i1.GeneratedColumn<String>('family_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_24(String aliasedName) =>
    i1.GeneratedColumn<String>('time_zone', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_25(String aliasedName) =>
    i1.GeneratedColumn<String>('language_code', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<i1.DriftAny> _column_26(String aliasedName) =>
    i1.GeneratedColumn<i1.DriftAny>('create_time', aliasedName, false,
        type: i1.DriftSqlType.any);
i1.GeneratedColumn<i1.DriftAny> _column_27(String aliasedName) =>
    i1.GeneratedColumn<i1.DriftAny>('update_time', aliasedName, true,
        type: i1.DriftSqlType.any);
i1.GeneratedColumn<String> _column_28(String aliasedName) =>
    i1.GeneratedColumn<String>('emails', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_29(String aliasedName) =>
    i1.GeneratedColumn<String>('phone_numbers', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_30(String aliasedName) =>
    i1.GeneratedColumn<String>('roles', aliasedName, false,
        type: i1.DriftSqlType.string);

class Shape7 extends i0.VersionedTable {
  Shape7({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get projectId =>
      columnsByName['project_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get version =>
      columnsByName['version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get resolvedAst =>
      columnsByName['resolved_ast']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get etag =>
      columnsByName['etag']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_31(String aliasedName) =>
    i1.GeneratedColumn<String>('project_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL PRIMARY KEY');
i1.GeneratedColumn<String> _column_32(String aliasedName) =>
    i1.GeneratedColumn<String>('version', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<i2.Uint8List> _column_33(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('resolved_ast', aliasedName, false,
        type: i1.DriftSqlType.blob, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_34(String aliasedName) =>
    i1.GeneratedColumn<String>('etag', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');

class Shape8 extends i0.VersionedTable {
  Shape8({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get apiId =>
      columnsByName['api_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get projectId =>
      columnsByName['project_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get resolvedAst =>
      columnsByName['resolved_ast']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get etag =>
      columnsByName['etag']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_35(String aliasedName) =>
    i1.GeneratedColumn<String>('api_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL PRIMARY KEY');
i1.GeneratedColumn<String> _column_36(String aliasedName) =>
    i1.GeneratedColumn<String>('project_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');

class Shape9 extends i0.VersionedTable {
  Shape9({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get functionId =>
      columnsByName['function_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get apiId =>
      columnsByName['api_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get resolvedAst =>
      columnsByName['resolved_ast']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get etag =>
      columnsByName['etag']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_37(String aliasedName) =>
    i1.GeneratedColumn<String>('function_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL PRIMARY KEY');
i1.GeneratedColumn<String> _column_38(String aliasedName) =>
    i1.GeneratedColumn<String>('api_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');

class Shape10 extends i0.VersionedTable {
  Shape10({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get schemaVersion =>
      columnsByName['schema_version']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_39(String aliasedName) =>
    i1.GeneratedColumn<int>('schema_version', aliasedName, false,
        type: i1.DriftSqlType.int, $customConstraints: 'NOT NULL PRIMARY KEY');

class Shape11 extends i0.VersionedTable {
  Shape11({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<i2.Uint8List> get cryptoKeyId =>
      columnsByName['crypto_key_id']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get keyPurpose =>
      columnsByName['key_purpose']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get keyAlgorithm =>
      columnsByName['key_algorithm']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get keyMaterial =>
      columnsByName['key_material']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get externalCryptoKeyId =>
      columnsByName['external_crypto_key_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<i2.Uint8List> _column_40(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('crypto_key_id', aliasedName, false,
        type: i1.DriftSqlType.blob, $customConstraints: 'NOT NULL PRIMARY KEY');
i1.GeneratedColumn<String> _column_41(String aliasedName) =>
    i1.GeneratedColumn<String>('key_purpose', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_42(String aliasedName) =>
    i1.GeneratedColumn<String>('key_algorithm', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<i2.Uint8List> _column_43(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('key_material', aliasedName, true,
        type: i1.DriftSqlType.blob, $customConstraints: '');
i1.GeneratedColumn<String> _column_44(String aliasedName) =>
    i1.GeneratedColumn<String>('external_crypto_key_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: 'UNIQUE');

class Shape12 extends i0.VersionedTable {
  Shape12({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get rowid =>
      columnsByName['rowid']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get sessionId =>
      columnsByName['session_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get cryptoKeyId =>
      columnsByName['crypto_key_id']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<i2.Uint8List> get clientInfo =>
      columnsByName['client_info']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<i2.Uint8List> get authenticationFactor =>
      columnsByName['authentication_factor']!
          as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<i2.Uint8List> get state =>
      columnsByName['state']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get ipAddress =>
      columnsByName['ip_address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get externalSessionId =>
      columnsByName['external_session_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<double> get createTime =>
      columnsByName['create_time']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get updateTime =>
      columnsByName['update_time']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get expireTime =>
      columnsByName['expire_time']! as i1.GeneratedColumn<double>;
}

i1.GeneratedColumn<int> _column_45(String aliasedName) =>
    i1.GeneratedColumn<int>('rowid', aliasedName, false,
        hasAutoIncrement: true,
        type: i1.DriftSqlType.int,
        $customConstraints: 'PRIMARY KEY AUTOINCREMENT');
i1.GeneratedColumn<String> _column_46(String aliasedName) =>
    i1.GeneratedColumn<String>('session_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL UNIQUE');
i1.GeneratedColumn<i2.Uint8List> _column_47(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('crypto_key_id', aliasedName, false,
        type: i1.DriftSqlType.blob, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<i2.Uint8List> _column_48(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('client_info', aliasedName, true,
        type: i1.DriftSqlType.blob, $customConstraints: '');
i1.GeneratedColumn<i2.Uint8List> _column_49(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>(
        'authentication_factor', aliasedName, false,
        type: i1.DriftSqlType.blob, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<i2.Uint8List> _column_50(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('state', aliasedName, true,
        type: i1.DriftSqlType.blob, $customConstraints: '');
i1.GeneratedColumn<String> _column_51(String aliasedName) =>
    i1.GeneratedColumn<String>('ip_address', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_52(String aliasedName) =>
    i1.GeneratedColumn<String>('external_session_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<double> _column_53(String aliasedName) =>
    i1.GeneratedColumn<double>('expire_time', aliasedName, false,
        type: i1.DriftSqlType.double, $customConstraints: 'NOT NULL');

class Shape13 extends i0.VersionedTable {
  Shape13({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get rowid =>
      columnsByName['rowid']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get sessionId =>
      columnsByName['session_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get resendAttempt =>
      columnsByName['resend_attempt']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get verifyAttempt =>
      columnsByName['verify_attempt']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get updateTime =>
      columnsByName['update_time']! as i1.GeneratedColumn<double>;
}

i1.GeneratedColumn<int> _column_54(String aliasedName) =>
    i1.GeneratedColumn<int>('resend_attempt', aliasedName, false,
        type: i1.DriftSqlType.int,
        $customConstraints: 'NOT NULL DEFAULT 0',
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<int> _column_55(String aliasedName) =>
    i1.GeneratedColumn<int>('verify_attempt', aliasedName, false,
        type: i1.DriftSqlType.int,
        $customConstraints: 'NOT NULL DEFAULT 0',
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<double> _column_56(String aliasedName) =>
    i1.GeneratedColumn<double>('update_time', aliasedName, false,
        type: i1.DriftSqlType.double,
        $customConstraints: 'NOT NULL DEFAULT (unixepoch(\'now\', \'subsec\'))',
        defaultValue: const CustomExpression('unixepoch(\'now\', \'subsec\')'));

class Shape14 extends i0.VersionedTable {
  Shape14({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<i2.Uint8List> get corkId =>
      columnsByName['cork_id']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<i2.Uint8List> get cryptoKeyId =>
      columnsByName['crypto_key_id']! as i1.GeneratedColumn<i2.Uint8List>;
  i1.GeneratedColumn<String> get bearerType =>
      columnsByName['bearer_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get bearerId =>
      columnsByName['bearer_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get audienceType =>
      columnsByName['audience_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get audienceId =>
      columnsByName['audience_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get issuerType =>
      columnsByName['issuer_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get issuerId =>
      columnsByName['issuer_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<double> get createTime =>
      columnsByName['create_time']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get expireTime =>
      columnsByName['expire_time']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get lastUseTime =>
      columnsByName['last_use_time']! as i1.GeneratedColumn<double>;
}

i1.GeneratedColumn<i2.Uint8List> _column_57(String aliasedName) =>
    i1.GeneratedColumn<i2.Uint8List>('cork_id', aliasedName, false,
        type: i1.DriftSqlType.blob, $customConstraints: 'NOT NULL PRIMARY KEY');
i1.GeneratedColumn<String> _column_58(String aliasedName) =>
    i1.GeneratedColumn<String>('bearer_type', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_59(String aliasedName) =>
    i1.GeneratedColumn<String>('bearer_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_60(String aliasedName) =>
    i1.GeneratedColumn<String>('audience_type', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_61(String aliasedName) =>
    i1.GeneratedColumn<String>('audience_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_62(String aliasedName) =>
    i1.GeneratedColumn<String>('issuer_type', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_63(String aliasedName) =>
    i1.GeneratedColumn<String>('issuer_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<double> _column_64(String aliasedName) =>
    i1.GeneratedColumn<double>('expire_time', aliasedName, true,
        type: i1.DriftSqlType.double, $customConstraints: '');
i1.GeneratedColumn<double> _column_65(String aliasedName) =>
    i1.GeneratedColumn<double>('last_use_time', aliasedName, true,
        type: i1.DriftSqlType.double, $customConstraints: '');

class Shape15 extends i0.VersionedTable {
  Shape15({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get policyId =>
      columnsByName['policy_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get policy =>
      columnsByName['policy']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get enforcementLevel =>
      columnsByName['enforcement_level']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_66(String aliasedName) =>
    i1.GeneratedColumn<String>('id', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL PRIMARY KEY');
i1.GeneratedColumn<String> _column_67(String aliasedName) =>
    i1.GeneratedColumn<String>('policy_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL UNIQUE');
i1.GeneratedColumn<String> _column_68(String aliasedName) =>
    i1.GeneratedColumn<String>('policy', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<int> _column_69(String aliasedName) =>
    i1.GeneratedColumn<int>('enforcement_level', aliasedName, false,
        type: i1.DriftSqlType.int,
        $customConstraints: 'NOT NULL DEFAULT 1',
        defaultValue: const CustomExpression('1'));

class Shape16 extends i0.VersionedTable {
  Shape16({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get templateId =>
      columnsByName['template_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get template =>
      columnsByName['template']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_70(String aliasedName) =>
    i1.GeneratedColumn<String>('template_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL UNIQUE');
i1.GeneratedColumn<String> _column_71(String aliasedName) =>
    i1.GeneratedColumn<String>('template', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');

class Shape17 extends i0.VersionedTable {
  Shape17({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get policyId =>
      columnsByName['policy_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get templateId =>
      columnsByName['template_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get principalType =>
      columnsByName['principal_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get principalId =>
      columnsByName['principal_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get resourceType =>
      columnsByName['resource_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get resourceId =>
      columnsByName['resource_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get enforcementLevel =>
      columnsByName['enforcement_level']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<String> _column_72(String aliasedName) =>
    i1.GeneratedColumn<String>('template_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_73(String aliasedName) =>
    i1.GeneratedColumn<String>('principal_type', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_74(String aliasedName) =>
    i1.GeneratedColumn<String>('principal_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_75(String aliasedName) =>
    i1.GeneratedColumn<String>('resource_type', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_76(String aliasedName) =>
    i1.GeneratedColumn<String>('resource_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');

class Shape18 extends i0.VersionedTable {
  Shape18({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get rowid =>
      columnsByName['rowid']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get createTime =>
      columnsByName['create_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get expireTime =>
      columnsByName['expire_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get principalType =>
      columnsByName['principal_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get principalId =>
      columnsByName['principal_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get actionType =>
      columnsByName['action_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get actionId =>
      columnsByName['action_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get resourceType =>
      columnsByName['resource_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get resourceId =>
      columnsByName['resource_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get contextJson =>
      columnsByName['context_json']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get decision =>
      columnsByName['decision']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get reasonsJson =>
      columnsByName['reasons_json']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get errorsJson =>
      columnsByName['errors_json']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<DateTime> _column_77(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('create_time', aliasedName, false,
        type: i1.DriftSqlType.dateTime,
        $customConstraints: 'NOT NULL DEFAULT (unixepoch(\'now\', \'subsec\'))',
        defaultValue: const CustomExpression('unixepoch(\'now\', \'subsec\')'));
i1.GeneratedColumn<DateTime> _column_78(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('expire_time', aliasedName, true,
        type: i1.DriftSqlType.dateTime, $customConstraints: '');
i1.GeneratedColumn<String> _column_79(String aliasedName) =>
    i1.GeneratedColumn<String>('action_type', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_80(String aliasedName) =>
    i1.GeneratedColumn<String>('action_id', aliasedName, true,
        type: i1.DriftSqlType.string, $customConstraints: '');
i1.GeneratedColumn<String> _column_81(String aliasedName) =>
    i1.GeneratedColumn<String>('context_json', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL DEFAULT \'{}\'',
        defaultValue: const CustomExpression('\'{}\''));
i1.GeneratedColumn<bool> _column_82(String aliasedName) =>
    i1.GeneratedColumn<bool>('decision', aliasedName, false,
        type: i1.DriftSqlType.bool, $customConstraints: 'NOT NULL');
i1.GeneratedColumn<String> _column_83(String aliasedName) =>
    i1.GeneratedColumn<String>('reasons_json', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL DEFAULT \'[]\'',
        defaultValue: const CustomExpression('\'[]\''));
i1.GeneratedColumn<String> _column_84(String aliasedName) =>
    i1.GeneratedColumn<String>('errors_json', aliasedName, false,
        type: i1.DriftSqlType.string,
        $customConstraints: 'NOT NULL DEFAULT \'[]\'',
        defaultValue: const CustomExpression('\'[]\''));

class Shape19 extends i0.VersionedTable {
  Shape19({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get sessionId =>
      columnsByName['session_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_85(String aliasedName) =>
    i1.GeneratedColumn<String>('session_id', aliasedName, false,
        type: i1.DriftSqlType.string, $customConstraints: 'NOT NULL');
i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 1:
        final schema = Schema2(database: database);
        final migrator = i1.Migrator(database, schema);
        await from1To2(migrator, schema);
        return 2;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
}) =>
    i0.VersionedSchema.stepByStepHelper(
        step: migrationSteps(
      from1To2: from1To2,
    ));
